{"version":3,"sources":["webpack:///./node_modules/axios/lib/core/Axios.js","webpack:///./node_modules/axios/lib/helpers/spread.js","webpack:///./node_modules/axios/lib/helpers/bind.js","webpack:///./node_modules/axios/lib/defaults.js","webpack:///./node_modules/axios/lib/core/createError.js","webpack:///./node_modules/axios/lib/cancel/isCancel.js","webpack:///./node_modules/axios/lib/helpers/buildURL.js","webpack:///./node_modules/axios/lib/core/enhanceError.js","webpack:///./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack:///./node_modules/node-libs-browser/mock/process.js","webpack:///./node_modules/axios/lib/core/settle.js","webpack:///./node_modules/axios/lib/core/mergeConfig.js","webpack:///./node_modules/axios/lib/core/dispatchRequest.js","webpack:///./node_modules/axios/lib/helpers/isAxiosError.js","webpack:///./node_modules/vue-router/dist/vue-router.esm-bundler.js","webpack:///./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","webpack:///./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js","webpack:///./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js","webpack:///./node_modules/axios/lib/cancel/Cancel.js","webpack:///./node_modules/axios/lib/helpers/cookies.js","webpack:///./node_modules/axios/lib/core/buildFullPath.js","webpack:///./node_modules/axios/lib/cancel/CancelToken.js","webpack:///./node_modules/register-service-worker/index.js","webpack:///./node_modules/@vue/shared/dist/shared.esm-bundler.js","webpack:///./node_modules/axios/lib/adapters/xhr.js","webpack:///./node_modules/axios/index.js","webpack:///./node_modules/axios/lib/helpers/parseHeaders.js","webpack:///./node_modules/axios/lib/core/transformData.js","webpack:///./node_modules/axios/lib/utils.js","webpack:///./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/axios/lib/axios.js","webpack:///./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack:///./node_modules/path-browserify/index.js","webpack:///./node_modules/axios/lib/helpers/combineURLs.js","webpack:///./node_modules/axios/lib/core/InterceptorManager.js"],"names":["utils","buildURL","InterceptorManager","dispatchRequest","mergeConfig","Axios","instanceConfig","this","defaults","interceptors","request","response","prototype","config","arguments","url","method","toLowerCase","chain","undefined","promise","Promise","resolve","forEach","interceptor","unshift","fulfilled","rejected","push","length","then","shift","getUri","params","paramsSerializer","replace","data","module","exports","callback","arr","apply","fn","thisArg","args","Array","i","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","headers","value","isUndefined","getDefaultAdapter","adapter","XMLHttpRequest","process","Object","toString","call","transformRequest","isFormData","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","isObject","JSON","stringify","transformResponse","parse","e","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","status","common","merge","enhanceError","message","code","error","Error","__CANCEL__","encode","val","encodeURIComponent","serializedParams","parts","key","isArray","v","isDate","toISOString","join","hashmarkIndex","indexOf","slice","isAxiosError","toJSON","name","description","number","fileName","lineNumber","columnNumber","stack","isStandardBrowserEnv","originURL","msie","test","navigator","userAgent","urlParsingNode","document","createElement","resolveURL","href","setAttribute","protocol","host","search","hash","hostname","port","pathname","charAt","window","location","requestURL","parsed","isString","nextTick","setTimeout","platform","arch","execPath","title","pid","browser","env","argv","binding","path","cwd","chdir","dir","exit","kill","umask","dlopen","uptime","memoryUsage","uvCounters","features","createError","reject","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","directMergeKeys","getMergedValue","target","source","isPlainObject","mergeDeepProperties","prop","axiosKeys","concat","otherKeys","keys","filter","transformData","isCancel","throwIfCancellationRequested","cancelToken","throwIfRequested","reason","payload","hasSymbol","Symbol","toStringTag","PolySymbol","matchedRouteKey","viewDepthKey","routerKey","routeLocationKey","routerViewLocationKey","isBrowser","isESModule","obj","__esModule","assign","applyToParams","newParams","map","noop","TRAILING_SLASH_RE","removeTrailingSlash","parseURL","parseQuery","currentLocation","query","searchString","searchPos","hashPos","resolveRelativePath","fullPath","stringifyURL","stringifyQuery","stripBase","base","isSameRouteLocation","a","b","aLastIndex","matched","bLastIndex","isSameRouteRecord","isSameRouteLocationParams","aliasOf","isSameRouteLocationParamsValue","isEquivalentArray","every","to","from","startsWith","fromSegments","split","toSegments","toPosition","segment","position","NavigationType","NavigationDirection","normalizeBase","baseEl","querySelector","getAttribute","BEFORE_HASH_RE","createHref","getElementPosition","el","offset","docRect","documentElement","getBoundingClientRect","elRect","behavior","left","top","computeScrollPosition","pageXOffset","pageYOffset","scrollToPosition","scrollToOptions","positionEl","isIdSelector","getElementById","style","scrollTo","getScrollKey","delta","history","state","scrollPositions","Map","saveScrollPosition","scrollPosition","set","getSavedScrollPosition","scroll","get","delete","createBaseLocation","createCurrentLocation","pathFromHash","useHistoryListeners","historyState","listeners","teardowns","pauseState","popStateHandler","fromState","listener","type","pop","direction","forward","back","unknown","pauseListeners","listen","teardown","index","splice","beforeUnloadListener","replaceState","destroy","removeEventListener","addEventListener","buildState","current","replaced","computeScroll","useHistoryStateNavigation","changeLocation","hashIndex","err","console","currentState","createWebHistory","historyNavigation","historyListeners","go","triggerListeners","routerHistory","bind","defineProperty","createWebHashHistory","isRouteLocation","route","isRouteName","START_LOCATION_NORMALIZED","meta","redirectedFrom","NavigationFailureSymbol","NavigationFailureType","createRouterError","isNavigationFailure","BASE_PARAM_PATTERN","BASE_PATH_PARSER_OPTIONS","sensitive","strict","start","end","REGEX_CHARS_RE","tokensToParser","segments","extraOptions","options","score","pattern","segmentScores","tokenIndex","token","subSegmentScore","repeatable","optional","regexp","re","RegExp","subPattern","match","avoidDuplicatedSlash","endsWith","param","text","compareScoreArray","diff","comparePathParserScore","aScore","bScore","comp","ROOT_TOKEN","VALID_PARAM_RE","tokenizePath","crash","previousState","tokens","finalizeSegment","char","customRe","consumeBuffer","addCharToBuffer","createRouteRecordMatcher","record","parent","parser","matcher","children","alias","createRouterMatcher","routes","globalOptions","matchers","matcherMap","getRecordMatcher","addRoute","originalRecord","isRootAdd","mainNormalizedRecord","normalizeRouteRecord","mergeOptions","normalizedRecords","aliases","components","originalMatcher","normalizedRecord","parentPath","connectingSlash","isAliasRecord","removeRoute","insertMatcher","matcherRef","getRoutes","paramsFromLocation","k","find","m","parentMatcher","mergeMetaFields","redirect","beforeEnter","props","normalizeRecordProps","instances","leaveGuards","Set","updateGuards","enterCallbacks","default","component","propsObject","reduce","partialOptions","HASH_RE","AMPERSAND_RE","SLASH_RE","EQUAL_RE","IM_RE","PLUS_RE","ENC_BRACKET_OPEN_RE","ENC_BRACKET_CLOSE_RE","ENC_CARET_RE","ENC_BACKTICK_RE","ENC_CURLY_OPEN_RE","ENC_PIPE_RE","ENC_CURLY_CLOSE_RE","ENC_SPACE_RE","commonEncode","encodeURI","encodeHash","encodeQueryValue","encodeQueryKey","encodePath","encodeParam","decode","decodeURIComponent","hasLeadingIM","searchParams","searchParam","eqPos","currentValue","values","normalizeQuery","normalizedQuery","useCallbacks","handlers","add","handler","reset","list","guardToPromiseFn","guard","enterCallbackArray","next","valid","guardReturn","guardCall","catch","extractComponentsGuards","guardType","guards","rawComponent","isRouteComponent","__vccOpts","componentPromise","resolved","resolvedComponent","useLink","router","currentRoute","activeRecordIndex","routeMatched","currentMatched","findIndex","parentRecordPath","getOriginalPath","isActive","includesParams","isExactActive","navigate","guardEvent","RouterLinkImpl","String","required","Boolean","activeClass","exactActiveClass","custom","ariaCurrentValue","slots","attrs","link","elClass","getLinkClass","linkActiveClass","linkExactActiveClass","onClick","class","RouterLink","metaKey","altKey","ctrlKey","shiftKey","defaultPrevented","button","currentTarget","preventDefault","outer","inner","innerValue","outerValue","some","propClass","globalClass","defaultClass","RouterViewImpl","inheritAttrs","injectedRoute","routeToDisplay","depth","matchedRouteRef","viewRef","instance","oldInstance","oldName","flush","matchedRoute","ViewComponent","currentName","normalizeSlot","Component","routePropsOption","routeProps","onVnodeUnmounted","vnode","isUnmounted","ref","slot","slotContent","RouterView","createRouter","parseQuery$1","stringifyQuery$1","beforeGuards","beforeResolveGuards","afterGuards","pendingLocation","scrollBehavior","scrollRestoration","normalizeParams","paramValue","encodeParams","decodeParams","parentOrRoute","recordMatcher","routeMatcher","hasRoute","rawLocation","locationNormalized","matcherLocation","locationAsObject","checkCanceledNavigation","pushWithRedirect","handleRedirectRecord","lastMatched","newTargetLocation","targetLocation","force","shouldRedirect","toLocation","failure","handleScroll","triggerError","finalizeNavigation","triggerAfterEach","checkCanceledNavigationAndReject","leavingRecords","updatingRecords","enteringRecords","extractChangingRecords","reverse","canceledNavigationCheck","runGuardQueue","isPush","isFirstNavigation","markAsReady","removeHistoryListener","setupListeners","_from","info","ready","readyHandlers","errorHandlers","isReady","started","installedApps","beforeEach","beforeResolve","afterEach","onError","app","globalProperties","$router","reactiveRoute","provide","unmountApp","unmount","size","len","Math","max","recordFrom","recordTo","targetMap","WeakMap","effectStack","activeEffect","ITERATE_KEY","MAP_KEY_ITERATE_KEY","isEffect","_isEffect","raw","effect","createReactiveEffect","lazy","stop","active","onStop","uid","scheduler","includes","enableTracking","resetTracking","id","allowRecurse","deps","shouldTrack","trackStack","pauseTracking","last","track","depsMap","dep","has","trigger","newValue","oldValue","oldTarget","effects","effectsToAdd","run","builtInSymbols","getOwnPropertyNames","createGetter","shallowGet","readonlyGet","shallowReadonlyGet","arrayInstrumentations","isReadonly","shallow","receiver","readonlyMap","reactiveMap","targetIsArray","Reflect","res","isRef","shouldUnwrap","readonly","reactive","toRaw","l","createSetter","shallowSet","hadKey","Number","result","deleteProperty","ownKeys","mutableHandlers","readonlyHandlers","shallowReactiveHandlers","toReactive","toReadonly","toShallow","getProto","getPrototypeOf","get$1","isShallow","rawTarget","rawKey","wrap","has$1","proto","set$1","deleteEntry","clear","hadItems","createForEach","observed","createIterableMethod","targetIsMap","isPair","iterator","isKeyOnly","innerIterator","done","createReadonlyMethod","mutableInstrumentations","shallowInstrumentations","readonlyInstrumentations","iteratorMethods","createInstrumentationGetter","instrumentations","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","targetTypeMap","rawType","getTargetType","isExtensible","createReactiveObject","shallowReactive","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","proxy","Proxy","isReactive","isProxy","convert","r","__v_isRef","createRef","shallowRef","_rawValue","_shallow","_value","newVal","rawValue","unref","shallowUnwrapHandlers","proxyRefs","objectWithRefs","ObjectRefImpl","_object","_key","toRef","object","ComputedRefImpl","getter","_setter","_dirty","getterOrOptions","setter","callWithErrorHandling","handleError","callWithAsyncErrorHandling","throwInDev","contextVNode","cur","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","appContext","errorHandler","logError","isFlushing","isFlushPending","queue","flushIndex","pendingPreFlushCbs","activePreFlushCbs","preFlushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","currentFlushPromise","currentPreFlushParentJob","p","queueJob","job","queueFlush","flushJobs","invalidateJob","queueCb","cb","activeQueue","pendingQueue","queuePreFlushCb","queuePostFlushCb","flushPreFlushCbs","seen","parentJob","flushPostFlushCbs","deduped","sort","getId","Infinity","event","rawArgs","isModelListener","modelArg","modifiersKey","trim","handlerName","onceHandler","emitted","normalizeEmitsOptions","asMixin","deopt","__emits","emits","normalized","hasExtends","extendEmits","mixins","extends","isEmitListener","currentRenderingInstance","setCurrentRenderingInstance","renderComponentRoot","withProxy","propsOptions","emit","render","renderCache","setupState","ctx","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","getFunctionalFallthrough","root","filterModelListeners","cloneVNode","dirs","transition","createVNode","Comment","filterSingleRoot","singleRoot","child","isVNode","shouldUpdateComponent","prevVNode","nextVNode","optimized","prevProps","prevChildren","nextProps","nextChildren","patchFlag","emitsOptions","$stable","hasPropsChanged","dynamicProps","nextKeys","updateHOCHostEl","subTree","isSuspense","__isSuspense","normalizeSuspenseChildren","content","fallback","normalizeSuspenseSlot","s","singleChild","queueEffectWithSuspense","suspense","pendingBranch","isRenderingCompiledSlot","setCompiledSlotRendering","n","withCtx","renderFnWithContext","openBlock","owner","closeBlock","_c","currentScopeId","initProps","rawProps","isStateful","isSSR","InternalObjectKey","setFullProps","updateProps","rawPrevProps","rawCurrentProps","kebabKey","resolvePropValue","propsToUpdate","camelizedKey","needCastKeys","camelKey","opt","hasDefault","defaultValue","Function","setCurrentInstance","normalizePropsOptions","__props","extendProps","normalizedKey","validatePropName","booleanIndex","getTypeIndex","stringIndex","getType","ctor","isSameType","expectedTypes","injectHook","hook","currentInstance","prepend","hooks","wrappedHook","__weh","createHook","lifecycle","isInSSRComponentSetup","onBeforeMount","onMounted","onBeforeUpdate","onUpdated","onBeforeUnmount","onUnmounted","onRenderTriggered","onRenderTracked","onErrorCaptured","INITIAL_WATCHER_VALUE","watch","doWatch","immediate","deep","onTrack","onTrigger","cleanup","forceTrigger","traverse","onInvalidate","baseGetter","runner","queuePostRenderEffect","isMounted","recordInstanceBoundEffect","instanceWatch","publicThis","useTransitionState","isLeaving","isUnmounting","leavingVNodes","TransitionHookValidator","BaseTransitionImpl","mode","appear","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","getCurrentInstance","prevTransitionKey","getTransitionRawChildren","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","oldInnerChild","transitionKeyChanged","getTransitionKey","isSameVNodeType","leavingHooks","afterLeave","update","delayLeave","earlyRemove","delayedLeave","leavingVNodesCache","getLeavingNodesForType","_leaveCb","BaseTransition","create","callHook","leavingVNode","afterHook","cancelHook","called","_enterCb","cancelled","remove","isKeepAlive","ssContent","clone","ssFallback","keepComment","ret","keyedFragmentCount","Fragment","__isKeepAlive","matches","onActivated","registerKeepAliveHook","onDeactivated","__wdc","isDeactivated","injectToKeepAliveRoot","keepAliveRoot","injected","resetShapeFlag","getInnerChild","isInternalKey","normalizeSlotValue","rawSlot","normalizeObjectSlots","rawSlots","_ctx","normalizeVNodeSlots","initSlots","_","updateSlots","needDeletionCheck","deletionComparisonTarget","withDirectives","directives","internalInstance","bindings","arg","modifiers","mounted","updated","invokeDirectiveHook","oldBindings","createAppContext","isNativeTag","performance","optionMergeStrategies","isCustomElement","warnHandler","provides","createAppAPI","hydrate","rootComponent","rootProps","context","installedPlugins","_uid","_component","_props","_container","_context","version","plugin","install","mixin","directive","rootContainer","isHydrate","__vue_app__","initFeatureFlags","defineComponent","setup","isAsyncWrapper","__asyncLoader","prodEffectOptions","setRef","rawRef","oldRawRef","parentSuspense","exposed","oldRef","refs","doSet","createRenderer","baseCreateRenderer","createHydrationFns","insert","hostInsert","hostRemove","patchProp","hostPatchProp","forcePatchProp","hostForcePatchProp","hostCreateElement","createText","hostCreateText","createComment","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","parentNode","hostParentNode","nextSibling","hostNextSibling","setScopeId","hostSetScopeId","cloneNode","hostCloneNode","insertStaticContent","hostInsertStaticContent","patch","n1","n2","container","anchor","parentComponent","isSVG","getNextHostNode","dynamicChildren","Text","processText","processCommentNode","Static","mountStaticNode","processFragment","processElement","processComponent","internals","moveStaticNode","removeStaticNode","mountElement","patchElement","vnodeHook","scopeId","is","mountChildren","unmountChildren","onVnodeBeforeMount","invokeVNodeHook","needCallTransitionHooks","onVnodeMounted","enter","treeOwnerId","__scopeId","cloneIfMounted","oldProps","newProps","onVnodeBeforeUpdate","patchProps","prev","areChildrenSVG","patchBlockChildren","patchChildren","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","traverseStaticChildren","activate","mountComponent","updateComponent","initialVNode","createComponentInstance","renderer","setupComponent","asyncDep","registerDep","setupRenderEffect","placeholder","asyncResolved","updateComponentPreRender","bu","u","originNext","nextTree","prevTree","bm","hydrateNode","scopedInitialVNode","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","newLength","commonLength","min","nextChild","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","j","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","getSequence","nextIndex","move","moveType","needTransition","leave","performLeave","doRemove","deactivate","shouldInvokeDirs","onVnodeBeforeUnmount","unmountComponent","isTeleportDisabled","removeFragment","performRemove","bum","um","suspenseId","pendingId","_vnode","mt","mc","pc","pbc","o","createApp","ch1","ch2","c","arrI","isTeleport","__isTeleport","disabled","COMPONENTS","resolveComponent","resolveAsset","NULL_DYNAMIC_COMPONENT","warnMissing","selfName","getComponentName","registry","blockStack","currentBlock","disableTracking","createBlock","__v_isVNode","normalizeKey","normalizeRef","_createVNode","isBlockNode","cloned","normalizeChildren","isClassComponent","klass","targetAnchor","staticCount","extraProps","mergeRef","mergedProps","mergeProps","createTextVNode","flag","createStaticVNode","numberOfNodes","slotFlag","toMerge","existing","incoming","parentProvides","inject","treatDefaultAsFactory","isInBeforeCreate","applyOptions","deferredData","deferredWatch","deferredProvide","extendsOptions","dataOptions","computed","computedOptions","methods","watchOptions","provideOptions","injectOptions","beforeMount","beforeUpdate","activated","deactivated","beforeDestroy","beforeUnmount","destroyed","unmounted","renderTracked","renderTriggered","errorCaptured","expose","globalMixins","callSyncHook","applyMixins","methodHandler","dataFn","resolveData","enumerable","configurable","createWatcher","callHookFromMixins","callHookFromExtends","selfHook","baseHook","chainedMixins","createPathGetter","resolveMergedOptions","__merged","strats","getPublicInstance","publicPropertiesMap","$","$el","$data","$props","$attrs","$slots","$refs","$parent","$root","$emit","$options","$forceUpdate","$nextTick","$watch","PublicInstanceProxyHandlers","accessCache","normalizedProps","publicGetter","cssModule","__cssModules","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","emptyAppContext","uid$1","setupContext","bc","da","rtg","rtc","compile","setupResult","setupStatefulComponent","createSetupContext","resolvedResult","handleSetupResult","finishComponentSetup","template","delimiters","_rc","displayName","h","propsOrChildren","renderList","renderItem","svgNS","doc","tempContainer","tempSVGContainer","nodeOps","insertBefore","removeChild","tag","createElementNS","createTextNode","node","nodeValue","textContent","selector","temp","innerHTML","first","firstChild","patchClass","transitionClasses","_vtc","className","patchStyle","cssText","setStyle","removeAttribute","importantRE","setProperty","prefixed","autoPrefix","prefixes","prefixCache","rawName","cached","xlinkNS","patchAttr","removeAttributeNS","setAttributeNS","isBoolean","patchDOMProp","tagName","_getNow","Date","now","createEvent","timeStamp","cachedNow","getNow","patchEvent","prevValue","nextValue","invokers","_vei","existingInvoker","parseName","invoker","createInvoker","optionsModifierRE","initialValue","attached","patchStopImmediatePropagation","originalStop","stopImmediatePropagation","_stopped","nativeOnRE","shouldSetAsProp","_trueValue","_falseValue","TRANSITION","ANIMATION","Transition","resolveTransitionProps","DOMTransitionPropsValidators","css","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","baseProps","durations","normalizeDuration","enterDuration","leaveDuration","finishEnter","isAppear","removeTransitionClass","finishLeave","makeEnterHook","nextFrame","addTransitionClass","whenTransitionEnds","forceReflow","NumberOf","cls","classList","requestAnimationFrame","endId","expectedType","explicitTimeout","_endId","resolveIfNotStale","propCount","getTransitionInfo","endEvent","ended","onEnd","styles","getComputedStyle","getStyleProperties","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","d","toMs","body","offsetHeight","getModelAssigner","onCompositionStart","composing","onCompositionEnd","initEvent","dispatchEvent","vModelText","_assign","castToNumber","domValue","activeElement","vModelSelect","isSetModel","selectedVal","selected","getValue","multiple","setSelected","_binding","isMultiple","option","optionValue","selectedIndex","systemModifiers","modifierGuards","stopPropagation","prevent","self","ctrl","alt","middle","right","exact","withModifiers","vShow","_vod","display","setDisplay","rendererOptions","ensureRenderer","mount","containerOrSelector","normalizeContainer","Element","Cancel","write","expires","domain","secure","cookie","isNumber","toGMTString","read","isAbsoluteURL","combineURLs","baseURL","requestedURL","CancelToken","executor","TypeError","resolvePromise","cancel","waitWindowLoad","isLocalhost","register","swUrl","registrationOptions","checkValidServiceWorker","serviceWorker","registration","registerValidSW","onLine","waiting","onupdatefound","installingWorker","installing","onstatechange","controller","fetch","unregister","makeMap","str","expectsLowerCase","GLOBALS_WHITE_LISTED","isGloballyWhitelisted","specialBooleanAttrs","isSpecialBooleanAttr","normalizeStyle","item","parseStringStyle","listDelimiterRE","propertyDelimiterRE","tmp","normalizeClass","HTML_TAGS","SVG_TAGS","isHTMLTag","isSVGTag","looseCompareArrays","equal","looseEqual","aValidType","bValidType","getTime","aKeysCount","bKeysCount","aHasKey","hasOwnProperty","bHasKey","looseIndexOf","toDisplayString","replacer","isMap","entries","isSet","EMPTY_OBJ","EMPTY_ARR","NOOP","NO","onRE","isOn","extend","hasOwn","toTypeString","isFunction","isSymbol","isPromise","objectToString","toRawType","isIntegerKey","parseInt","isReservedProp","cacheStringFunction","cache","hit","camelizeRE","camelize","toUpperCase","hyphenateRE","hyphenate","capitalize","toHandlerKey","hasChanged","invokeArrayFns","fns","def","toNumber","parseFloat","isNaN","_globalThis","getGlobalThis","globalThis","global","settle","cookies","buildFullPath","parseHeaders","isURLSameOrigin","requestData","requestHeaders","auth","username","password","unescape","Authorization","btoa","open","onreadystatechange","readyState","responseURL","responseHeaders","getAllResponseHeaders","responseData","responseType","responseText","statusText","onabort","onerror","ontimeout","timeoutErrorMessage","xsrfValue","withCredentials","setRequestHeader","onDownloadProgress","onUploadProgress","upload","abort","send","ignoreDuplicateOf","line","substr","constructor","FormData","ArrayBuffer","isView","pipe","URLSearchParams","product","assignValue","stripBOM","charCodeAt","normalizedName","g","createInstance","defaultConfig","axios","all","promises","spread","normalizeArray","allowAboveRoot","up","basename","matchedSlash","xs","f","resolvedPath","resolvedAbsolute","normalize","isAbsolute","trailingSlash","paths","relative","fromParts","toParts","samePartsLength","outputParts","sep","delimiter","dirname","hasRoot","ext","extname","startDot","startPart","preDotState","relativeURL","use","eject"],"mappings":"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","file":"js/chunk-vendors.78b72aa5.js","sourcesContent":["'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","exports.nextTick = function nextTick(fn) {\n    var args = Array.prototype.slice.call(arguments);\n    args.shift();\n    setTimeout(function () {\n        fn.apply(null, args);\n    }, 0);\n};\n\nexports.platform = exports.arch = \nexports.execPath = exports.title = 'browser';\nexports.pid = 1;\nexports.browser = true;\nexports.env = {};\nexports.argv = [];\n\nexports.binding = function (name) {\n\tthrow new Error('No such module. (Possibly not yet loaded)')\n};\n\n(function () {\n    var cwd = '/';\n    var path;\n    exports.cwd = function () { return cwd };\n    exports.chdir = function (dir) {\n        if (!path) path = require('path');\n        cwd = path.resolve(dir, cwd);\n    };\n})();\n\nexports.exit = exports.kill = \nexports.umask = exports.dlopen = \nexports.uptime = exports.memoryUsage = \nexports.uvCounters = function() {};\nexports.features = {};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\n  ];\n  var directMergeKeys = ['validateStatus'];\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  utils.forEach(directMergeKeys, function merge(prop) {\n    if (prop in config2) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys)\n    .concat(directMergeKeys);\n\n  var otherKeys = Object\n    .keys(config1)\n    .concat(Object.keys(config2))\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, mergeDeepProperties);\n\n  return config;\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\n};\n","/*!\n  * vue-router v4.0.3\n  * (c) 2021 Eduardo San Martin Morote\n  * @license MIT\n  */\nimport { getCurrentInstance, inject, onUnmounted, onDeactivated, onActivated, computed, unref, defineComponent, reactive, h, provide, ref, watch, shallowRef, nextTick } from 'vue';\n\nconst hasSymbol = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\r\nconst PolySymbol = (name) => \r\n// vr = vue router\r\nhasSymbol\r\n    ? Symbol((process.env.NODE_ENV !== 'production') ? '[vue-router]: ' + name : name)\r\n    : ((process.env.NODE_ENV !== 'production') ? '[vue-router]: ' : '_vr_') + name;\r\n// rvlm = Router View Location Matched\r\n/**\r\n * RouteRecord being rendered by the closest ancestor Router View. Used for\r\n * `onBeforeRouteUpdate` and `onBeforeRouteLeave`. rvlm stands for Router View\r\n * Location Matched\r\n *\r\n * @internal\r\n */\r\nconst matchedRouteKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router view location matched' : 'rvlm');\r\n/**\r\n * Allows overriding the router view depth to control which component in\r\n * `matched` is rendered. rvd stands for Router View Depth\r\n *\r\n * @internal\r\n */\r\nconst viewDepthKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router view depth' : 'rvd');\r\n/**\r\n * Allows overriding the router instance returned by `useRouter` in tests. r\r\n * stands for router\r\n *\r\n * @internal\r\n */\r\nconst routerKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router' : 'r');\r\n/**\r\n * Allows overriding the current route returned by `useRoute` in tests. rl\r\n * stands for route location\r\n *\r\n * @internal\r\n */\r\nconst routeLocationKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'route location' : 'rl');\r\n/**\r\n * Allows overriding the current route used by router-view. Internally this is\r\n * used when the `route` prop is passed.\r\n *\r\n * @internal\r\n */\r\nconst routerViewLocationKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router view location' : 'rvl');\n\nconst isBrowser = typeof window !== 'undefined';\n\nfunction isESModule(obj) {\r\n    return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module');\r\n}\r\nconst assign = Object.assign;\r\nfunction applyToParams(fn, params) {\r\n    const newParams = {};\r\n    for (const key in params) {\r\n        const value = params[key];\r\n        newParams[key] = Array.isArray(value) ? value.map(fn) : fn(value);\r\n    }\r\n    return newParams;\r\n}\r\nlet noop = () => { };\n\nfunction warn(msg) {\r\n    // avoid using ...args as it breaks in older Edge builds\r\n    const args = Array.from(arguments).slice(1);\r\n    console.warn.apply(console, ['[Vue Router warn]: ' + msg].concat(args));\r\n}\n\nconst TRAILING_SLASH_RE = /\\/$/;\r\nconst removeTrailingSlash = (path) => path.replace(TRAILING_SLASH_RE, '');\r\n/**\r\n * Transforms an URI into a normalized history location\r\n *\r\n * @param parseQuery\r\n * @param location - URI to normalize\r\n * @param currentLocation - current absolute location. Allows resolving relative\r\n * paths. Must start with `/`. Defaults to `/`\r\n * @returns a normalized history location\r\n */\r\nfunction parseURL(parseQuery, location, currentLocation = '/') {\r\n    let path, query = {}, searchString = '', hash = '';\r\n    // Could use URL and URLSearchParams but IE 11 doesn't support it\r\n    const searchPos = location.indexOf('?');\r\n    const hashPos = location.indexOf('#', searchPos > -1 ? searchPos : 0);\r\n    if (searchPos > -1) {\r\n        path = location.slice(0, searchPos);\r\n        searchString = location.slice(searchPos + 1, hashPos > -1 ? hashPos : location.length);\r\n        query = parseQuery(searchString);\r\n    }\r\n    if (hashPos > -1) {\r\n        path = path || location.slice(0, hashPos);\r\n        // keep the # character\r\n        hash = location.slice(hashPos, location.length);\r\n    }\r\n    // no search and no query\r\n    path = resolveRelativePath(path != null ? path : location, currentLocation);\r\n    // empty path means a relative query or hash `?foo=f`, `#thing`\r\n    return {\r\n        fullPath: path + (searchString && '?') + searchString + hash,\r\n        path,\r\n        query,\r\n        hash,\r\n    };\r\n}\r\n/**\r\n * Stringifies a URL object\r\n *\r\n * @param stringifyQuery\r\n * @param location\r\n */\r\nfunction stringifyURL(stringifyQuery, location) {\r\n    let query = location.query ? stringifyQuery(location.query) : '';\r\n    return location.path + (query && '?') + query + (location.hash || '');\r\n}\r\n/**\r\n * Strips off the base from the beginning of a location.pathname in a non\r\n * case-sensitive way.\r\n *\r\n * @param pathname - location.pathname\r\n * @param base - base to strip off\r\n */\r\nfunction stripBase(pathname, base) {\r\n    // no base or base is not found at the beginning\r\n    if (!base || pathname.toLowerCase().indexOf(base.toLowerCase()))\r\n        return pathname;\r\n    return pathname.slice(base.length) || '/';\r\n}\r\n/**\r\n * Checks if two RouteLocation are equal. This means that both locations are\r\n * pointing towards the same {@link RouteRecord} and that all `params`, `query`\r\n * parameters and `hash` are the same\r\n *\r\n * @param a - first {@link RouteLocation}\r\n * @param b - second {@link RouteLocation}\r\n */\r\nfunction isSameRouteLocation(stringifyQuery, a, b) {\r\n    let aLastIndex = a.matched.length - 1;\r\n    let bLastIndex = b.matched.length - 1;\r\n    return (aLastIndex > -1 &&\r\n        aLastIndex === bLastIndex &&\r\n        isSameRouteRecord(a.matched[aLastIndex], b.matched[bLastIndex]) &&\r\n        isSameRouteLocationParams(a.params, b.params) &&\r\n        stringifyQuery(a.query) === stringifyQuery(b.query) &&\r\n        a.hash === b.hash);\r\n}\r\n/**\r\n * Check if two `RouteRecords` are equal. Takes into account aliases: they are\r\n * considered equal to the `RouteRecord` they are aliasing.\r\n *\r\n * @param a - first {@link RouteRecord}\r\n * @param b - second {@link RouteRecord}\r\n */\r\nfunction isSameRouteRecord(a, b) {\r\n    // since the original record has an undefined value for aliasOf\r\n    // but all aliases point to the original record, this will always compare\r\n    // the original record\r\n    return (a.aliasOf || a) === (b.aliasOf || b);\r\n}\r\nfunction isSameRouteLocationParams(a, b) {\r\n    if (Object.keys(a).length !== Object.keys(b).length)\r\n        return false;\r\n    for (let key in a) {\r\n        if (!isSameRouteLocationParamsValue(a[key], b[key]))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\nfunction isSameRouteLocationParamsValue(a, b) {\r\n    return Array.isArray(a)\r\n        ? isEquivalentArray(a, b)\r\n        : Array.isArray(b)\r\n            ? isEquivalentArray(b, a)\r\n            : a === b;\r\n}\r\n/**\r\n * Check if two arrays are the same or if an array with one single entry is the\r\n * same as another primitive value. Used to check query and parameters\r\n *\r\n * @param a - array of values\r\n * @param b - array of values or a single value\r\n */\r\nfunction isEquivalentArray(a, b) {\r\n    return Array.isArray(b)\r\n        ? a.length === b.length && a.every((value, i) => value === b[i])\r\n        : a.length === 1 && a[0] === b;\r\n}\r\n/**\r\n * Resolves a relative path that starts with `.`.\r\n *\r\n * @param to - path location we are resolving\r\n * @param from - currentLocation.path, should start with `/`\r\n */\r\nfunction resolveRelativePath(to, from) {\r\n    if (to.startsWith('/'))\r\n        return to;\r\n    if ((process.env.NODE_ENV !== 'production') && !from.startsWith('/')) {\r\n        warn(`Cannot resolve a relative location without an absolute path. Trying to resolve \"${to}\" from \"${from}\". It should look like \"/${from}\".`);\r\n        return to;\r\n    }\r\n    if (!to)\r\n        return from;\r\n    const fromSegments = from.split('/');\r\n    const toSegments = to.split('/');\r\n    let position = fromSegments.length - 1;\r\n    let toPosition;\r\n    let segment;\r\n    for (toPosition = 0; toPosition < toSegments.length; toPosition++) {\r\n        segment = toSegments[toPosition];\r\n        // can't go below zero\r\n        if (position === 1 || segment === '.')\r\n            continue;\r\n        if (segment === '..')\r\n            position--;\r\n        // found something that is not relative path\r\n        else\r\n            break;\r\n    }\r\n    return (fromSegments.slice(0, position).join('/') +\r\n        '/' +\r\n        toSegments\r\n            .slice(toPosition - (toPosition === toSegments.length ? 1 : 0))\r\n            .join('/'));\r\n}\n\nvar NavigationType;\r\n(function (NavigationType) {\r\n    NavigationType[\"pop\"] = \"pop\";\r\n    NavigationType[\"push\"] = \"push\";\r\n})(NavigationType || (NavigationType = {}));\r\nvar NavigationDirection;\r\n(function (NavigationDirection) {\r\n    NavigationDirection[\"back\"] = \"back\";\r\n    NavigationDirection[\"forward\"] = \"forward\";\r\n    NavigationDirection[\"unknown\"] = \"\";\r\n})(NavigationDirection || (NavigationDirection = {}));\r\n/**\r\n * Starting location for Histories\r\n */\r\nconst START = '';\r\n// Generic utils\r\n/**\r\n * Normalizes a base by removing any trailing slash and reading the base tag if\r\n * present.\r\n *\r\n * @param base - base to normalize\r\n */\r\nfunction normalizeBase(base) {\r\n    if (!base) {\r\n        if (isBrowser) {\r\n            // respect <base> tag\r\n            const baseEl = document.querySelector('base');\r\n            base = (baseEl && baseEl.getAttribute('href')) || '/';\r\n            // strip full URL origin\r\n            base = base.replace(/^\\w+:\\/\\/[^\\/]+/, '');\r\n        }\r\n        else {\r\n            base = '/';\r\n        }\r\n    }\r\n    // ensure leading slash when it was removed by the regex above avoid leading\r\n    // slash with hash because the file could be read from the disk like file://\r\n    // and the leading slash would cause problems\r\n    if (base[0] !== '/' && base[0] !== '#')\r\n        base = '/' + base;\r\n    // remove the trailing slash so all other method can just do `base + fullPath`\r\n    // to build an href\r\n    return removeTrailingSlash(base);\r\n}\r\n// remove any character before the hash\r\nconst BEFORE_HASH_RE = /^[^#]+#/;\r\nfunction createHref(base, location) {\r\n    return base.replace(BEFORE_HASH_RE, '#') + location;\r\n}\n\nfunction getElementPosition(el, offset) {\r\n    const docRect = document.documentElement.getBoundingClientRect();\r\n    const elRect = el.getBoundingClientRect();\r\n    return {\r\n        behavior: offset.behavior,\r\n        left: elRect.left - docRect.left - (offset.left || 0),\r\n        top: elRect.top - docRect.top - (offset.top || 0),\r\n    };\r\n}\r\nconst computeScrollPosition = () => ({\r\n    left: window.pageXOffset,\r\n    top: window.pageYOffset,\r\n});\r\nfunction scrollToPosition(position) {\r\n    let scrollToOptions;\r\n    if ('el' in position) {\r\n        let positionEl = position.el;\r\n        const isIdSelector = typeof positionEl === 'string' && positionEl.startsWith('#');\r\n        /**\r\n         * `id`s can accept pretty much any characters, including CSS combinators\r\n         * like `>` or `~`. It's still possible to retrieve elements using\r\n         * `document.getElementById('~')` but it needs to be escaped when using\r\n         * `document.querySelector('#\\\\~')` for it to be valid. The only\r\n         * requirements for `id`s are them to be unique on the page and to not be\r\n         * empty (`id=\"\"`). Because of that, when passing an id selector, it should\r\n         * be properly escaped for it to work with `querySelector`. We could check\r\n         * for the id selector to be simple (no CSS combinators `+ >~`) but that\r\n         * would make things inconsistent since they are valid characters for an\r\n         * `id` but would need to be escaped when using `querySelector`, breaking\r\n         * their usage and ending up in no selector returned. Selectors need to be\r\n         * escaped:\r\n         *\r\n         * - `#1-thing` becomes `#\\31 -thing`\r\n         * - `#with~symbols` becomes `#with\\\\~symbols`\r\n         *\r\n         * - More information about  the topic can be found at\r\n         *   https://mathiasbynens.be/notes/html5-id-class.\r\n         * - Practical example: https://mathiasbynens.be/demo/html5-id\r\n         */\r\n        if ((process.env.NODE_ENV !== 'production') && typeof position.el === 'string') {\r\n            if (!isIdSelector || !document.getElementById(position.el.slice(1))) {\r\n                try {\r\n                    let foundEl = document.querySelector(position.el);\r\n                    if (isIdSelector && foundEl) {\r\n                        warn(`The selector \"${position.el}\" should be passed as \"el: document.querySelector('${position.el}')\" because it starts with \"#\".`);\r\n                        // return to avoid other warnings\r\n                        return;\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    warn(`The selector \"${position.el}\" is invalid. If you are using an id selector, make sure to escape it. You can find more information about escaping characters in selectors at https://mathiasbynens.be/notes/css-escapes or use CSS.escape (https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape).`);\r\n                    // return to avoid other warnings\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        const el = typeof positionEl === 'string'\r\n            ? isIdSelector\r\n                ? document.getElementById(positionEl.slice(1))\r\n                : document.querySelector(positionEl)\r\n            : positionEl;\r\n        if (!el) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Couldn't find element using selector \"${position.el}\" returned by scrollBehavior.`);\r\n            return;\r\n        }\r\n        scrollToOptions = getElementPosition(el, position);\r\n    }\r\n    else {\r\n        scrollToOptions = position;\r\n    }\r\n    if ('scrollBehavior' in document.documentElement.style)\r\n        window.scrollTo(scrollToOptions);\r\n    else {\r\n        window.scrollTo(scrollToOptions.left != null ? scrollToOptions.left : window.pageXOffset, scrollToOptions.top != null ? scrollToOptions.top : window.pageYOffset);\r\n    }\r\n}\r\nfunction getScrollKey(path, delta) {\r\n    const position = history.state ? history.state.position - delta : -1;\r\n    return position + path;\r\n}\r\nconst scrollPositions = new Map();\r\nfunction saveScrollPosition(key, scrollPosition) {\r\n    scrollPositions.set(key, scrollPosition);\r\n}\r\nfunction getSavedScrollPosition(key) {\r\n    const scroll = scrollPositions.get(key);\r\n    // consume it so it's not used again\r\n    scrollPositions.delete(key);\r\n    return scroll;\r\n}\r\n// TODO: RFC about how to save scroll position\r\n/**\r\n * ScrollBehavior instance used by the router to compute and restore the scroll\r\n * position when navigating.\r\n */\r\n// export interface ScrollHandler<ScrollPositionEntry extends HistoryStateValue, ScrollPosition extends ScrollPositionEntry> {\r\n//   // returns a scroll position that can be saved in history\r\n//   compute(): ScrollPositionEntry\r\n//   // can take an extended ScrollPositionEntry\r\n//   scroll(position: ScrollPosition): void\r\n// }\r\n// export const scrollHandler: ScrollHandler<ScrollPosition> = {\r\n//   compute: computeScroll,\r\n//   scroll: scrollToPosition,\r\n// }\n\nlet createBaseLocation = () => location.protocol + '//' + location.host;\r\n/**\r\n * Creates a normalized history location from a window.location object\r\n * @param location -\r\n */\r\nfunction createCurrentLocation(base, location) {\r\n    const { pathname, search, hash } = location;\r\n    // allows hash based url\r\n    const hashPos = base.indexOf('#');\r\n    if (hashPos > -1) {\r\n        // prepend the starting slash to hash so the url starts with /#\r\n        let pathFromHash = hash.slice(1);\r\n        if (pathFromHash[0] !== '/')\r\n            pathFromHash = '/' + pathFromHash;\r\n        return stripBase(pathFromHash, '');\r\n    }\r\n    const path = stripBase(pathname, base);\r\n    return path + search + hash;\r\n}\r\nfunction useHistoryListeners(base, historyState, currentLocation, replace) {\r\n    let listeners = [];\r\n    let teardowns = [];\r\n    // TODO: should it be a stack? a Dict. Check if the popstate listener\r\n    // can trigger twice\r\n    let pauseState = null;\r\n    const popStateHandler = ({ state, }) => {\r\n        const to = createCurrentLocation(base, location);\r\n        const from = currentLocation.value;\r\n        const fromState = historyState.value;\r\n        let delta = 0;\r\n        if (state) {\r\n            currentLocation.value = to;\r\n            historyState.value = state;\r\n            // ignore the popstate and reset the pauseState\r\n            if (pauseState && pauseState === from) {\r\n                pauseState = null;\r\n                return;\r\n            }\r\n            delta = fromState ? state.position - fromState.position : 0;\r\n        }\r\n        else {\r\n            replace(to);\r\n        }\r\n        // console.log({ deltaFromCurrent })\r\n        // Here we could also revert the navigation by calling history.go(-delta)\r\n        // this listener will have to be adapted to not trigger again and to wait for the url\r\n        // to be updated before triggering the listeners. Some kind of validation function would also\r\n        // need to be passed to the listeners so the navigation can be accepted\r\n        // call all listeners\r\n        listeners.forEach(listener => {\r\n            listener(currentLocation.value, from, {\r\n                delta,\r\n                type: NavigationType.pop,\r\n                direction: delta\r\n                    ? delta > 0\r\n                        ? NavigationDirection.forward\r\n                        : NavigationDirection.back\r\n                    : NavigationDirection.unknown,\r\n            });\r\n        });\r\n    };\r\n    function pauseListeners() {\r\n        pauseState = currentLocation.value;\r\n    }\r\n    function listen(callback) {\r\n        // setup the listener and prepare teardown callbacks\r\n        listeners.push(callback);\r\n        const teardown = () => {\r\n            const index = listeners.indexOf(callback);\r\n            if (index > -1)\r\n                listeners.splice(index, 1);\r\n        };\r\n        teardowns.push(teardown);\r\n        return teardown;\r\n    }\r\n    function beforeUnloadListener() {\r\n        const { history } = window;\r\n        if (!history.state)\r\n            return;\r\n        history.replaceState(assign({}, history.state, { scroll: computeScrollPosition() }), '');\r\n    }\r\n    function destroy() {\r\n        for (const teardown of teardowns)\r\n            teardown();\r\n        teardowns = [];\r\n        window.removeEventListener('popstate', popStateHandler);\r\n        window.removeEventListener('beforeunload', beforeUnloadListener);\r\n    }\r\n    // setup the listeners and prepare teardown callbacks\r\n    window.addEventListener('popstate', popStateHandler);\r\n    window.addEventListener('beforeunload', beforeUnloadListener);\r\n    return {\r\n        pauseListeners,\r\n        listen,\r\n        destroy,\r\n    };\r\n}\r\n/**\r\n * Creates a state object\r\n */\r\nfunction buildState(back, current, forward, replaced = false, computeScroll = false) {\r\n    return {\r\n        back,\r\n        current,\r\n        forward,\r\n        replaced,\r\n        position: window.history.length,\r\n        scroll: computeScroll ? computeScrollPosition() : null,\r\n    };\r\n}\r\nfunction useHistoryStateNavigation(base) {\r\n    const { history, location } = window;\r\n    // private variables\r\n    let currentLocation = {\r\n        value: createCurrentLocation(base, location),\r\n    };\r\n    let historyState = { value: history.state };\r\n    // build current history entry as this is a fresh navigation\r\n    if (!historyState.value) {\r\n        changeLocation(currentLocation.value, {\r\n            back: null,\r\n            current: currentLocation.value,\r\n            forward: null,\r\n            // the length is off by one, we need to decrease it\r\n            position: history.length - 1,\r\n            replaced: true,\r\n            // don't add a scroll as the user may have an anchor and we want\r\n            // scrollBehavior to be triggered without a saved position\r\n            scroll: null,\r\n        }, true);\r\n    }\r\n    function changeLocation(to, state, replace) {\r\n        /**\r\n         * if a base tag is provided and we are on a normal domain, we have to\r\n         * respect the provided `base` attribute because pushState() will use it and\r\n         * potentially erase anything before the `#` like at\r\n         * https://github.com/vuejs/vue-router-next/issues/685 where a base of\r\n         * `/folder/#` but a base of `/` would erase the `/folder/` section. If\r\n         * there is no host, the `<base>` tag makes no sense and if there isn't a\r\n         * base tag we can just use everything after the `#`.\r\n         */\r\n        const hashIndex = base.indexOf('#');\r\n        const url = hashIndex > -1\r\n            ? (location.host && document.querySelector('base')\r\n                ? base\r\n                : base.slice(hashIndex)) + to\r\n            : createBaseLocation() + base + to;\r\n        try {\r\n            // BROWSER QUIRK\r\n            // NOTE: Safari throws a SecurityError when calling this function 100 times in 30 seconds\r\n            history[replace ? 'replaceState' : 'pushState'](state, '', url);\r\n            historyState.value = state;\r\n        }\r\n        catch (err) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn('Error with push/replace State', err);\r\n            }\r\n            else {\r\n                console.error(err);\r\n            }\r\n            // Force the navigation, this also resets the call count\r\n            location[replace ? 'replace' : 'assign'](url);\r\n        }\r\n    }\r\n    function replace(to, data) {\r\n        const state = assign({}, history.state, buildState(historyState.value.back, \r\n        // keep back and forward entries but override current position\r\n        to, historyState.value.forward, true), data, { position: historyState.value.position });\r\n        changeLocation(to, state, true);\r\n        currentLocation.value = to;\r\n    }\r\n    function push(to, data) {\r\n        // Add to current entry the information of where we are going\r\n        // as well as saving the current position\r\n        const currentState = assign({}, \r\n        // use current history state to gracefully handle a wrong call to\r\n        // history.replaceState\r\n        // https://github.com/vuejs/vue-router-next/issues/366\r\n        historyState.value, history.state, {\r\n            forward: to,\r\n            scroll: computeScrollPosition(),\r\n        });\r\n        if ((process.env.NODE_ENV !== 'production') && !history.state) {\r\n            warn(`history.state seems to have been manually replaced without preserving the necessary values. Make sure to preserve existing history state if you are manually calling history.replaceState:\\n\\n` +\r\n                `history.replaceState(history.state, '', url)\\n\\n` +\r\n                `You can find more information at https://next.router.vuejs.org/guide/migration/#usage-of-history-state.`);\r\n        }\r\n        changeLocation(currentState.current, currentState, true);\r\n        const state = assign({}, buildState(currentLocation.value, to, null), { position: currentState.position + 1 }, data);\r\n        changeLocation(to, state, false);\r\n        currentLocation.value = to;\r\n    }\r\n    return {\r\n        location: currentLocation,\r\n        state: historyState,\r\n        push,\r\n        replace,\r\n    };\r\n}\r\n/**\r\n * Creates an HTML5 history. Most common history for single page applications.\r\n *\r\n * @param base -\r\n */\r\nfunction createWebHistory(base) {\r\n    base = normalizeBase(base);\r\n    const historyNavigation = useHistoryStateNavigation(base);\r\n    const historyListeners = useHistoryListeners(base, historyNavigation.state, historyNavigation.location, historyNavigation.replace);\r\n    function go(delta, triggerListeners = true) {\r\n        if (!triggerListeners)\r\n            historyListeners.pauseListeners();\r\n        history.go(delta);\r\n    }\r\n    const routerHistory = assign({\r\n        // it's overridden right after\r\n        location: '',\r\n        base,\r\n        go,\r\n        createHref: createHref.bind(null, base),\r\n    }, historyNavigation, historyListeners);\r\n    Object.defineProperty(routerHistory, 'location', {\r\n        get: () => historyNavigation.location.value,\r\n    });\r\n    Object.defineProperty(routerHistory, 'state', {\r\n        get: () => historyNavigation.state.value,\r\n    });\r\n    return routerHistory;\r\n}\n\n/**\r\n * Creates a in-memory based history. The main purpose of this history is to handle SSR. It starts in a special location that is nowhere.\r\n * It's up to the user to replace that location with the starter location by either calling `router.push` or `router.replace`.\r\n *\r\n * @param base - Base applied to all urls, defaults to '/'\r\n * @returns a history object that can be passed to the router constructor\r\n */\r\nfunction createMemoryHistory(base = '') {\r\n    let listeners = [];\r\n    let queue = [START];\r\n    let position = 0;\r\n    function setLocation(location) {\r\n        position++;\r\n        if (position === queue.length) {\r\n            // we are at the end, we can simply append a new entry\r\n            queue.push(location);\r\n        }\r\n        else {\r\n            // we are in the middle, we remove everything from here in the queue\r\n            queue.splice(position);\r\n            queue.push(location);\r\n        }\r\n    }\r\n    function triggerListeners(to, from, { direction, delta }) {\r\n        const info = {\r\n            direction,\r\n            delta,\r\n            type: NavigationType.pop,\r\n        };\r\n        for (let callback of listeners) {\r\n            callback(to, from, info);\r\n        }\r\n    }\r\n    const routerHistory = {\r\n        // rewritten by Object.defineProperty\r\n        location: START,\r\n        state: {},\r\n        base,\r\n        createHref: createHref.bind(null, base),\r\n        replace(to) {\r\n            // remove current entry and decrement position\r\n            queue.splice(position--, 1);\r\n            setLocation(to);\r\n        },\r\n        push(to, data) {\r\n            setLocation(to);\r\n        },\r\n        listen(callback) {\r\n            listeners.push(callback);\r\n            return () => {\r\n                const index = listeners.indexOf(callback);\r\n                if (index > -1)\r\n                    listeners.splice(index, 1);\r\n            };\r\n        },\r\n        destroy() {\r\n            listeners = [];\r\n        },\r\n        go(delta, shouldTrigger = true) {\r\n            const from = this.location;\r\n            const direction = \r\n            // we are considering delta === 0 going forward, but in abstract mode\r\n            // using 0 for the delta doesn't make sense like it does in html5 where\r\n            // it reloads the page\r\n            delta < 0 ? NavigationDirection.back : NavigationDirection.forward;\r\n            position = Math.max(0, Math.min(position + delta, queue.length - 1));\r\n            if (shouldTrigger) {\r\n                triggerListeners(this.location, from, {\r\n                    direction,\r\n                    delta,\r\n                });\r\n            }\r\n        },\r\n    };\r\n    Object.defineProperty(routerHistory, 'location', {\r\n        get: () => queue[position],\r\n    });\r\n    return routerHistory;\r\n}\n\n/**\r\n * Creates a hash history. Useful for web applications with no host (e.g.\r\n * `file://`) or when configuring a server to handle any URL is not possible.\r\n *\r\n * @param base - optional base to provide. Defaults to `location.pathname +\r\n * location.search` If there is a `<base>` tag in the `head`, its value will be\r\n * ignored in favor of this parameter **but note it affects all the\r\n * history.pushState() calls**, meaning that if you use a `<base>` tag, it's\r\n * `href` value **has to match this parameter** (ignoring anything after the\r\n * `#`).\r\n *\r\n * @example\r\n * ```js\r\n * // at https://example.com/folder\r\n * createWebHashHistory() // gives a url of `https://example.com/folder#`\r\n * createWebHashHistory('/folder/') // gives a url of `https://example.com/folder/#`\r\n * // if the `#` is provided in the base, it won't be added by `createWebHashHistory`\r\n * createWebHashHistory('/folder/#/app/') // gives a url of `https://example.com/folder/#/app/`\r\n * // you should avoid doing this because it changes the original url and breaks copying urls\r\n * createWebHashHistory('/other-folder/') // gives a url of `https://example.com/other-folder/#`\r\n *\r\n * // at file:///usr/etc/folder/index.html\r\n * // for locations with no `host`, the base is ignored\r\n * createWebHashHistory('/iAmIgnored') // gives a url of `file:///usr/etc/folder/index.html#`\r\n * ```\r\n */\r\nfunction createWebHashHistory(base) {\r\n    // Make sure this implementation is fine in terms of encoding, specially for IE11\r\n    // for `file://`, directly use the pathname and ignore the base\r\n    // location.pathname contains an initial `/` even at the root: `https://example.com`\r\n    base = location.host ? base || location.pathname + location.search : '';\r\n    // allow the user to provide a `#` in the middle: `/base/#/app`\r\n    if (base.indexOf('#') < 0)\r\n        base += '#';\r\n    if ((process.env.NODE_ENV !== 'production') && !base.endsWith('#/') && !base.endsWith('#')) {\r\n        warn(`A hash base must end with a \"#\":\\n\"${base}\" should be \"${base.replace(/#.*$/, '#')}\".`);\r\n    }\r\n    return createWebHistory(base);\r\n}\n\nfunction isRouteLocation(route) {\r\n    return typeof route === 'string' || (route && typeof route === 'object');\r\n}\r\nfunction isRouteName(name) {\r\n    return typeof name === 'string' || typeof name === 'symbol';\r\n}\n\n/**\r\n * Initial route location where the router is. Can be used in navigation guards\r\n * to differentiate the initial navigation.\r\n *\r\n * @example\r\n * ```js\r\n * import { START_LOCATION } from 'vue-router'\r\n *\r\n * router.beforeEach((to, from) => {\r\n *   if (from === START_LOCATION) {\r\n *     // initial navigation\r\n *   }\r\n * })\r\n * ```\r\n */\r\nconst START_LOCATION_NORMALIZED = {\r\n    path: '/',\r\n    name: undefined,\r\n    params: {},\r\n    query: {},\r\n    hash: '',\r\n    fullPath: '/',\r\n    matched: [],\r\n    meta: {},\r\n    redirectedFrom: undefined,\r\n};\n\nconst NavigationFailureSymbol = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'navigation failure' : 'nf');\r\n/**\r\n * Enumeration with all possible types for navigation failures. Can be passed to\r\n * {@link isNavigationFailure} to check for specific failures.\r\n */\r\nvar NavigationFailureType;\r\n(function (NavigationFailureType) {\r\n    /**\r\n     * An aborted navigation is a navigation that failed because a navigation\r\n     * guard returned `false` or called `next(false)`\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"aborted\"] = 4] = \"aborted\";\r\n    /**\r\n     * A cancelled navigation is a navigation that failed because a more recent\r\n     * navigation finished started (not necessarily finished).\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"cancelled\"] = 8] = \"cancelled\";\r\n    /**\r\n     * A duplicated navigation is a navigation that failed because it was\r\n     * initiated while already being at the exact same location.\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"duplicated\"] = 16] = \"duplicated\";\r\n})(NavigationFailureType || (NavigationFailureType = {}));\r\n// DEV only debug messages\r\nconst ErrorTypeMessages = {\r\n    [1 /* MATCHER_NOT_FOUND */]({ location, currentLocation }) {\r\n        return `No match for\\n ${JSON.stringify(location)}${currentLocation\r\n            ? '\\nwhile being at\\n' + JSON.stringify(currentLocation)\r\n            : ''}`;\r\n    },\r\n    [2 /* NAVIGATION_GUARD_REDIRECT */]({ from, to, }) {\r\n        return `Redirected from \"${from.fullPath}\" to \"${stringifyRoute(to)}\" via a navigation guard.`;\r\n    },\r\n    [4 /* NAVIGATION_ABORTED */]({ from, to }) {\r\n        return `Navigation aborted from \"${from.fullPath}\" to \"${to.fullPath}\" via a navigation guard.`;\r\n    },\r\n    [8 /* NAVIGATION_CANCELLED */]({ from, to }) {\r\n        return `Navigation cancelled from \"${from.fullPath}\" to \"${to.fullPath}\" with a new navigation.`;\r\n    },\r\n    [16 /* NAVIGATION_DUPLICATED */]({ from, to }) {\r\n        return `Avoided redundant navigation to current location: \"${from.fullPath}\".`;\r\n    },\r\n};\r\nfunction createRouterError(type, params) {\r\n    if ((process.env.NODE_ENV !== 'production') || !true) {\r\n        return assign(new Error(ErrorTypeMessages[type](params)), {\r\n            type,\r\n            [NavigationFailureSymbol]: true,\r\n        }, params);\r\n    }\r\n    else {\r\n        return assign(new Error(), {\r\n            type,\r\n            [NavigationFailureSymbol]: true,\r\n        }, params);\r\n    }\r\n}\r\nfunction isNavigationFailure(error, type) {\r\n    return (error instanceof Error &&\r\n        NavigationFailureSymbol in error &&\r\n        (type == null || !!(error.type & type)));\r\n}\r\nconst propertiesToLog = ['params', 'query', 'hash'];\r\nfunction stringifyRoute(to) {\r\n    if (typeof to === 'string')\r\n        return to;\r\n    if ('path' in to)\r\n        return to.path;\r\n    const location = {};\r\n    for (const key of propertiesToLog) {\r\n        if (key in to)\r\n            location[key] = to[key];\r\n    }\r\n    return JSON.stringify(location, null, 2);\r\n}\n\n// default pattern for a param: non greedy everything but /\r\nconst BASE_PARAM_PATTERN = '[^/]+?';\r\nconst BASE_PATH_PARSER_OPTIONS = {\r\n    sensitive: false,\r\n    strict: false,\r\n    start: true,\r\n    end: true,\r\n};\r\n// Special Regex characters that must be escaped in static tokens\r\nconst REGEX_CHARS_RE = /[.+*?^${}()[\\]/\\\\]/g;\r\n/**\r\n * Creates a path parser from an array of Segments (a segment is an array of Tokens)\r\n *\r\n * @param segments - array of segments returned by tokenizePath\r\n * @param extraOptions - optional options for the regexp\r\n * @returns a PathParser\r\n */\r\nfunction tokensToParser(segments, extraOptions) {\r\n    const options = assign({}, BASE_PATH_PARSER_OPTIONS, extraOptions);\r\n    // the amount of scores is the same as the length of segments except for the root segment \"/\"\r\n    let score = [];\r\n    // the regexp as a string\r\n    let pattern = options.start ? '^' : '';\r\n    // extracted keys\r\n    const keys = [];\r\n    for (const segment of segments) {\r\n        // the root segment needs special treatment\r\n        const segmentScores = segment.length ? [] : [90 /* Root */];\r\n        // allow trailing slash\r\n        if (options.strict && !segment.length)\r\n            pattern += '/';\r\n        for (let tokenIndex = 0; tokenIndex < segment.length; tokenIndex++) {\r\n            const token = segment[tokenIndex];\r\n            // resets the score if we are inside a sub segment /:a-other-:b\r\n            let subSegmentScore = 40 /* Segment */ +\r\n                (options.sensitive ? 0.25 /* BonusCaseSensitive */ : 0);\r\n            if (token.type === 0 /* Static */) {\r\n                // prepend the slash if we are starting a new segment\r\n                if (!tokenIndex)\r\n                    pattern += '/';\r\n                pattern += token.value.replace(REGEX_CHARS_RE, '\\\\$&');\r\n                subSegmentScore += 40 /* Static */;\r\n            }\r\n            else if (token.type === 1 /* Param */) {\r\n                const { value, repeatable, optional, regexp } = token;\r\n                keys.push({\r\n                    name: value,\r\n                    repeatable,\r\n                    optional,\r\n                });\r\n                const re = regexp ? regexp : BASE_PARAM_PATTERN;\r\n                // the user provided a custom regexp /:id(\\\\d+)\r\n                if (re !== BASE_PARAM_PATTERN) {\r\n                    subSegmentScore += 10 /* BonusCustomRegExp */;\r\n                    // make sure the regexp is valid before using it\r\n                    try {\r\n                        new RegExp(`(${re})`);\r\n                    }\r\n                    catch (err) {\r\n                        throw new Error(`Invalid custom RegExp for param \"${value}\" (${re}): ` +\r\n                            err.message);\r\n                    }\r\n                }\r\n                // when we repeat we must take care of the repeating leading slash\r\n                let subPattern = repeatable ? `((?:${re})(?:/(?:${re}))*)` : `(${re})`;\r\n                // prepend the slash if we are starting a new segment\r\n                if (!tokenIndex)\r\n                    subPattern = optional ? `(?:/${subPattern})` : '/' + subPattern;\r\n                if (optional)\r\n                    subPattern += '?';\r\n                pattern += subPattern;\r\n                subSegmentScore += 20 /* Dynamic */;\r\n                if (optional)\r\n                    subSegmentScore += -8 /* BonusOptional */;\r\n                if (repeatable)\r\n                    subSegmentScore += -20 /* BonusRepeatable */;\r\n                if (re === '.*')\r\n                    subSegmentScore += -50 /* BonusWildcard */;\r\n            }\r\n            segmentScores.push(subSegmentScore);\r\n        }\r\n        // an empty array like /home/ -> [[{home}], []]\r\n        // if (!segment.length) pattern += '/'\r\n        score.push(segmentScores);\r\n    }\r\n    // only apply the strict bonus to the last score\r\n    if (options.strict && options.end) {\r\n        const i = score.length - 1;\r\n        score[i][score[i].length - 1] += 0.7000000000000001 /* BonusStrict */;\r\n    }\r\n    // TODO: dev only warn double trailing slash\r\n    if (!options.strict)\r\n        pattern += '/?';\r\n    if (options.end)\r\n        pattern += '$';\r\n    // allow paths like /dynamic to only match dynamic or dynamic/... but not dynamic_something_else\r\n    else if (options.strict)\r\n        pattern += '(?:/|$)';\r\n    const re = new RegExp(pattern, options.sensitive ? '' : 'i');\r\n    function parse(path) {\r\n        const match = path.match(re);\r\n        const params = {};\r\n        if (!match)\r\n            return null;\r\n        for (let i = 1; i < match.length; i++) {\r\n            const value = match[i] || '';\r\n            const key = keys[i - 1];\r\n            params[key.name] = value && key.repeatable ? value.split('/') : value;\r\n        }\r\n        return params;\r\n    }\r\n    function stringify(params) {\r\n        let path = '';\r\n        // for optional parameters to allow to be empty\r\n        let avoidDuplicatedSlash = false;\r\n        for (const segment of segments) {\r\n            if (!avoidDuplicatedSlash || !path.endsWith('/'))\r\n                path += '/';\r\n            avoidDuplicatedSlash = false;\r\n            for (const token of segment) {\r\n                if (token.type === 0 /* Static */) {\r\n                    path += token.value;\r\n                }\r\n                else if (token.type === 1 /* Param */) {\r\n                    const { value, repeatable, optional } = token;\r\n                    const param = value in params ? params[value] : '';\r\n                    if (Array.isArray(param) && !repeatable)\r\n                        throw new Error(`Provided param \"${value}\" is an array but it is not repeatable (* or + modifiers)`);\r\n                    const text = Array.isArray(param) ? param.join('/') : param;\r\n                    if (!text) {\r\n                        if (optional) {\r\n                            // remove the last slash as we could be at the end\r\n                            if (path.endsWith('/'))\r\n                                path = path.slice(0, -1);\r\n                            // do not append a slash on the next iteration\r\n                            else\r\n                                avoidDuplicatedSlash = true;\r\n                        }\r\n                        else\r\n                            throw new Error(`Missing required param \"${value}\"`);\r\n                    }\r\n                    path += text;\r\n                }\r\n            }\r\n        }\r\n        return path;\r\n    }\r\n    return {\r\n        re,\r\n        score,\r\n        keys,\r\n        parse,\r\n        stringify,\r\n    };\r\n}\r\n/**\r\n * Compares an array of numbers as used in PathParser.score and returns a\r\n * number. This function can be used to `sort` an array\r\n * @param a - first array of numbers\r\n * @param b - second array of numbers\r\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\r\n * should be sorted first\r\n */\r\nfunction compareScoreArray(a, b) {\r\n    let i = 0;\r\n    while (i < a.length && i < b.length) {\r\n        const diff = b[i] - a[i];\r\n        // only keep going if diff === 0\r\n        if (diff)\r\n            return diff;\r\n        i++;\r\n    }\r\n    // if the last subsegment was Static, the shorter segments should be sorted first\r\n    // otherwise sort the longest segment first\r\n    if (a.length < b.length) {\r\n        return a.length === 1 && a[0] === 40 /* Static */ + 40 /* Segment */\r\n            ? -1\r\n            : 1;\r\n    }\r\n    else if (a.length > b.length) {\r\n        return b.length === 1 && b[0] === 40 /* Static */ + 40 /* Segment */\r\n            ? 1\r\n            : -1;\r\n    }\r\n    return 0;\r\n}\r\n/**\r\n * Compare function that can be used with `sort` to sort an array of PathParser\r\n * @param a - first PathParser\r\n * @param b - second PathParser\r\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\r\n */\r\nfunction comparePathParserScore(a, b) {\r\n    let i = 0;\r\n    const aScore = a.score;\r\n    const bScore = b.score;\r\n    while (i < aScore.length && i < bScore.length) {\r\n        const comp = compareScoreArray(aScore[i], bScore[i]);\r\n        // do not return if both are equal\r\n        if (comp)\r\n            return comp;\r\n        i++;\r\n    }\r\n    // if a and b share the same score entries but b has more, sort b first\r\n    return bScore.length - aScore.length;\r\n    // this is the ternary version\r\n    // return aScore.length < bScore.length\r\n    //   ? 1\r\n    //   : aScore.length > bScore.length\r\n    //   ? -1\r\n    //   : 0\r\n}\n\nconst ROOT_TOKEN = {\r\n    type: 0 /* Static */,\r\n    value: '',\r\n};\r\nconst VALID_PARAM_RE = /[a-zA-Z0-9_]/;\r\n// After some profiling, the cache seems to be unnecessary because tokenizePath\r\n// (the slowest part of adding a route) is very fast\r\n// const tokenCache = new Map<string, Token[][]>()\r\nfunction tokenizePath(path) {\r\n    if (!path)\r\n        return [[]];\r\n    if (path === '/')\r\n        return [[ROOT_TOKEN]];\r\n    if (!path.startsWith('/')) {\r\n        throw new Error((process.env.NODE_ENV !== 'production')\r\n            ? `Route paths should start with a \"/\": \"${path}\" should be \"/${path}\".`\r\n            : `Invalid path \"${path}\"`);\r\n    }\r\n    // if (tokenCache.has(path)) return tokenCache.get(path)!\r\n    function crash(message) {\r\n        throw new Error(`ERR (${state})/\"${buffer}\": ${message}`);\r\n    }\r\n    let state = 0 /* Static */;\r\n    let previousState = state;\r\n    const tokens = [];\r\n    // the segment will always be valid because we get into the initial state\r\n    // with the leading /\r\n    let segment;\r\n    function finalizeSegment() {\r\n        if (segment)\r\n            tokens.push(segment);\r\n        segment = [];\r\n    }\r\n    // index on the path\r\n    let i = 0;\r\n    // char at index\r\n    let char;\r\n    // buffer of the value read\r\n    let buffer = '';\r\n    // custom regexp for a param\r\n    let customRe = '';\r\n    function consumeBuffer() {\r\n        if (!buffer)\r\n            return;\r\n        if (state === 0 /* Static */) {\r\n            segment.push({\r\n                type: 0 /* Static */,\r\n                value: buffer,\r\n            });\r\n        }\r\n        else if (state === 1 /* Param */ ||\r\n            state === 2 /* ParamRegExp */ ||\r\n            state === 3 /* ParamRegExpEnd */) {\r\n            if (segment.length > 1 && (char === '*' || char === '+'))\r\n                crash(`A repeatable param (${buffer}) must be alone in its segment. eg: '/:ids+.`);\r\n            segment.push({\r\n                type: 1 /* Param */,\r\n                value: buffer,\r\n                regexp: customRe,\r\n                repeatable: char === '*' || char === '+',\r\n                optional: char === '*' || char === '?',\r\n            });\r\n        }\r\n        else {\r\n            crash('Invalid state to consume buffer');\r\n        }\r\n        buffer = '';\r\n    }\r\n    function addCharToBuffer() {\r\n        buffer += char;\r\n    }\r\n    while (i < path.length) {\r\n        char = path[i++];\r\n        if (char === '\\\\' && state !== 2 /* ParamRegExp */) {\r\n            previousState = state;\r\n            state = 4 /* EscapeNext */;\r\n            continue;\r\n        }\r\n        switch (state) {\r\n            case 0 /* Static */:\r\n                if (char === '/') {\r\n                    if (buffer) {\r\n                        consumeBuffer();\r\n                    }\r\n                    finalizeSegment();\r\n                }\r\n                else if (char === ':') {\r\n                    consumeBuffer();\r\n                    state = 1 /* Param */;\r\n                }\r\n                else {\r\n                    addCharToBuffer();\r\n                }\r\n                break;\r\n            case 4 /* EscapeNext */:\r\n                addCharToBuffer();\r\n                state = previousState;\r\n                break;\r\n            case 1 /* Param */:\r\n                if (char === '(') {\r\n                    state = 2 /* ParamRegExp */;\r\n                }\r\n                else if (VALID_PARAM_RE.test(char)) {\r\n                    addCharToBuffer();\r\n                }\r\n                else {\r\n                    consumeBuffer();\r\n                    state = 0 /* Static */;\r\n                    // go back one character if we were not modifying\r\n                    if (char !== '*' && char !== '?' && char !== '+')\r\n                        i--;\r\n                }\r\n                break;\r\n            case 2 /* ParamRegExp */:\r\n                // TODO: is it worth handling nested regexp? like :p(?:prefix_([^/]+)_suffix)\r\n                // it already works by escaping the closing )\r\n                // https://paths.esm.dev/?p=AAMeJbiAwQEcDKbAoAAkP60PG2R6QAvgNaA6AFACM2ABuQBB#\r\n                // is this really something people need since you can also write\r\n                // /prefix_:p()_suffix\r\n                if (char === ')') {\r\n                    // handle the escaped )\r\n                    if (customRe[customRe.length - 1] == '\\\\')\r\n                        customRe = customRe.slice(0, -1) + char;\r\n                    else\r\n                        state = 3 /* ParamRegExpEnd */;\r\n                }\r\n                else {\r\n                    customRe += char;\r\n                }\r\n                break;\r\n            case 3 /* ParamRegExpEnd */:\r\n                // same as finalizing a param\r\n                consumeBuffer();\r\n                state = 0 /* Static */;\r\n                // go back one character if we were not modifying\r\n                if (char !== '*' && char !== '?' && char !== '+')\r\n                    i--;\r\n                customRe = '';\r\n                break;\r\n            default:\r\n                crash('Unknown state');\r\n                break;\r\n        }\r\n    }\r\n    if (state === 2 /* ParamRegExp */)\r\n        crash(`Unfinished custom RegExp for param \"${buffer}\"`);\r\n    consumeBuffer();\r\n    finalizeSegment();\r\n    // tokenCache.set(path, tokens)\r\n    return tokens;\r\n}\n\nfunction createRouteRecordMatcher(record, parent, options) {\r\n    const parser = tokensToParser(tokenizePath(record.path), options);\r\n    // warn against params with the same name\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const existingKeys = new Set();\r\n        for (const key of parser.keys) {\r\n            if (existingKeys.has(key.name))\r\n                warn(`Found duplicated params with name \"${key.name}\" for path \"${record.path}\". Only the last one will be available on \"$route.params\".`);\r\n            existingKeys.add(key.name);\r\n        }\r\n    }\r\n    const matcher = assign(parser, {\r\n        record,\r\n        parent,\r\n        // these needs to be populated by the parent\r\n        children: [],\r\n        alias: [],\r\n    });\r\n    if (parent) {\r\n        // both are aliases or both are not aliases\r\n        // we don't want to mix them because the order is used when\r\n        // passing originalRecord in Matcher.addRoute\r\n        if (!matcher.record.aliasOf === !parent.record.aliasOf)\r\n            parent.children.push(matcher);\r\n    }\r\n    return matcher;\r\n}\n\n/**\r\n * Creates a Router Matcher.\r\n *\r\n * @internal\r\n * @param routes - array of initial routes\r\n * @param globalOptions - global route options\r\n */\r\nfunction createRouterMatcher(routes, globalOptions) {\r\n    // normalized ordered array of matchers\r\n    const matchers = [];\r\n    const matcherMap = new Map();\r\n    globalOptions = mergeOptions({ strict: false, end: true, sensitive: false }, globalOptions);\r\n    function getRecordMatcher(name) {\r\n        return matcherMap.get(name);\r\n    }\r\n    function addRoute(record, parent, originalRecord) {\r\n        // used later on to remove by name\r\n        let isRootAdd = !originalRecord;\r\n        let mainNormalizedRecord = normalizeRouteRecord(record);\r\n        // we might be the child of an alias\r\n        mainNormalizedRecord.aliasOf = originalRecord && originalRecord.record;\r\n        const options = mergeOptions(globalOptions, record);\r\n        // generate an array of records to correctly handle aliases\r\n        const normalizedRecords = [\r\n            mainNormalizedRecord,\r\n        ];\r\n        if ('alias' in record) {\r\n            const aliases = typeof record.alias === 'string' ? [record.alias] : record.alias;\r\n            for (const alias of aliases) {\r\n                normalizedRecords.push(assign({}, mainNormalizedRecord, {\r\n                    // this allows us to hold a copy of the `components` option\r\n                    // so that async components cache is hold on the original record\r\n                    components: originalRecord\r\n                        ? originalRecord.record.components\r\n                        : mainNormalizedRecord.components,\r\n                    path: alias,\r\n                    // we might be the child of an alias\r\n                    aliasOf: originalRecord\r\n                        ? originalRecord.record\r\n                        : mainNormalizedRecord,\r\n                }));\r\n            }\r\n        }\r\n        let matcher;\r\n        let originalMatcher;\r\n        for (const normalizedRecord of normalizedRecords) {\r\n            let { path } = normalizedRecord;\r\n            // Build up the path for nested routes if the child isn't an absolute\r\n            // route. Only add the / delimiter if the child path isn't empty and if the\r\n            // parent path doesn't have a trailing slash\r\n            if (parent && path[0] !== '/') {\r\n                let parentPath = parent.record.path;\r\n                let connectingSlash = parentPath[parentPath.length - 1] === '/' ? '' : '/';\r\n                normalizedRecord.path =\r\n                    parent.record.path + (path && connectingSlash + path);\r\n            }\r\n            if ((process.env.NODE_ENV !== 'production') && normalizedRecord.path === '*') {\r\n                throw new Error('Catch all routes (\"*\") must now be defined using a param with a custom regexp.\\n' +\r\n                    'See more at https://next.router.vuejs.org/guide/migration/#removed-star-or-catch-all-routes.');\r\n            }\r\n            // create the object before hand so it can be passed to children\r\n            matcher = createRouteRecordMatcher(normalizedRecord, parent, options);\r\n            if ((process.env.NODE_ENV !== 'production') && parent && path[0] === '/')\r\n                checkMissingParamsInAbsolutePath(matcher, parent);\r\n            // if we are an alias we must tell the original record that we exist\r\n            // so we can be removed\r\n            if (originalRecord) {\r\n                originalRecord.alias.push(matcher);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkSameParams(originalRecord, matcher);\r\n                }\r\n            }\r\n            else {\r\n                // otherwise, the first record is the original and others are aliases\r\n                originalMatcher = originalMatcher || matcher;\r\n                if (originalMatcher !== matcher)\r\n                    originalMatcher.alias.push(matcher);\r\n                // remove the route if named and only for the top record (avoid in nested calls)\r\n                // this works because the original record is the first one\r\n                if (isRootAdd && record.name && !isAliasRecord(matcher))\r\n                    removeRoute(record.name);\r\n            }\r\n            if ('children' in mainNormalizedRecord) {\r\n                let children = mainNormalizedRecord.children;\r\n                for (let i = 0; i < children.length; i++) {\r\n                    addRoute(children[i], matcher, originalRecord && originalRecord.children[i]);\r\n                }\r\n            }\r\n            // if there was no original record, then the first one was not an alias and all\r\n            // other alias (if any) need to reference this record when adding children\r\n            originalRecord = originalRecord || matcher;\r\n            // TODO: add normalized records for more flexibility\r\n            // if (parent && isAliasRecord(originalRecord)) {\r\n            //   parent.children.push(originalRecord)\r\n            // }\r\n            insertMatcher(matcher);\r\n        }\r\n        return originalMatcher\r\n            ? () => {\r\n                // since other matchers are aliases, they should be removed by the original matcher\r\n                removeRoute(originalMatcher);\r\n            }\r\n            : noop;\r\n    }\r\n    function removeRoute(matcherRef) {\r\n        if (isRouteName(matcherRef)) {\r\n            const matcher = matcherMap.get(matcherRef);\r\n            if (matcher) {\r\n                matcherMap.delete(matcherRef);\r\n                matchers.splice(matchers.indexOf(matcher), 1);\r\n                matcher.children.forEach(removeRoute);\r\n                matcher.alias.forEach(removeRoute);\r\n            }\r\n        }\r\n        else {\r\n            let index = matchers.indexOf(matcherRef);\r\n            if (index > -1) {\r\n                matchers.splice(index, 1);\r\n                if (matcherRef.record.name)\r\n                    matcherMap.delete(matcherRef.record.name);\r\n                matcherRef.children.forEach(removeRoute);\r\n                matcherRef.alias.forEach(removeRoute);\r\n            }\r\n        }\r\n    }\r\n    function getRoutes() {\r\n        return matchers;\r\n    }\r\n    function insertMatcher(matcher) {\r\n        let i = 0;\r\n        // console.log('i is', { i })\r\n        while (i < matchers.length &&\r\n            comparePathParserScore(matcher, matchers[i]) >= 0)\r\n            i++;\r\n        // console.log('END i is', { i })\r\n        // while (i < matchers.length && matcher.score <= matchers[i].score) i++\r\n        matchers.splice(i, 0, matcher);\r\n        // only add the original record to the name map\r\n        if (matcher.record.name && !isAliasRecord(matcher))\r\n            matcherMap.set(matcher.record.name, matcher);\r\n    }\r\n    function resolve(location, currentLocation) {\r\n        let matcher;\r\n        let params = {};\r\n        let path;\r\n        let name;\r\n        if ('name' in location && location.name) {\r\n            matcher = matcherMap.get(location.name);\r\n            if (!matcher)\r\n                throw createRouterError(1 /* MATCHER_NOT_FOUND */, {\r\n                    location,\r\n                });\r\n            name = matcher.record.name;\r\n            params = assign(\r\n            // paramsFromLocation is a new object\r\n            paramsFromLocation(currentLocation.params, \r\n            // only keep params that exist in the resolved location\r\n            // TODO: only keep optional params coming from a parent record\r\n            matcher.keys.filter(k => !k.optional).map(k => k.name)), location.params);\r\n            // throws if cannot be stringified\r\n            path = matcher.stringify(params);\r\n        }\r\n        else if ('path' in location) {\r\n            // no need to resolve the path with the matcher as it was provided\r\n            // this also allows the user to control the encoding\r\n            path = location.path;\r\n            if ((process.env.NODE_ENV !== 'production') && !path.startsWith('/')) {\r\n                warn(`The Matcher cannot resolve relative paths but received \"${path}\". Unless you directly called \\`matcher.resolve(\"${path}\")\\`, this is probably a bug in vue-router. Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-router-next.`);\r\n            }\r\n            matcher = matchers.find(m => m.re.test(path));\r\n            // matcher should have a value after the loop\r\n            if (matcher) {\r\n                // TODO: dev warning of unused params if provided\r\n                // we know the matcher works because we tested the regexp\r\n                params = matcher.parse(path);\r\n                name = matcher.record.name;\r\n            }\r\n            // location is a relative path\r\n        }\r\n        else {\r\n            // match by name or path of current route\r\n            matcher = currentLocation.name\r\n                ? matcherMap.get(currentLocation.name)\r\n                : matchers.find(m => m.re.test(currentLocation.path));\r\n            if (!matcher)\r\n                throw createRouterError(1 /* MATCHER_NOT_FOUND */, {\r\n                    location,\r\n                    currentLocation,\r\n                });\r\n            name = matcher.record.name;\r\n            // since we are navigating to the same location, we don't need to pick the\r\n            // params like when `name` is provided\r\n            params = assign({}, currentLocation.params, location.params);\r\n            path = matcher.stringify(params);\r\n        }\r\n        const matched = [];\r\n        let parentMatcher = matcher;\r\n        while (parentMatcher) {\r\n            // reversed order so parents are at the beginning\r\n            matched.unshift(parentMatcher.record);\r\n            parentMatcher = parentMatcher.parent;\r\n        }\r\n        return {\r\n            name,\r\n            path,\r\n            params,\r\n            matched,\r\n            meta: mergeMetaFields(matched),\r\n        };\r\n    }\r\n    // add initial routes\r\n    routes.forEach(route => addRoute(route));\r\n    return { addRoute, resolve, removeRoute, getRoutes, getRecordMatcher };\r\n}\r\nfunction paramsFromLocation(params, keys) {\r\n    let newParams = {};\r\n    for (let key of keys) {\r\n        if (key in params)\r\n            newParams[key] = params[key];\r\n    }\r\n    return newParams;\r\n}\r\n/**\r\n * Normalizes a RouteRecordRaw. Creates a copy\r\n *\r\n * @param record\r\n * @returns the normalized version\r\n */\r\nfunction normalizeRouteRecord(record) {\r\n    return {\r\n        path: record.path,\r\n        redirect: record.redirect,\r\n        name: record.name,\r\n        meta: record.meta || {},\r\n        aliasOf: undefined,\r\n        beforeEnter: record.beforeEnter,\r\n        props: normalizeRecordProps(record),\r\n        children: record.children || [],\r\n        instances: {},\r\n        leaveGuards: new Set(),\r\n        updateGuards: new Set(),\r\n        enterCallbacks: {},\r\n        components: 'components' in record\r\n            ? record.components || {}\r\n            : { default: record.component },\r\n    };\r\n}\r\n/**\r\n * Normalize the optional `props` in a record to always be an object similar to\r\n * components. Also accept a boolean for components.\r\n * @param record\r\n */\r\nfunction normalizeRecordProps(record) {\r\n    const propsObject = {};\r\n    // props does not exist on redirect records but we can set false directly\r\n    const props = record.props || false;\r\n    if ('component' in record) {\r\n        propsObject.default = props;\r\n    }\r\n    else {\r\n        // NOTE: we could also allow a function to be applied to every component.\r\n        // Would need user feedback for use cases\r\n        for (let name in record.components)\r\n            propsObject[name] = typeof props === 'boolean' ? props : props[name];\r\n    }\r\n    return propsObject;\r\n}\r\n/**\r\n * Checks if a record or any of its parent is an alias\r\n * @param record\r\n */\r\nfunction isAliasRecord(record) {\r\n    while (record) {\r\n        if (record.record.aliasOf)\r\n            return true;\r\n        record = record.parent;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Merge meta fields of an array of records\r\n *\r\n * @param matched - array of matched records\r\n */\r\nfunction mergeMetaFields(matched) {\r\n    return matched.reduce((meta, record) => assign(meta, record.meta), {});\r\n}\r\nfunction mergeOptions(defaults, partialOptions) {\r\n    let options = {};\r\n    for (let key in defaults) {\r\n        options[key] =\r\n            key in partialOptions ? partialOptions[key] : defaults[key];\r\n    }\r\n    return options;\r\n}\r\nfunction isSameParam(a, b) {\r\n    return (a.name === b.name &&\r\n        a.optional === b.optional &&\r\n        a.repeatable === b.repeatable);\r\n}\r\nfunction checkSameParams(a, b) {\r\n    for (let key of a.keys) {\r\n        if (!b.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" should have the exact same param named \"${key.name}\"`);\r\n    }\r\n    for (let key of b.keys) {\r\n        if (!a.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" should have the exact same param named \"${key.name}\"`);\r\n    }\r\n}\r\nfunction checkMissingParamsInAbsolutePath(record, parent) {\r\n    for (let key of parent.keys) {\r\n        if (!record.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Absolute path \"${record.record.path}\" should have the exact same param named \"${key.name}\" as its parent \"${parent.record.path}\".`);\r\n    }\r\n}\n\n/**\r\n * Encoding Rules ␣ = Space Path: ␣ \" < > # ? { } Query: ␣ \" < > # & = Hash: ␣ \"\r\n * < > `\r\n *\r\n * On top of that, the RFC3986 (https://tools.ietf.org/html/rfc3986#section-2.2)\r\n * defines some extra characters to be encoded. Most browsers do not encode them\r\n * in encodeURI https://github.com/whatwg/url/issues/369, so it may be safer to\r\n * also encode `!'()*`. Leaving unencoded only ASCII alphanumeric(`a-zA-Z0-9`)\r\n * plus `-._~`. This extra safety should be applied to query by patching the\r\n * string returned by encodeURIComponent encodeURI also encodes `[\\]^`. `\\`\r\n * should be encoded to avoid ambiguity. Browsers (IE, FF, C) transform a `\\`\r\n * into a `/` if directly typed in. The _backtick_ (`````) should also be\r\n * encoded everywhere because some browsers like FF encode it when directly\r\n * written while others don't. Safari and IE don't encode ``\"<>{}``` in hash.\r\n */\r\n// const EXTRA_RESERVED_RE = /[!'()*]/g\r\n// const encodeReservedReplacer = (c: string) => '%' + c.charCodeAt(0).toString(16)\r\nconst HASH_RE = /#/g; // %23\r\nconst AMPERSAND_RE = /&/g; // %26\r\nconst SLASH_RE = /\\//g; // %2F\r\nconst EQUAL_RE = /=/g; // %3D\r\nconst IM_RE = /\\?/g; // %3F\r\nconst PLUS_RE = /\\+/g; // %2B\r\n/**\r\n * NOTE: It's not clear to me if we should encode the + symbol in queries, it\r\n * seems to be less flexible than not doing so and I can't find out the legacy\r\n * systems requiring this for regular requests like text/html. In the standard,\r\n * the encoding of the plus character is only mentioned for\r\n * application/x-www-form-urlencoded\r\n * (https://url.spec.whatwg.org/#urlencoded-parsing) and most browsers seems lo\r\n * leave the plus character as is in queries. To be more flexible, we allow the\r\n * plus character on the query but it can also be manually encoded by the user.\r\n *\r\n * Resources:\r\n * - https://url.spec.whatwg.org/#urlencoded-parsing\r\n * - https://stackoverflow.com/questions/1634271/url-encoding-the-space-character-or-20\r\n */\r\nconst ENC_BRACKET_OPEN_RE = /%5B/g; // [\r\nconst ENC_BRACKET_CLOSE_RE = /%5D/g; // ]\r\nconst ENC_CARET_RE = /%5E/g; // ^\r\nconst ENC_BACKTICK_RE = /%60/g; // `\r\nconst ENC_CURLY_OPEN_RE = /%7B/g; // {\r\nconst ENC_PIPE_RE = /%7C/g; // |\r\nconst ENC_CURLY_CLOSE_RE = /%7D/g; // }\r\nconst ENC_SPACE_RE = /%20/g; // }\r\n/**\r\n * Encode characters that need to be encoded on the path, search and hash\r\n * sections of the URL.\r\n *\r\n * @internal\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction commonEncode(text) {\r\n    return encodeURI('' + text)\r\n        .replace(ENC_PIPE_RE, '|')\r\n        .replace(ENC_BRACKET_OPEN_RE, '[')\r\n        .replace(ENC_BRACKET_CLOSE_RE, ']');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the hash section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeHash(text) {\r\n    return commonEncode(text)\r\n        .replace(ENC_CURLY_OPEN_RE, '{')\r\n        .replace(ENC_CURLY_CLOSE_RE, '}')\r\n        .replace(ENC_CARET_RE, '^');\r\n}\r\n/**\r\n * Encode characters that need to be encoded query values on the query\r\n * section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeQueryValue(text) {\r\n    return (commonEncode(text)\r\n        // Encode the space as +, encode the + to differentiate it from the space\r\n        .replace(PLUS_RE, '%2B')\r\n        .replace(ENC_SPACE_RE, '+')\r\n        .replace(HASH_RE, '%23')\r\n        .replace(AMPERSAND_RE, '%26')\r\n        .replace(ENC_BACKTICK_RE, '`')\r\n        .replace(ENC_CURLY_OPEN_RE, '{')\r\n        .replace(ENC_CURLY_CLOSE_RE, '}')\r\n        .replace(ENC_CARET_RE, '^'));\r\n}\r\n/**\r\n * Like `encodeQueryValue` but also encodes the `=` character.\r\n *\r\n * @param text - string to encode\r\n */\r\nfunction encodeQueryKey(text) {\r\n    return encodeQueryValue(text).replace(EQUAL_RE, '%3D');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the path section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodePath(text) {\r\n    return commonEncode(text).replace(HASH_RE, '%23').replace(IM_RE, '%3F');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the path section of the URL as a\r\n * param. This function encodes everything {@link encodePath} does plus the\r\n * slash (`/`) character.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeParam(text) {\r\n    return encodePath(text).replace(SLASH_RE, '%2F');\r\n}\r\n/**\r\n * Decode text using `decodeURIComponent`. Returns the original text if it\r\n * fails.\r\n *\r\n * @param text - string to decode\r\n * @returns decoded string\r\n */\r\nfunction decode(text) {\r\n    try {\r\n        return decodeURIComponent('' + text);\r\n    }\r\n    catch (err) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`Error decoding \"${text}\". Using original value`);\r\n    }\r\n    return '' + text;\r\n}\n\n/**\r\n * Transforms a queryString into a {@link LocationQuery} object. Accept both, a\r\n * version with the leading `?` and without Should work as URLSearchParams\r\n\n * @internal\r\n *\r\n * @param search - search string to parse\r\n * @returns a query object\r\n */\r\nfunction parseQuery(search) {\r\n    const query = {};\r\n    // avoid creating an object with an empty key and empty value\r\n    // because of split('&')\r\n    if (search === '' || search === '?')\r\n        return query;\r\n    const hasLeadingIM = search[0] === '?';\r\n    const searchParams = (hasLeadingIM ? search.slice(1) : search).split('&');\r\n    for (let i = 0; i < searchParams.length; ++i) {\r\n        // pre decode the + into space\r\n        const searchParam = searchParams[i].replace(PLUS_RE, ' ');\r\n        // allow the = character\r\n        let eqPos = searchParam.indexOf('=');\r\n        let key = decode(eqPos < 0 ? searchParam : searchParam.slice(0, eqPos));\r\n        let value = eqPos < 0 ? null : decode(searchParam.slice(eqPos + 1));\r\n        if (key in query) {\r\n            // an extra variable for ts types\r\n            let currentValue = query[key];\r\n            if (!Array.isArray(currentValue)) {\r\n                currentValue = query[key] = [currentValue];\r\n            }\r\n            currentValue.push(value);\r\n        }\r\n        else {\r\n            query[key] = value;\r\n        }\r\n    }\r\n    return query;\r\n}\r\n/**\r\n * Stringifies a {@link LocationQueryRaw} object. Like `URLSearchParams`, it\r\n * doesn't prepend a `?`\r\n *\r\n * @internal\r\n *\r\n * @param query - query object to stringify\r\n * @returns string version of the query without the leading `?`\r\n */\r\nfunction stringifyQuery(query) {\r\n    let search = '';\r\n    for (let key in query) {\r\n        if (search.length)\r\n            search += '&';\r\n        const value = query[key];\r\n        key = encodeQueryKey(key);\r\n        if (value == null) {\r\n            // only null adds the value\r\n            if (value !== undefined)\r\n                search += key;\r\n            continue;\r\n        }\r\n        // keep null values\r\n        let values = Array.isArray(value)\r\n            ? value.map(v => v && encodeQueryValue(v))\r\n            : [value && encodeQueryValue(value)];\r\n        for (let i = 0; i < values.length; i++) {\r\n            // only append & with i > 0\r\n            search += (i ? '&' : '') + key;\r\n            if (values[i] != null)\r\n                search += ('=' + values[i]);\r\n        }\r\n    }\r\n    return search;\r\n}\r\n/**\r\n * Transforms a {@link LocationQueryRaw} into a {@link LocationQuery} by casting\r\n * numbers into strings, removing keys with an undefined value and replacing\r\n * undefined with null in arrays\r\n *\r\n * @param query - query object to normalize\r\n * @returns a normalized query object\r\n */\r\nfunction normalizeQuery(query) {\r\n    const normalizedQuery = {};\r\n    for (let key in query) {\r\n        let value = query[key];\r\n        if (value !== undefined) {\r\n            normalizedQuery[key] = Array.isArray(value)\r\n                ? value.map(v => (v == null ? null : '' + v))\r\n                : value == null\r\n                    ? value\r\n                    : '' + value;\r\n        }\r\n    }\r\n    return normalizedQuery;\r\n}\n\n/**\r\n * Create a list of callbacks that can be reset. Used to create before and after navigation guards list\r\n */\r\nfunction useCallbacks() {\r\n    let handlers = [];\r\n    function add(handler) {\r\n        handlers.push(handler);\r\n        return () => {\r\n            const i = handlers.indexOf(handler);\r\n            if (i > -1)\r\n                handlers.splice(i, 1);\r\n        };\r\n    }\r\n    function reset() {\r\n        handlers = [];\r\n    }\r\n    return {\r\n        add,\r\n        list: () => handlers,\r\n        reset,\r\n    };\r\n}\n\nfunction registerGuard(record, name, guard) {\r\n    const removeFromList = () => {\r\n        record[name].delete(guard);\r\n    };\r\n    onUnmounted(removeFromList);\r\n    onDeactivated(removeFromList);\r\n    onActivated(() => {\r\n        record[name].add(guard);\r\n    });\r\n    record[name].add(guard);\r\n}\r\n/**\r\n * Add a navigation guard that triggers whenever the component for the current\r\n * location is about to be left. Similar to {@link beforeRouteLeave} but can be\r\n * used in any component. The guard is removed when the component is unmounted.\r\n *\r\n * @param leaveGuard - {@link NavigationGuard}\r\n */\r\nfunction onBeforeRouteLeave(leaveGuard) {\r\n    if ((process.env.NODE_ENV !== 'production') && !getCurrentInstance()) {\r\n        warn('getCurrentInstance() returned null. onBeforeRouteLeave() must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    const activeRecord = inject(matchedRouteKey, {}).value;\r\n    if (!activeRecord) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn('No active route record was found. Are you missing a <router-view> component?');\r\n        return;\r\n    }\r\n    registerGuard(activeRecord, 'leaveGuards', leaveGuard);\r\n}\r\n/**\r\n * Add a navigation guard that triggers whenever the current location is about\r\n * to be updated. Similar to {@link beforeRouteUpdate} but can be used in any\r\n * component. The guard is removed when the component is unmounted.\r\n *\r\n * @param updateGuard - {@link NavigationGuard}\r\n */\r\nfunction onBeforeRouteUpdate(updateGuard) {\r\n    if ((process.env.NODE_ENV !== 'production') && !getCurrentInstance()) {\r\n        warn('getCurrentInstance() returned null. onBeforeRouteUpdate() must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    const activeRecord = inject(matchedRouteKey, {}).value;\r\n    if (!activeRecord) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn('No active route record was found. Are you missing a <router-view> component?');\r\n        return;\r\n    }\r\n    registerGuard(activeRecord, 'updateGuards', updateGuard);\r\n}\r\nfunction guardToPromiseFn(guard, to, from, record, name) {\r\n    // keep a reference to the enterCallbackArray to prevent pushing callbacks if a new navigation took place\r\n    const enterCallbackArray = record &&\r\n        // name is defined if record is because of the function overload\r\n        (record.enterCallbacks[name] = record.enterCallbacks[name] || []);\r\n    return () => new Promise((resolve, reject) => {\r\n        const next = (valid) => {\r\n            if (valid === false)\r\n                reject(createRouterError(4 /* NAVIGATION_ABORTED */, {\r\n                    from,\r\n                    to,\r\n                }));\r\n            else if (valid instanceof Error) {\r\n                reject(valid);\r\n            }\r\n            else if (isRouteLocation(valid)) {\r\n                reject(createRouterError(2 /* NAVIGATION_GUARD_REDIRECT */, {\r\n                    from: to,\r\n                    to: valid,\r\n                }));\r\n            }\r\n            else {\r\n                if (enterCallbackArray &&\r\n                    // since enterCallbackArray is truthy, both record and name also are\r\n                    record.enterCallbacks[name] === enterCallbackArray &&\r\n                    typeof valid === 'function')\r\n                    enterCallbackArray.push(valid);\r\n                resolve();\r\n            }\r\n        };\r\n        // wrapping with Promise.resolve allows it to work with both async and sync guards\r\n        const guardReturn = guard.call(record && record.instances[name], to, from, (process.env.NODE_ENV !== 'production') ? canOnlyBeCalledOnce(next, to, from) : next);\r\n        let guardCall = Promise.resolve(guardReturn);\r\n        if (guard.length < 3)\r\n            guardCall = guardCall.then(next);\r\n        if ((process.env.NODE_ENV !== 'production') && guard.length > 2) {\r\n            const message = `The \"next\" callback was never called inside of ${guard.name ? '\"' + guard.name + '\"' : ''}:\\n${guard.toString()}\\n. If you are returning a value instead of calling \"next\", make sure to remove the \"next\" parameter from your function.`;\r\n            if (typeof guardReturn === 'object' && 'then' in guardReturn) {\r\n                guardCall = guardCall.then(resolvedValue => {\r\n                    // @ts-ignore: _called is added at canOnlyBeCalledOnce\r\n                    if (!next._called) {\r\n                        warn(message);\r\n                        return Promise.reject(new Error('Invalid navigation guard'));\r\n                    }\r\n                    return resolvedValue;\r\n                });\r\n                // TODO: test me!\r\n            }\r\n            else if (guardReturn !== undefined) {\r\n                // @ts-ignore: _called is added at canOnlyBeCalledOnce\r\n                if (!next._called) {\r\n                    warn(message);\r\n                    reject(new Error('Invalid navigation guard'));\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        guardCall.catch(err => reject(err));\r\n    });\r\n}\r\nfunction canOnlyBeCalledOnce(next, to, from) {\r\n    let called = 0;\r\n    return function () {\r\n        if (called++ === 1)\r\n            warn(`The \"next\" callback was called more than once in one navigation guard when going from \"${from.fullPath}\" to \"${to.fullPath}\". It should be called exactly one time in each navigation guard. This will fail in production.`);\r\n        // @ts-ignore: we put it in the original one because it's easier to check\r\n        next._called = true;\r\n        if (called === 1)\r\n            next.apply(null, arguments);\r\n    };\r\n}\r\nfunction extractComponentsGuards(matched, guardType, to, from) {\r\n    const guards = [];\r\n    for (const record of matched) {\r\n        for (const name in record.components) {\r\n            let rawComponent = record.components[name];\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!rawComponent ||\r\n                    (typeof rawComponent !== 'object' &&\r\n                        typeof rawComponent !== 'function')) {\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is not` +\r\n                        ` a valid component. Received \"${String(rawComponent)}\".`);\r\n                    // throw to ensure we stop here but warn to ensure the message isn't\r\n                    // missed by the user\r\n                    throw new Error('Invalid route component');\r\n                }\r\n                else if ('then' in rawComponent) {\r\n                    // warn if user wrote import('/component.vue') instead of () =>\r\n                    // import('./component.vue')\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is a ` +\r\n                        `Promise instead of a function that returns a Promise. Did you ` +\r\n                        `write \"import('./MyPage.vue')\" instead of ` +\r\n                        `\"() => import('./MyPage.vue')\" ? This will break in ` +\r\n                        `production if not fixed.`);\r\n                    let promise = rawComponent;\r\n                    rawComponent = () => promise;\r\n                }\r\n                else if (rawComponent.__asyncLoader &&\r\n                    // warn only once per component\r\n                    !rawComponent.__warnedDefineAsync) {\r\n                    rawComponent.__warnedDefineAsync = true;\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is defined ` +\r\n                        `using \"defineAsyncComponent()\". ` +\r\n                        `Write \"() => import('./MyPage.vue')\" instead of ` +\r\n                        `\"defineAsyncComponent(() => import('./MyPage.vue'))\".`);\r\n                }\r\n            }\r\n            // skip update and leave guards if the route component is not mounted\r\n            if (guardType !== 'beforeRouteEnter' && !record.instances[name])\r\n                continue;\r\n            if (isRouteComponent(rawComponent)) {\r\n                // __vccOpts is added by vue-class-component and contain the regular options\r\n                let options = rawComponent.__vccOpts || rawComponent;\r\n                const guard = options[guardType];\r\n                guard && guards.push(guardToPromiseFn(guard, to, from, record, name));\r\n            }\r\n            else {\r\n                // start requesting the chunk already\r\n                let componentPromise = rawComponent();\r\n                if ((process.env.NODE_ENV !== 'production') && !('catch' in componentPromise)) {\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is a function that does not return a Promise. If you were passing a functional component, make sure to add a \"displayName\" to the component. This will break in production if not fixed.`);\r\n                    componentPromise = Promise.resolve(componentPromise);\r\n                }\r\n                else {\r\n                    // display the error if any\r\n                    componentPromise = componentPromise.catch((process.env.NODE_ENV !== 'production') ? err => err && warn(err) : console.error);\r\n                }\r\n                guards.push(() => componentPromise.then(resolved => {\r\n                    if (!resolved)\r\n                        return Promise.reject(new Error(`Couldn't resolve component \"${name}\" at \"${record.path}\"`));\r\n                    const resolvedComponent = isESModule(resolved)\r\n                        ? resolved.default\r\n                        : resolved;\r\n                    // replace the function with the resolved component\r\n                    record.components[name] = resolvedComponent;\r\n                    // @ts-ignore: the options types are not propagated to Component\r\n                    const guard = resolvedComponent[guardType];\r\n                    return guard && guardToPromiseFn(guard, to, from, record, name)();\r\n                }));\r\n            }\r\n        }\r\n    }\r\n    return guards;\r\n}\r\n/**\r\n * Allows differentiating lazy components from functional components and vue-class-component\r\n * @param component\r\n */\r\nfunction isRouteComponent(component) {\r\n    return (typeof component === 'object' ||\r\n        'displayName' in component ||\r\n        'props' in component ||\r\n        '__vccOpts' in component);\r\n}\n\n// TODO: we could allow currentRoute as a prop to expose `isActive` and\r\n// `isExactActive` behavior should go through an RFC\r\nfunction useLink(props) {\r\n    const router = inject(routerKey);\r\n    const currentRoute = inject(routeLocationKey);\r\n    const route = computed(() => router.resolve(unref(props.to)));\r\n    const activeRecordIndex = computed(() => {\r\n        let { matched } = route.value;\r\n        let { length } = matched;\r\n        const routeMatched = matched[length - 1];\r\n        let currentMatched = currentRoute.matched;\r\n        if (!routeMatched || !currentMatched.length)\r\n            return -1;\r\n        let index = currentMatched.findIndex(isSameRouteRecord.bind(null, routeMatched));\r\n        if (index > -1)\r\n            return index;\r\n        // possible parent record\r\n        let parentRecordPath = getOriginalPath(matched[length - 2]);\r\n        return (\r\n        // we are dealing with nested routes\r\n        length > 1 &&\r\n            // if the parent and matched route have the same path, this link is\r\n            // referring to the empty child. Or we currently are on a different\r\n            // child of the same parent\r\n            getOriginalPath(routeMatched) === parentRecordPath &&\r\n            // avoid comparing the child with its parent\r\n            currentMatched[currentMatched.length - 1].path !== parentRecordPath\r\n            ? currentMatched.findIndex(isSameRouteRecord.bind(null, matched[length - 2]))\r\n            : index);\r\n    });\r\n    const isActive = computed(() => activeRecordIndex.value > -1 &&\r\n        includesParams(currentRoute.params, route.value.params));\r\n    const isExactActive = computed(() => activeRecordIndex.value > -1 &&\r\n        activeRecordIndex.value === currentRoute.matched.length - 1 &&\r\n        isSameRouteLocationParams(currentRoute.params, route.value.params));\r\n    function navigate(e = {}) {\r\n        if (guardEvent(e))\r\n            return router[unref(props.replace) ? 'replace' : 'push'](unref(props.to));\r\n        return Promise.resolve();\r\n    }\r\n    return {\r\n        route,\r\n        href: computed(() => route.value.href),\r\n        isActive,\r\n        isExactActive,\r\n        navigate,\r\n    };\r\n}\r\nconst RouterLinkImpl = /*#__PURE__*/ defineComponent({\r\n    name: 'RouterLink',\r\n    props: {\r\n        to: {\r\n            type: [String, Object],\r\n            required: true,\r\n        },\r\n        replace: Boolean,\r\n        activeClass: String,\r\n        // inactiveClass: String,\r\n        exactActiveClass: String,\r\n        custom: Boolean,\r\n        ariaCurrentValue: {\r\n            type: String,\r\n            default: 'page',\r\n        },\r\n    },\r\n    setup(props, { slots, attrs }) {\r\n        const link = reactive(useLink(props));\r\n        const { options } = inject(routerKey);\r\n        const elClass = computed(() => ({\r\n            [getLinkClass(props.activeClass, options.linkActiveClass, 'router-link-active')]: link.isActive,\r\n            // [getLinkClass(\r\n            //   props.inactiveClass,\r\n            //   options.linkInactiveClass,\r\n            //   'router-link-inactive'\r\n            // )]: !link.isExactActive,\r\n            [getLinkClass(props.exactActiveClass, options.linkExactActiveClass, 'router-link-exact-active')]: link.isExactActive,\r\n        }));\r\n        return () => {\r\n            const children = slots.default && slots.default(link);\r\n            return props.custom\r\n                ? children\r\n                : h('a', assign({\r\n                    'aria-current': link.isExactActive\r\n                        ? props.ariaCurrentValue\r\n                        : null,\r\n                    onClick: link.navigate,\r\n                    href: link.href,\r\n                }, attrs, {\r\n                    class: elClass.value,\r\n                }), children);\r\n        };\r\n    },\r\n});\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\n/**\r\n * Component to render a link that triggers a navigation on click.\r\n */\r\nconst RouterLink = RouterLinkImpl;\r\nfunction guardEvent(e) {\r\n    // don't redirect with control keys\r\n    if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)\r\n        return;\r\n    // don't redirect when preventDefault called\r\n    if (e.defaultPrevented)\r\n        return;\r\n    // don't redirect on right click\r\n    if (e.button !== undefined && e.button !== 0)\r\n        return;\r\n    // don't redirect if `target=\"_blank\"`\r\n    // @ts-ignore getAttribute does exist\r\n    if (e.currentTarget && e.currentTarget.getAttribute) {\r\n        // @ts-ignore getAttribute exists\r\n        const target = e.currentTarget.getAttribute('target');\r\n        if (/\\b_blank\\b/i.test(target))\r\n            return;\r\n    }\r\n    // this may be a Weex event which doesn't have this method\r\n    if (e.preventDefault)\r\n        e.preventDefault();\r\n    return true;\r\n}\r\nfunction includesParams(outer, inner) {\r\n    for (let key in inner) {\r\n        let innerValue = inner[key];\r\n        let outerValue = outer[key];\r\n        if (typeof innerValue === 'string') {\r\n            if (innerValue !== outerValue)\r\n                return false;\r\n        }\r\n        else {\r\n            if (!Array.isArray(outerValue) ||\r\n                outerValue.length !== innerValue.length ||\r\n                innerValue.some((value, i) => value !== outerValue[i]))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Get the original path value of a record by following its aliasOf\r\n * @param record\r\n */\r\nfunction getOriginalPath(record) {\r\n    return record ? (record.aliasOf ? record.aliasOf.path : record.path) : '';\r\n}\r\n/**\r\n * Utility class to get the active class based on defaults.\r\n * @param propClass\r\n * @param globalClass\r\n * @param defaultClass\r\n */\r\nconst getLinkClass = (propClass, globalClass, defaultClass) => propClass != null\r\n    ? propClass\r\n    : globalClass != null\r\n        ? globalClass\r\n        : defaultClass;\n\nconst RouterViewImpl = /*#__PURE__*/ defineComponent({\r\n    name: 'RouterView',\r\n    // #674 we manually inherit them\r\n    inheritAttrs: false,\r\n    props: {\r\n        name: {\r\n            type: String,\r\n            default: 'default',\r\n        },\r\n        route: Object,\r\n    },\r\n    setup(props, { attrs, slots }) {\r\n        (process.env.NODE_ENV !== 'production') && warnDeprecatedUsage();\r\n        const injectedRoute = inject(routerViewLocationKey);\r\n        const routeToDisplay = computed(() => props.route || injectedRoute.value);\r\n        const depth = inject(viewDepthKey, 0);\r\n        const matchedRouteRef = computed(() => routeToDisplay.value.matched[depth]);\r\n        provide(viewDepthKey, depth + 1);\r\n        provide(matchedRouteKey, matchedRouteRef);\r\n        provide(routerViewLocationKey, routeToDisplay);\r\n        const viewRef = ref();\r\n        // watch at the same time the component instance, the route record we are\r\n        // rendering, and the name\r\n        watch(() => [viewRef.value, matchedRouteRef.value, props.name], ([instance, to, name], [oldInstance, from, oldName]) => {\r\n            // copy reused instances\r\n            if (to) {\r\n                // this will update the instance for new instances as well as reused\r\n                // instances when navigating to a new route\r\n                to.instances[name] = instance;\r\n                // the component instance is reused for a different route or name so\r\n                // we copy any saved update or leave guards\r\n                if (from && from !== to && instance && instance === oldInstance) {\r\n                    to.leaveGuards = from.leaveGuards;\r\n                    to.updateGuards = from.updateGuards;\r\n                }\r\n            }\r\n            // trigger beforeRouteEnter next callbacks\r\n            if (instance &&\r\n                to &&\r\n                // if there is no instance but to and from are the same this might be\r\n                // the first visit\r\n                (!from || !isSameRouteRecord(to, from) || !oldInstance)) {\r\n                (to.enterCallbacks[name] || []).forEach(callback => callback(instance));\r\n            }\r\n        }, { flush: 'post' });\r\n        return () => {\r\n            const route = routeToDisplay.value;\r\n            const matchedRoute = matchedRouteRef.value;\r\n            const ViewComponent = matchedRoute && matchedRoute.components[props.name];\r\n            // we need the value at the time we render because when we unmount, we\r\n            // navigated to a different location so the value is different\r\n            const currentName = props.name;\r\n            if (!ViewComponent) {\r\n                return normalizeSlot(slots.default, { Component: ViewComponent, route });\r\n            }\r\n            // props from route configuration\r\n            const routePropsOption = matchedRoute.props[props.name];\r\n            const routeProps = routePropsOption\r\n                ? routePropsOption === true\r\n                    ? route.params\r\n                    : typeof routePropsOption === 'function'\r\n                        ? routePropsOption(route)\r\n                        : routePropsOption\r\n                : null;\r\n            const onVnodeUnmounted = vnode => {\r\n                // remove the instance reference to prevent leak\r\n                if (vnode.component.isUnmounted) {\r\n                    matchedRoute.instances[currentName] = null;\r\n                }\r\n            };\r\n            const component = h(ViewComponent, assign({}, routeProps, attrs, {\r\n                onVnodeUnmounted,\r\n                ref: viewRef,\r\n            }));\r\n            return (\r\n            // pass the vnode to the slot as a prop.\r\n            // h and <component :is=\"...\"> both accept vnodes\r\n            normalizeSlot(slots.default, { Component: component, route }) ||\r\n                component);\r\n        };\r\n    },\r\n});\r\nfunction normalizeSlot(slot, data) {\r\n    if (!slot)\r\n        return null;\r\n    const slotContent = slot(data);\r\n    return slotContent.length === 1 ? slotContent[0] : slotContent;\r\n}\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\n/**\r\n * Component to display the current route the user is at.\r\n */\r\nconst RouterView = RouterViewImpl;\r\n// warn against deprecated usage with <transition> & <keep-alive>\r\n// due to functional component being no longer eager in Vue 3\r\nfunction warnDeprecatedUsage() {\r\n    const instance = getCurrentInstance();\r\n    const parentName = instance.parent && instance.parent.type.name;\r\n    if (parentName &&\r\n        (parentName === 'KeepAlive' || parentName.includes('Transition'))) {\r\n        const comp = parentName === 'KeepAlive' ? 'keep-alive' : 'transition';\r\n        warn(`<router-view> can no longer be used directly inside <transition> or <keep-alive>.\\n` +\r\n            `Use slot props instead:\\n\\n` +\r\n            `<router-view v-slot=\"{ Component }\">\\n` +\r\n            `  <${comp}>\\n` +\r\n            `    <component :is=\"Component\" />\\n` +\r\n            `  </${comp}>\\n` +\r\n            `</router-view>`);\r\n    }\r\n}\n\nfunction getDevtoolsGlobalHook() {\n    return getTarget().__VUE_DEVTOOLS_GLOBAL_HOOK__;\n}\nfunction getTarget() {\n    // @ts-ignore\n    return typeof navigator !== 'undefined'\n        ? window\n        : typeof global !== 'undefined'\n            ? global\n            : {};\n}\n\nconst HOOK_SETUP = 'devtools-plugin:setup';\n\nfunction setupDevtoolsPlugin(pluginDescriptor, setupFn) {\n    const hook = getDevtoolsGlobalHook();\n    if (hook) {\n        hook.emit(HOOK_SETUP, pluginDescriptor, setupFn);\n    }\n    else {\n        const target = getTarget();\n        const list = target.__VUE_DEVTOOLS_PLUGINS__ = target.__VUE_DEVTOOLS_PLUGINS__ || [];\n        list.push({\n            pluginDescriptor,\n            setupFn\n        });\n    }\n}\n\nfunction formatRouteLocation(routeLocation, tooltip) {\r\n    const copy = assign({}, routeLocation, {\r\n        // remove variables that can contain vue instances\r\n        matched: routeLocation.matched.map(matched => omit(matched, ['instances', 'children', 'aliasOf'])),\r\n    });\r\n    return {\r\n        _custom: {\r\n            type: null,\r\n            readOnly: true,\r\n            display: routeLocation.fullPath,\r\n            tooltip,\r\n            value: copy,\r\n        },\r\n    };\r\n}\r\nfunction formatDisplay(display) {\r\n    return {\r\n        _custom: {\r\n            display,\r\n        },\r\n    };\r\n}\r\n// to support multiple router instances\r\nlet routerId = 0;\r\nfunction addDevtools(app, router, matcher) {\r\n    // Take over router.beforeEach and afterEach\r\n    // increment to support multiple router instances\r\n    const id = routerId++;\r\n    setupDevtoolsPlugin({\r\n        id: 'Router' + id ? ' ' + id : '',\r\n        label: 'Router devtools',\r\n        app,\r\n    }, api => {\r\n        api.on.inspectComponent((payload, ctx) => {\r\n            if (payload.instanceData) {\r\n                payload.instanceData.state.push({\r\n                    type: 'Routing',\r\n                    key: '$route',\r\n                    editable: false,\r\n                    value: formatRouteLocation(router.currentRoute.value, 'Current Route'),\r\n                });\r\n            }\r\n        });\r\n        watch(router.currentRoute, () => {\r\n            // refresh active state\r\n            refreshRoutesView();\r\n            // @ts-ignore\r\n            api.notifyComponentUpdate();\r\n            api.sendInspectorTree(routerInspectorId);\r\n        });\r\n        const navigationsLayerId = 'router:navigations:' + id;\r\n        api.addTimelineLayer({\r\n            id: navigationsLayerId,\r\n            label: `Router${id ? ' ' + id : ''} Navigations`,\r\n            color: 0x40a8c4,\r\n        });\r\n        // const errorsLayerId = 'router:errors'\r\n        // api.addTimelineLayer({\r\n        //   id: errorsLayerId,\r\n        //   label: 'Router Errors',\r\n        //   color: 0xea5455,\r\n        // })\r\n        router.onError(error => {\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    // @ts-ignore\r\n                    logType: 'error',\r\n                    time: Date.now(),\r\n                    data: { error },\r\n                },\r\n            });\r\n        });\r\n        router.beforeEach((to, from) => {\r\n            const data = {\r\n                guard: formatDisplay('beforeEach'),\r\n                from: formatRouteLocation(from, 'Current Location during this navigation'),\r\n                to: formatRouteLocation(to, 'Target location'),\r\n            };\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    time: Date.now(),\r\n                    meta: {},\r\n                    data,\r\n                },\r\n            });\r\n        });\r\n        router.afterEach((to, from, failure) => {\r\n            const data = {\r\n                guard: formatDisplay('afterEach'),\r\n            };\r\n            if (failure) {\r\n                data.failure = {\r\n                    _custom: {\r\n                        type: Error,\r\n                        readOnly: true,\r\n                        display: failure ? failure.message : '',\r\n                        tooltip: 'Navigation Failure',\r\n                        value: failure,\r\n                    },\r\n                };\r\n                data.status = formatDisplay('❌');\r\n            }\r\n            else {\r\n                data.status = formatDisplay('✅');\r\n            }\r\n            // we set here to have the right order\r\n            data.from = formatRouteLocation(from, 'Current Location during this navigation');\r\n            data.to = formatRouteLocation(to, 'Target location');\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    time: Date.now(),\r\n                    data,\r\n                    // @ts-ignore\r\n                    logType: failure ? 'warning' : 'default',\r\n                    meta: {},\r\n                },\r\n            });\r\n        });\r\n        /**\r\n         * Inspector of Existing routes\r\n         */\r\n        const routerInspectorId = 'router-inspector:' + id;\r\n        api.addInspector({\r\n            id: routerInspectorId,\r\n            label: 'Routes' + (id ? ' ' + id : ''),\r\n            icon: 'book',\r\n            treeFilterPlaceholder: 'Search routes',\r\n        });\r\n        function refreshRoutesView() {\r\n            // the routes view isn't active\r\n            if (!activeRoutesPayload)\r\n                return;\r\n            const payload = activeRoutesPayload;\r\n            // children routes will appear as nested\r\n            let routes = matcher.getRoutes().filter(route => !route.parent);\r\n            // reset match state to false\r\n            routes.forEach(resetMatchStateOnRouteRecord);\r\n            // apply a match state if there is a payload\r\n            if (payload.filter) {\r\n                routes = routes.filter(route => \r\n                // save matches state based on the payload\r\n                isRouteMatching(route, payload.filter.toLowerCase()));\r\n            }\r\n            // mark active routes\r\n            routes.forEach(route => markRouteRecordActive(route, router.currentRoute.value));\r\n            payload.rootNodes = routes.map(formatRouteRecordForInspector);\r\n        }\r\n        let activeRoutesPayload;\r\n        api.on.getInspectorTree(payload => {\r\n            activeRoutesPayload = payload;\r\n            if (payload.app === app && payload.inspectorId === routerInspectorId) {\r\n                refreshRoutesView();\r\n            }\r\n        });\r\n        /**\r\n         * Display information about the currently selected route record\r\n         */\r\n        api.on.getInspectorState(payload => {\r\n            if (payload.app === app && payload.inspectorId === routerInspectorId) {\r\n                const routes = matcher.getRoutes();\r\n                const route = routes.find(route => route.record.__vd_id === payload.nodeId);\r\n                if (route) {\r\n                    payload.state = {\r\n                        options: formatRouteRecordMatcherForStateInspector(route),\r\n                    };\r\n                }\r\n            }\r\n        });\r\n        api.sendInspectorTree(routerInspectorId);\r\n        api.sendInspectorState(routerInspectorId);\r\n    });\r\n}\r\nfunction modifierForKey(key) {\r\n    if (key.optional) {\r\n        return key.repeatable ? '*' : '?';\r\n    }\r\n    else {\r\n        return key.repeatable ? '+' : '';\r\n    }\r\n}\r\nfunction formatRouteRecordMatcherForStateInspector(route) {\r\n    const { record } = route;\r\n    const fields = [\r\n        { editable: false, key: 'path', value: record.path },\r\n    ];\r\n    if (record.name != null) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'name',\r\n            value: record.name,\r\n        });\r\n    }\r\n    fields.push({ editable: false, key: 'regexp', value: route.re });\r\n    if (route.keys.length) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'keys',\r\n            value: {\r\n                _custom: {\r\n                    type: null,\r\n                    readOnly: true,\r\n                    display: route.keys\r\n                        .map(key => `${key.name}${modifierForKey(key)}`)\r\n                        .join(' '),\r\n                    tooltip: 'Param keys',\r\n                    value: route.keys,\r\n                },\r\n            },\r\n        });\r\n    }\r\n    if (record.redirect != null) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'redirect',\r\n            value: record.redirect,\r\n        });\r\n    }\r\n    if (route.alias.length) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'aliases',\r\n            value: route.alias.map(alias => alias.record.path),\r\n        });\r\n    }\r\n    fields.push({\r\n        key: 'score',\r\n        editable: false,\r\n        value: {\r\n            _custom: {\r\n                type: null,\r\n                readOnly: true,\r\n                display: route.score.map(score => score.join(', ')).join(' | '),\r\n                tooltip: 'Score used to sort routes',\r\n                value: route.score,\r\n            },\r\n        },\r\n    });\r\n    return fields;\r\n}\r\n/**\r\n * Extracted from tailwind palette\r\n */\r\nconst PINK_500 = 0xec4899;\r\nconst BLUE_600 = 0x2563eb;\r\nconst LIME_500 = 0x84cc16;\r\nconst CYAN_400 = 0x22d3ee;\r\nconst ORANGE_400 = 0xfb923c;\r\n// const GRAY_100 = 0xf4f4f5\r\nconst DARK = 0x666666;\r\nfunction formatRouteRecordForInspector(route) {\r\n    const tags = [];\r\n    const { record } = route;\r\n    if (record.name != null) {\r\n        tags.push({\r\n            label: String(record.name),\r\n            textColor: 0,\r\n            backgroundColor: CYAN_400,\r\n        });\r\n    }\r\n    if (record.aliasOf) {\r\n        tags.push({\r\n            label: 'alias',\r\n            textColor: 0,\r\n            backgroundColor: ORANGE_400,\r\n        });\r\n    }\r\n    if (route.__vd_match) {\r\n        tags.push({\r\n            label: 'matches',\r\n            textColor: 0,\r\n            backgroundColor: PINK_500,\r\n        });\r\n    }\r\n    if (route.__vd_exactActive) {\r\n        tags.push({\r\n            label: 'exact',\r\n            textColor: 0,\r\n            backgroundColor: LIME_500,\r\n        });\r\n    }\r\n    if (route.__vd_active) {\r\n        tags.push({\r\n            label: 'active',\r\n            textColor: 0,\r\n            backgroundColor: BLUE_600,\r\n        });\r\n    }\r\n    if (record.redirect) {\r\n        tags.push({\r\n            label: 'redirect: ' +\r\n                (typeof record.redirect === 'string' ? record.redirect : 'Object'),\r\n            textColor: 0xffffff,\r\n            backgroundColor: DARK,\r\n        });\r\n    }\r\n    // add an id to be able to select it. Using the `path` is not possible because\r\n    // empty path children would collide with their parents\r\n    let id = String(routeRecordId++);\r\n    record.__vd_id = id;\r\n    return {\r\n        id,\r\n        label: record.path,\r\n        tags,\r\n        // @ts-ignore\r\n        children: route.children.map(formatRouteRecordForInspector),\r\n    };\r\n}\r\n//  incremental id for route records and inspector state\r\nlet routeRecordId = 0;\r\nconst EXTRACT_REGEXP_RE = /^\\/(.*)\\/([a-z]*)$/;\r\nfunction markRouteRecordActive(route, currentRoute) {\r\n    // no route will be active if matched is empty\r\n    // reset the matching state\r\n    const isExactActive = currentRoute.matched.length &&\r\n        isSameRouteRecord(currentRoute.matched[currentRoute.matched.length - 1], route.record);\r\n    route.__vd_exactActive = route.__vd_active = isExactActive;\r\n    if (!isExactActive) {\r\n        route.__vd_active = currentRoute.matched.some(match => isSameRouteRecord(match, route.record));\r\n    }\r\n    route.children.forEach(childRoute => markRouteRecordActive(childRoute, currentRoute));\r\n}\r\nfunction resetMatchStateOnRouteRecord(route) {\r\n    route.__vd_match = false;\r\n    route.children.forEach(resetMatchStateOnRouteRecord);\r\n}\r\nfunction isRouteMatching(route, filter) {\r\n    const found = String(route.re).match(EXTRACT_REGEXP_RE);\r\n    route.__vd_match = false;\r\n    if (!found || found.length < 3) {\r\n        return false;\r\n    }\r\n    // use a regexp without $ at the end to match nested routes better\r\n    const nonEndingRE = new RegExp(found[1].replace(/\\$$/, ''), found[2]);\r\n    if (nonEndingRE.test(filter)) {\r\n        // mark children as matches\r\n        route.children.forEach(child => isRouteMatching(child, filter));\r\n        // exception case: `/`\r\n        if (route.record.path !== '/' || filter === '/') {\r\n            route.__vd_match = route.re.test(filter);\r\n            return true;\r\n        }\r\n        // hide the / route\r\n        return false;\r\n    }\r\n    const path = route.record.path.toLowerCase();\r\n    const decodedPath = decode(path);\r\n    // also allow partial matching on the path\r\n    if (!filter.startsWith('/') &&\r\n        (decodedPath.includes(filter) || path.includes(filter)))\r\n        return true;\r\n    if (decodedPath.startsWith(filter) || path.startsWith(filter))\r\n        return true;\r\n    if (route.record.name && String(route.record.name).includes(filter))\r\n        return true;\r\n    return route.children.some(child => isRouteMatching(child, filter));\r\n}\r\nfunction omit(obj, keys) {\r\n    const ret = {};\r\n    for (let key in obj) {\r\n        if (!keys.includes(key)) {\r\n            // @ts-ignore\r\n            ret[key] = obj[key];\r\n        }\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Creates a Router instance that can be used by a Vue app.\r\n *\r\n * @param options - {@link RouterOptions}\r\n */\r\nfunction createRouter(options) {\r\n    const matcher = createRouterMatcher(options.routes, options);\r\n    let parseQuery$1 = options.parseQuery || parseQuery;\r\n    let stringifyQuery$1 = options.stringifyQuery || stringifyQuery;\r\n    let routerHistory = options.history;\r\n    const beforeGuards = useCallbacks();\r\n    const beforeResolveGuards = useCallbacks();\r\n    const afterGuards = useCallbacks();\r\n    const currentRoute = shallowRef(START_LOCATION_NORMALIZED);\r\n    let pendingLocation = START_LOCATION_NORMALIZED;\r\n    // leave the scrollRestoration if no scrollBehavior is provided\r\n    if (isBrowser && options.scrollBehavior && 'scrollRestoration' in history) {\r\n        history.scrollRestoration = 'manual';\r\n    }\r\n    const normalizeParams = applyToParams.bind(null, paramValue => '' + paramValue);\r\n    const encodeParams = applyToParams.bind(null, encodeParam);\r\n    const decodeParams = applyToParams.bind(null, decode);\r\n    function addRoute(parentOrRoute, route) {\r\n        let parent;\r\n        let record;\r\n        if (isRouteName(parentOrRoute)) {\r\n            parent = matcher.getRecordMatcher(parentOrRoute);\r\n            record = route;\r\n        }\r\n        else {\r\n            record = parentOrRoute;\r\n        }\r\n        return matcher.addRoute(record, parent);\r\n    }\r\n    function removeRoute(name) {\r\n        let recordMatcher = matcher.getRecordMatcher(name);\r\n        if (recordMatcher) {\r\n            matcher.removeRoute(recordMatcher);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Cannot remove non-existent route \"${String(name)}\"`);\r\n        }\r\n    }\r\n    function getRoutes() {\r\n        return matcher.getRoutes().map(routeMatcher => routeMatcher.record);\r\n    }\r\n    function hasRoute(name) {\r\n        return !!matcher.getRecordMatcher(name);\r\n    }\r\n    function resolve(rawLocation, currentLocation) {\r\n        // const objectLocation = routerLocationAsObject(rawLocation)\r\n        // we create a copy to modify it later\r\n        currentLocation = assign({}, currentLocation || currentRoute.value);\r\n        if (typeof rawLocation === 'string') {\r\n            let locationNormalized = parseURL(parseQuery$1, rawLocation, currentLocation.path);\r\n            let matchedRoute = matcher.resolve({ path: locationNormalized.path }, currentLocation);\r\n            let href = routerHistory.createHref(locationNormalized.fullPath);\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (href.startsWith('//'))\r\n                    warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\r\n                else if (!matchedRoute.matched.length) {\r\n                    warn(`No match found for location with path \"${rawLocation}\"`);\r\n                }\r\n            }\r\n            // locationNormalized is always a new object\r\n            return assign(locationNormalized, matchedRoute, {\r\n                params: decodeParams(matchedRoute.params),\r\n                hash: decode(locationNormalized.hash),\r\n                redirectedFrom: undefined,\r\n                href,\r\n            });\r\n        }\r\n        let matcherLocation;\r\n        // path could be relative in object as well\r\n        if ('path' in rawLocation) {\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                'params' in rawLocation &&\r\n                !('name' in rawLocation) &&\r\n                Object.keys(rawLocation.params).length) {\r\n                warn(`Path \"${rawLocation.path}\" was passed with params but they will be ignored. Use a named route alongside params instead.`);\r\n            }\r\n            matcherLocation = assign({}, rawLocation, {\r\n                path: parseURL(parseQuery$1, rawLocation.path, currentLocation.path).path,\r\n            });\r\n        }\r\n        else {\r\n            // pass encoded values to the matcher so it can produce encoded path and fullPath\r\n            matcherLocation = assign({}, rawLocation, {\r\n                params: encodeParams(rawLocation.params),\r\n            });\r\n            // current location params are decoded, we need to encode them in case the\r\n            // matcher merges the params\r\n            currentLocation.params = encodeParams(currentLocation.params);\r\n        }\r\n        let matchedRoute = matcher.resolve(matcherLocation, currentLocation);\r\n        const hash = rawLocation.hash || '';\r\n        if ((process.env.NODE_ENV !== 'production') && hash && !hash.startsWith('#')) {\r\n            warn(`A \\`hash\\` should always start with the character \"#\". Replace \"${hash}\" with \"#${hash}\".`);\r\n        }\r\n        // decoding them) the matcher might have merged current location params so\r\n        // we need to run the decoding again\r\n        matchedRoute.params = normalizeParams(decodeParams(matchedRoute.params));\r\n        const fullPath = stringifyURL(stringifyQuery$1, assign({}, rawLocation, {\r\n            hash: encodeHash(hash),\r\n            path: matchedRoute.path,\r\n        }));\r\n        let href = routerHistory.createHref(fullPath);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            if (href.startsWith('//')) {\r\n                warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\r\n            }\r\n            else if (!matchedRoute.matched.length) {\r\n                warn(`No match found for location with path \"${'path' in rawLocation ? rawLocation.path : rawLocation}\"`);\r\n            }\r\n        }\r\n        return assign({\r\n            fullPath,\r\n            // keep the hash encoded so fullPath is effectively path + encodedQuery +\r\n            // hash\r\n            hash,\r\n            query: \r\n            // if the user is using a custom query lib like qs, we might have\r\n            // nested objects, so we keep the query as is, meaning it can contain\r\n            // numbers at `$route.query`, but at the point, the user will have to\r\n            // use their own type anyway.\r\n            // https://github.com/vuejs/vue-router-next/issues/328#issuecomment-649481567\r\n            stringifyQuery$1 === stringifyQuery\r\n                ? normalizeQuery(rawLocation.query)\r\n                : rawLocation.query,\r\n        }, matchedRoute, {\r\n            redirectedFrom: undefined,\r\n            href,\r\n        });\r\n    }\r\n    function locationAsObject(to) {\r\n        return typeof to === 'string'\r\n            ? parseURL(parseQuery$1, to, currentRoute.value.path)\r\n            : assign({}, to);\r\n    }\r\n    function checkCanceledNavigation(to, from) {\r\n        if (pendingLocation !== to) {\r\n            return createRouterError(8 /* NAVIGATION_CANCELLED */, {\r\n                from,\r\n                to,\r\n            });\r\n        }\r\n    }\r\n    function push(to) {\r\n        return pushWithRedirect(to);\r\n    }\r\n    function replace(to) {\r\n        return push(assign(locationAsObject(to), { replace: true }));\r\n    }\r\n    function handleRedirectRecord(to) {\r\n        const lastMatched = to.matched[to.matched.length - 1];\r\n        if (lastMatched && lastMatched.redirect) {\r\n            const { redirect } = lastMatched;\r\n            let newTargetLocation = typeof redirect === 'function' ? redirect(to) : redirect;\r\n            if (typeof newTargetLocation === 'string') {\r\n                newTargetLocation =\r\n                    newTargetLocation.indexOf('?') > -1 ||\r\n                        newTargetLocation.indexOf('#') > -1\r\n                        ? (newTargetLocation = locationAsObject(newTargetLocation))\r\n                        : { path: newTargetLocation };\r\n            }\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                !('path' in newTargetLocation) &&\r\n                !('name' in newTargetLocation)) {\r\n                warn(`Invalid redirect found:\\n${JSON.stringify(newTargetLocation, null, 2)}\\n when navigating to \"${to.fullPath}\". A redirect must contain a name or path. This will break in production.`);\r\n                throw new Error('Invalid redirect');\r\n            }\r\n            return assign({\r\n                query: to.query,\r\n                hash: to.hash,\r\n                params: to.params,\r\n            }, newTargetLocation);\r\n        }\r\n    }\r\n    function pushWithRedirect(to, redirectedFrom) {\r\n        const targetLocation = (pendingLocation = resolve(to));\r\n        const from = currentRoute.value;\r\n        const data = to.state;\r\n        const force = to.force;\r\n        // to could be a string where `replace` is a function\r\n        const replace = to.replace === true;\r\n        const shouldRedirect = handleRedirectRecord(targetLocation);\r\n        if (shouldRedirect)\r\n            return pushWithRedirect(assign(locationAsObject(shouldRedirect), {\r\n                state: data,\r\n                force,\r\n                replace,\r\n            }), \r\n            // keep original redirectedFrom if it exists\r\n            redirectedFrom || targetLocation);\r\n        // if it was a redirect we already called `pushWithRedirect` above\r\n        const toLocation = targetLocation;\r\n        toLocation.redirectedFrom = redirectedFrom;\r\n        let failure;\r\n        if (!force && isSameRouteLocation(stringifyQuery$1, from, targetLocation)) {\r\n            failure = createRouterError(16 /* NAVIGATION_DUPLICATED */, { to: toLocation, from });\r\n            // trigger scroll to allow scrolling to the same anchor\r\n            handleScroll(from, from, \r\n            // this is a push, the only way for it to be triggered from a\r\n            // history.listen is with a redirect, which makes it become a push\r\n            true, \r\n            // This cannot be the first navigation because the initial location\r\n            // cannot be manually navigated to\r\n            false);\r\n        }\r\n        return (failure ? Promise.resolve(failure) : navigate(toLocation, from))\r\n            .catch((error) => isNavigationFailure(error)\r\n            ? error\r\n            : // reject any unknown error\r\n                triggerError(error))\r\n            .then((failure) => {\r\n            if (failure) {\r\n                if (isNavigationFailure(failure, 2 /* NAVIGATION_GUARD_REDIRECT */)) {\r\n                    if ((process.env.NODE_ENV !== 'production') &&\r\n                        // we are redirecting to the same location we were already at\r\n                        isSameRouteLocation(stringifyQuery$1, resolve(failure.to), toLocation) &&\r\n                        // and we have done it a couple of times\r\n                        redirectedFrom &&\r\n                        // @ts-ignore\r\n                        (redirectedFrom._count = redirectedFrom._count\r\n                            ? // @ts-ignore\r\n                                redirectedFrom._count + 1\r\n                            : 1) > 10) {\r\n                        warn(`Detected an infinite redirection in a navigation guard when going from \"${from.fullPath}\" to \"${toLocation.fullPath}\". Aborting to avoid a Stack Overflow. This will break in production if not fixed.`);\r\n                        return Promise.reject(new Error('Infinite redirect in navigation guard'));\r\n                    }\r\n                    return pushWithRedirect(\r\n                    // keep options\r\n                    assign(locationAsObject(failure.to), {\r\n                        state: data,\r\n                        force,\r\n                        replace,\r\n                    }), \r\n                    // preserve the original redirectedFrom if any\r\n                    redirectedFrom || toLocation);\r\n                }\r\n            }\r\n            else {\r\n                // if we fail we don't finalize the navigation\r\n                failure = finalizeNavigation(toLocation, from, true, replace, data);\r\n            }\r\n            triggerAfterEach(toLocation, from, failure);\r\n            return failure;\r\n        });\r\n    }\r\n    /**\r\n     * Helper to reject and skip all navigation guards if a new navigation happened\r\n     * @param to\r\n     * @param from\r\n     */\r\n    function checkCanceledNavigationAndReject(to, from) {\r\n        const error = checkCanceledNavigation(to, from);\r\n        return error ? Promise.reject(error) : Promise.resolve();\r\n    }\r\n    // TODO: refactor the whole before guards by internally using router.beforeEach\r\n    function navigate(to, from) {\r\n        let guards;\r\n        const [leavingRecords, updatingRecords, enteringRecords,] = extractChangingRecords(to, from);\r\n        // all components here have been resolved once because we are leaving\r\n        guards = extractComponentsGuards(leavingRecords.reverse(), 'beforeRouteLeave', to, from);\r\n        // leavingRecords is already reversed\r\n        for (const record of leavingRecords) {\r\n            record.leaveGuards.forEach(guard => {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            });\r\n        }\r\n        const canceledNavigationCheck = checkCanceledNavigationAndReject.bind(null, to, from);\r\n        guards.push(canceledNavigationCheck);\r\n        // run the queue of per route beforeRouteLeave guards\r\n        return (runGuardQueue(guards)\r\n            .then(() => {\r\n            // check global guards beforeEach\r\n            guards = [];\r\n            for (const guard of beforeGuards.list()) {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check in components beforeRouteUpdate\r\n            guards = extractComponentsGuards(updatingRecords, 'beforeRouteUpdate', to, from);\r\n            for (const record of updatingRecords) {\r\n                record.updateGuards.forEach(guard => {\r\n                    guards.push(guardToPromiseFn(guard, to, from));\r\n                });\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check the route beforeEnter\r\n            guards = [];\r\n            for (const record of to.matched) {\r\n                // do not trigger beforeEnter on reused views\r\n                if (record.beforeEnter && from.matched.indexOf(record) < 0) {\r\n                    if (Array.isArray(record.beforeEnter)) {\r\n                        for (const beforeEnter of record.beforeEnter)\r\n                            guards.push(guardToPromiseFn(beforeEnter, to, from));\r\n                    }\r\n                    else {\r\n                        guards.push(guardToPromiseFn(record.beforeEnter, to, from));\r\n                    }\r\n                }\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // NOTE: at this point to.matched is normalized and does not contain any () => Promise<Component>\r\n            // clear existing enterCallbacks, these are added by extractComponentsGuards\r\n            to.matched.forEach(record => (record.enterCallbacks = {}));\r\n            // check in-component beforeRouteEnter\r\n            guards = extractComponentsGuards(enteringRecords, 'beforeRouteEnter', to, from);\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check global guards beforeResolve\r\n            guards = [];\r\n            for (const guard of beforeResolveGuards.list()) {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            return runGuardQueue(guards);\r\n        })\r\n            // catch any navigation canceled\r\n            .catch(err => isNavigationFailure(err, 8 /* NAVIGATION_CANCELLED */)\r\n            ? err\r\n            : Promise.reject(err)));\r\n    }\r\n    function triggerAfterEach(to, from, failure) {\r\n        // navigation is confirmed, call afterGuards\r\n        // TODO: wrap with error handlers\r\n        for (const guard of afterGuards.list())\r\n            guard(to, from, failure);\r\n    }\r\n    /**\r\n     * - Cleans up any navigation guards\r\n     * - Changes the url if necessary\r\n     * - Calls the scrollBehavior\r\n     */\r\n    function finalizeNavigation(toLocation, from, isPush, replace, data) {\r\n        // a more recent navigation took place\r\n        const error = checkCanceledNavigation(toLocation, from);\r\n        if (error)\r\n            return error;\r\n        // only consider as push if it's not the first navigation\r\n        const isFirstNavigation = from === START_LOCATION_NORMALIZED;\r\n        const state = !isBrowser ? {} : history.state;\r\n        // change URL only if the user did a push/replace and if it's not the initial navigation because\r\n        // it's just reflecting the url\r\n        if (isPush) {\r\n            // on the initial navigation, we want to reuse the scroll position from\r\n            // history state if it exists\r\n            if (replace || isFirstNavigation)\r\n                routerHistory.replace(toLocation.fullPath, assign({\r\n                    scroll: isFirstNavigation && state && state.scroll,\r\n                }, data));\r\n            else\r\n                routerHistory.push(toLocation.fullPath, data);\r\n        }\r\n        // accept current navigation\r\n        currentRoute.value = toLocation;\r\n        handleScroll(toLocation, from, isPush, isFirstNavigation);\r\n        markAsReady();\r\n    }\r\n    let removeHistoryListener;\r\n    // attach listener to history to trigger navigations\r\n    function setupListeners() {\r\n        removeHistoryListener = routerHistory.listen((to, _from, info) => {\r\n            // cannot be a redirect route because it was in history\r\n            let toLocation = resolve(to);\r\n            // due to dynamic routing, and to hash history with manual navigation\r\n            // (manually changing the url or calling history.hash = '#/somewhere'),\r\n            // there could be a redirect record in history\r\n            const shouldRedirect = handleRedirectRecord(toLocation);\r\n            if (shouldRedirect) {\r\n                pushWithRedirect(assign(shouldRedirect, { replace: true }), toLocation).catch(noop);\r\n                return;\r\n            }\r\n            pendingLocation = toLocation;\r\n            const from = currentRoute.value;\r\n            // TODO: should be moved to web history?\r\n            if (isBrowser) {\r\n                saveScrollPosition(getScrollKey(from.fullPath, info.delta), computeScrollPosition());\r\n            }\r\n            navigate(toLocation, from)\r\n                .catch((error) => {\r\n                if (isNavigationFailure(error, 4 /* NAVIGATION_ABORTED */ | 8 /* NAVIGATION_CANCELLED */)) {\r\n                    return error;\r\n                }\r\n                if (isNavigationFailure(error, 2 /* NAVIGATION_GUARD_REDIRECT */)) {\r\n                    // Here we could call if (info.delta) routerHistory.go(-info.delta,\r\n                    // false) but this is bug prone as we have no way to wait the\r\n                    // navigation to be finished before calling pushWithRedirect. Using\r\n                    // a setTimeout of 16ms seems to work but there is not guarantee for\r\n                    // it to work on every browser. So Instead we do not restore the\r\n                    // history entry and trigger a new navigation as requested by the\r\n                    // navigation guard.\r\n                    // the error is already handled by router.push we just want to avoid\r\n                    // logging the error\r\n                    pushWithRedirect(error.to, toLocation\r\n                    // avoid an uncaught rejection, let push call triggerError\r\n                    ).catch(noop);\r\n                    // avoid the then branch\r\n                    return Promise.reject();\r\n                }\r\n                // do not restore history on unknown direction\r\n                if (info.delta)\r\n                    routerHistory.go(-info.delta, false);\r\n                // unrecognized error, transfer to the global handler\r\n                return triggerError(error);\r\n            })\r\n                .then((failure) => {\r\n                failure =\r\n                    failure ||\r\n                        finalizeNavigation(\r\n                        // after navigation, all matched components are resolved\r\n                        toLocation, from, false);\r\n                // revert the navigation\r\n                if (failure && info.delta)\r\n                    routerHistory.go(-info.delta, false);\r\n                triggerAfterEach(toLocation, from, failure);\r\n            })\r\n                .catch(noop);\r\n        });\r\n    }\r\n    // Initialization and Errors\r\n    let readyHandlers = useCallbacks();\r\n    let errorHandlers = useCallbacks();\r\n    let ready;\r\n    /**\r\n     * Trigger errorHandlers added via onError and throws the error as well\r\n     * @param error - error to throw\r\n     * @returns the error as a rejected promise\r\n     */\r\n    function triggerError(error) {\r\n        markAsReady(error);\r\n        errorHandlers.list().forEach(handler => handler(error));\r\n        return Promise.reject(error);\r\n    }\r\n    function isReady() {\r\n        if (ready && currentRoute.value !== START_LOCATION_NORMALIZED)\r\n            return Promise.resolve();\r\n        return new Promise((resolve, reject) => {\r\n            readyHandlers.add([resolve, reject]);\r\n        });\r\n    }\r\n    /**\r\n     * Mark the router as ready, resolving the promised returned by isReady(). Can\r\n     * only be called once, otherwise does nothing.\r\n     * @param err - optional error\r\n     */\r\n    function markAsReady(err) {\r\n        if (ready)\r\n            return;\r\n        ready = true;\r\n        setupListeners();\r\n        readyHandlers\r\n            .list()\r\n            .forEach(([resolve, reject]) => (err ? reject(err) : resolve()));\r\n        readyHandlers.reset();\r\n    }\r\n    // Scroll behavior\r\n    function handleScroll(to, from, isPush, isFirstNavigation) {\r\n        const { scrollBehavior } = options;\r\n        if (!isBrowser || !scrollBehavior)\r\n            return Promise.resolve();\r\n        let scrollPosition = (!isPush && getSavedScrollPosition(getScrollKey(to.fullPath, 0))) ||\r\n            ((isFirstNavigation || !isPush) &&\r\n                history.state &&\r\n                history.state.scroll) ||\r\n            null;\r\n        return nextTick()\r\n            .then(() => scrollBehavior(to, from, scrollPosition))\r\n            .then(position => position && scrollToPosition(position))\r\n            .catch(triggerError);\r\n    }\r\n    const go = (delta) => routerHistory.go(delta);\r\n    let started;\r\n    const installedApps = new Set();\r\n    const router = {\r\n        currentRoute,\r\n        addRoute,\r\n        removeRoute,\r\n        hasRoute,\r\n        getRoutes,\r\n        resolve,\r\n        options,\r\n        push,\r\n        replace,\r\n        go,\r\n        back: () => go(-1),\r\n        forward: () => go(1),\r\n        beforeEach: beforeGuards.add,\r\n        beforeResolve: beforeResolveGuards.add,\r\n        afterEach: afterGuards.add,\r\n        onError: errorHandlers.add,\r\n        isReady,\r\n        install(app) {\r\n            const router = this;\r\n            app.component('RouterLink', RouterLink);\r\n            app.component('RouterView', RouterView);\r\n            app.config.globalProperties.$router = router;\r\n            Object.defineProperty(app.config.globalProperties, '$route', {\r\n                get: () => unref(currentRoute),\r\n            });\r\n            // this initial navigation is only necessary on client, on server it doesn't\r\n            // make sense because it will create an extra unnecessary navigation and could\r\n            // lead to problems\r\n            if (isBrowser &&\r\n                // used for the initial navigation client side to avoid pushing\r\n                // multiple times when the router is used in multiple apps\r\n                !started &&\r\n                currentRoute.value === START_LOCATION_NORMALIZED) {\r\n                // see above\r\n                started = true;\r\n                push(routerHistory.location).catch(err => {\r\n                    if ((process.env.NODE_ENV !== 'production'))\r\n                        warn('Unexpected error when starting the router:', err);\r\n                });\r\n            }\r\n            const reactiveRoute = {};\r\n            for (let key in START_LOCATION_NORMALIZED) {\r\n                // @ts-ignore: the key matches\r\n                reactiveRoute[key] = computed(() => currentRoute.value[key]);\r\n            }\r\n            app.provide(routerKey, router);\r\n            app.provide(routeLocationKey, reactive(reactiveRoute));\r\n            app.provide(routerViewLocationKey, currentRoute);\r\n            let unmountApp = app.unmount;\r\n            installedApps.add(app);\r\n            app.unmount = function () {\r\n                installedApps.delete(app);\r\n                if (installedApps.size < 1) {\r\n                    removeHistoryListener();\r\n                    currentRoute.value = START_LOCATION_NORMALIZED;\r\n                    started = false;\r\n                    ready = false;\r\n                }\r\n                unmountApp.call(this, arguments);\r\n            };\r\n            if (((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) && true) {\r\n                addDevtools(app, router, matcher);\r\n            }\r\n        },\r\n    };\r\n    return router;\r\n}\r\nfunction runGuardQueue(guards) {\r\n    return guards.reduce((promise, guard) => promise.then(() => guard()), Promise.resolve());\r\n}\r\nfunction extractChangingRecords(to, from) {\r\n    const leavingRecords = [];\r\n    const updatingRecords = [];\r\n    const enteringRecords = [];\r\n    const len = Math.max(from.matched.length, to.matched.length);\r\n    for (let i = 0; i < len; i++) {\r\n        const recordFrom = from.matched[i];\r\n        if (recordFrom) {\r\n            if (to.matched.indexOf(recordFrom) < 0)\r\n                leavingRecords.push(recordFrom);\r\n            else\r\n                updatingRecords.push(recordFrom);\r\n        }\r\n        const recordTo = to.matched[i];\r\n        if (recordTo) {\r\n            // the type doesn't matter because we are comparing per reference\r\n            if (from.matched.indexOf(recordTo) < 0)\r\n                enteringRecords.push(recordTo);\r\n        }\r\n    }\r\n    return [leavingRecords, updatingRecords, enteringRecords];\r\n}\n\n/**\r\n * Returns the router instance. Equivalent to using `$router` inside\r\n * templates.\r\n */\r\nfunction useRouter() {\r\n    return inject(routerKey);\r\n}\r\n/**\r\n * Returns the current route location. Equivalent to using `$route` inside\r\n * templates.\r\n */\r\nfunction useRoute() {\r\n    return inject(routeLocationKey);\r\n}\n\nexport { NavigationFailureType, RouterLink, RouterView, START_LOCATION_NORMALIZED as START_LOCATION, createMemoryHistory, createRouter, createRouterMatcher, createWebHashHistory, createWebHistory, isNavigationFailure, matchedRouteKey, onBeforeRouteLeave, onBeforeRouteUpdate, parseQuery, routeLocationKey, routerKey, routerViewLocationKey, stringifyQuery, useLink, useRoute, useRouter, viewDepthKey };\n","import { EMPTY_OBJ, isArray, isMap, isIntegerKey, isSymbol, extend, hasOwn, isObject, hasChanged, capitalize, toRawType, def, isFunction, NOOP } from '@vue/shared';\n\nconst targetMap = new WeakMap();\r\nconst effectStack = [];\r\nlet activeEffect;\r\nconst ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'iterate' : '');\r\nconst MAP_KEY_ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'Map key iterate' : '');\r\nfunction isEffect(fn) {\r\n    return fn && fn._isEffect === true;\r\n}\r\nfunction effect(fn, options = EMPTY_OBJ) {\r\n    if (isEffect(fn)) {\r\n        fn = fn.raw;\r\n    }\r\n    const effect = createReactiveEffect(fn, options);\r\n    if (!options.lazy) {\r\n        effect();\r\n    }\r\n    return effect;\r\n}\r\nfunction stop(effect) {\r\n    if (effect.active) {\r\n        cleanup(effect);\r\n        if (effect.options.onStop) {\r\n            effect.options.onStop();\r\n        }\r\n        effect.active = false;\r\n    }\r\n}\r\nlet uid = 0;\r\nfunction createReactiveEffect(fn, options) {\r\n    const effect = function reactiveEffect() {\r\n        if (!effect.active) {\r\n            return options.scheduler ? undefined : fn();\r\n        }\r\n        if (!effectStack.includes(effect)) {\r\n            cleanup(effect);\r\n            try {\r\n                enableTracking();\r\n                effectStack.push(effect);\r\n                activeEffect = effect;\r\n                return fn();\r\n            }\r\n            finally {\r\n                effectStack.pop();\r\n                resetTracking();\r\n                activeEffect = effectStack[effectStack.length - 1];\r\n            }\r\n        }\r\n    };\r\n    effect.id = uid++;\r\n    effect.allowRecurse = !!options.allowRecurse;\r\n    effect._isEffect = true;\r\n    effect.active = true;\r\n    effect.raw = fn;\r\n    effect.deps = [];\r\n    effect.options = options;\r\n    return effect;\r\n}\r\nfunction cleanup(effect) {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].delete(effect);\r\n        }\r\n        deps.length = 0;\r\n    }\r\n}\r\nlet shouldTrack = true;\r\nconst trackStack = [];\r\nfunction pauseTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = false;\r\n}\r\nfunction enableTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = true;\r\n}\r\nfunction resetTracking() {\r\n    const last = trackStack.pop();\r\n    shouldTrack = last === undefined ? true : last;\r\n}\r\nfunction track(target, type, key) {\r\n    if (!shouldTrack || activeEffect === undefined) {\r\n        return;\r\n    }\r\n    let depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        targetMap.set(target, (depsMap = new Map()));\r\n    }\r\n    let dep = depsMap.get(key);\r\n    if (!dep) {\r\n        depsMap.set(key, (dep = new Set()));\r\n    }\r\n    if (!dep.has(activeEffect)) {\r\n        dep.add(activeEffect);\r\n        activeEffect.deps.push(dep);\r\n        if ((process.env.NODE_ENV !== 'production') && activeEffect.options.onTrack) {\r\n            activeEffect.options.onTrack({\r\n                effect: activeEffect,\r\n                target,\r\n                type,\r\n                key\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\r\n    const depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        // never been tracked\r\n        return;\r\n    }\r\n    const effects = new Set();\r\n    const add = (effectsToAdd) => {\r\n        if (effectsToAdd) {\r\n            effectsToAdd.forEach(effect => {\r\n                if (effect !== activeEffect || effect.allowRecurse) {\r\n                    effects.add(effect);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    if (type === \"clear\" /* CLEAR */) {\r\n        // collection being cleared\r\n        // trigger all effects for target\r\n        depsMap.forEach(add);\r\n    }\r\n    else if (key === 'length' && isArray(target)) {\r\n        depsMap.forEach((dep, key) => {\r\n            if (key === 'length' || key >= newValue) {\r\n                add(dep);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        // schedule runs for SET | ADD | DELETE\r\n        if (key !== void 0) {\r\n            add(depsMap.get(key));\r\n        }\r\n        // also run for iteration key on ADD | DELETE | Map.SET\r\n        switch (type) {\r\n            case \"add\" /* ADD */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                else if (isIntegerKey(key)) {\r\n                    // new index added to array -> length changes\r\n                    add(depsMap.get('length'));\r\n                }\r\n                break;\r\n            case \"delete\" /* DELETE */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                break;\r\n            case \"set\" /* SET */:\r\n                if (isMap(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    const run = (effect) => {\r\n        if ((process.env.NODE_ENV !== 'production') && effect.options.onTrigger) {\r\n            effect.options.onTrigger({\r\n                effect,\r\n                target,\r\n                key,\r\n                type,\r\n                newValue,\r\n                oldValue,\r\n                oldTarget\r\n            });\r\n        }\r\n        if (effect.options.scheduler) {\r\n            effect.options.scheduler(effect);\r\n        }\r\n        else {\r\n            effect();\r\n        }\r\n    };\r\n    effects.forEach(run);\r\n}\n\nconst builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol)\r\n    .map(key => Symbol[key])\r\n    .filter(isSymbol));\r\nconst get = /*#__PURE__*/ createGetter();\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true);\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\r\nconst arrayInstrumentations = {};\r\n['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        const arr = toRaw(this);\r\n        for (let i = 0, l = this.length; i < l; i++) {\r\n            track(arr, \"get\" /* GET */, i + '');\r\n        }\r\n        // we run the method using the original args first (which may be reactive)\r\n        const res = method.apply(arr, args);\r\n        if (res === -1 || res === false) {\r\n            // if that didn't work, run it again using raw values.\r\n            return method.apply(arr, args.map(toRaw));\r\n        }\r\n        else {\r\n            return res;\r\n        }\r\n    };\r\n});\r\n['push', 'pop', 'shift', 'unshift', 'splice'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        pauseTracking();\r\n        const res = method.apply(this, args);\r\n        resetTracking();\r\n        return res;\r\n    };\r\n});\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get(target, key, receiver) {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */ &&\r\n            receiver === (isReadonly ? readonlyMap : reactiveMap).get(target)) {\r\n            return target;\r\n        }\r\n        const targetIsArray = isArray(target);\r\n        if (!isReadonly && targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n            return Reflect.get(arrayInstrumentations, key, receiver);\r\n        }\r\n        const res = Reflect.get(target, key, receiver);\r\n        if (isSymbol(key)\r\n            ? builtInSymbols.has(key)\r\n            : key === `__proto__` || key === `__v_isRef`) {\r\n            return res;\r\n        }\r\n        if (!isReadonly) {\r\n            track(target, \"get\" /* GET */, key);\r\n        }\r\n        if (shallow) {\r\n            return res;\r\n        }\r\n        if (isRef(res)) {\r\n            // ref unwrapping - does not apply for Array + integer key.\r\n            const shouldUnwrap = !targetIsArray || !isIntegerKey(key);\r\n            return shouldUnwrap ? res.value : res;\r\n        }\r\n        if (isObject(res)) {\r\n            // Convert returned value into a proxy as well. we do the isObject check\r\n            // here to avoid invalid value warning. Also need to lazy access readonly\r\n            // and reactive here to avoid circular dependency.\r\n            return isReadonly ? readonly(res) : reactive(res);\r\n        }\r\n        return res;\r\n    };\r\n}\r\nconst set = /*#__PURE__*/ createSetter();\r\nconst shallowSet = /*#__PURE__*/ createSetter(true);\r\nfunction createSetter(shallow = false) {\r\n    return function set(target, key, value, receiver) {\r\n        const oldValue = target[key];\r\n        if (!shallow) {\r\n            value = toRaw(value);\r\n            if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n                oldValue.value = value;\r\n                return true;\r\n            }\r\n        }\r\n        const hadKey = isArray(target) && isIntegerKey(key)\r\n            ? Number(key) < target.length\r\n            : hasOwn(target, key);\r\n        const result = Reflect.set(target, key, value, receiver);\r\n        // don't trigger if target is something up in the prototype chain of original\r\n        if (target === toRaw(receiver)) {\r\n            if (!hadKey) {\r\n                trigger(target, \"add\" /* ADD */, key, value);\r\n            }\r\n            else if (hasChanged(value, oldValue)) {\r\n                trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction deleteProperty(target, key) {\r\n    const hadKey = hasOwn(target, key);\r\n    const oldValue = target[key];\r\n    const result = Reflect.deleteProperty(target, key);\r\n    if (result && hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction has(target, key) {\r\n    const result = Reflect.has(target, key);\r\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\r\n        track(target, \"has\" /* HAS */, key);\r\n    }\r\n    return result;\r\n}\r\nfunction ownKeys(target) {\r\n    track(target, \"iterate\" /* ITERATE */, isArray(target) ? 'length' : ITERATE_KEY);\r\n    return Reflect.ownKeys(target);\r\n}\r\nconst mutableHandlers = {\r\n    get,\r\n    set,\r\n    deleteProperty,\r\n    has,\r\n    ownKeys\r\n};\r\nconst readonlyHandlers = {\r\n    get: readonlyGet,\r\n    set(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    },\r\n    deleteProperty(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    }\r\n};\r\nconst shallowReactiveHandlers = extend({}, mutableHandlers, {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n});\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nconst shallowReadonlyHandlers = extend({}, readonlyHandlers, {\r\n    get: shallowReadonlyGet\r\n});\n\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\r\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\r\nconst toShallow = (value) => value;\r\nconst getProto = (v) => Reflect.getPrototypeOf(v);\r\nfunction get$1(target, key, isReadonly = false, isShallow = false) {\r\n    // #1772: readonly(reactive(Map)) should return readonly + reactive version\r\n    // of the value\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"get\" /* GET */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"get\" /* GET */, rawKey);\r\n    const { has } = getProto(rawTarget);\r\n    const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n    if (has.call(rawTarget, key)) {\r\n        return wrap(target.get(key));\r\n    }\r\n    else if (has.call(rawTarget, rawKey)) {\r\n        return wrap(target.get(rawKey));\r\n    }\r\n}\r\nfunction has$1(key, isReadonly = false) {\r\n    const target = this[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"has\" /* HAS */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"has\" /* HAS */, rawKey);\r\n    return key === rawKey\r\n        ? target.has(key)\r\n        : target.has(key) || target.has(rawKey);\r\n}\r\nfunction size(target, isReadonly = false) {\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    !isReadonly && track(toRaw(target), \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.get(target, 'size', target);\r\n}\r\nfunction add(value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const proto = getProto(target);\r\n    const hadKey = proto.has.call(target, value);\r\n    target.add(value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, value, value);\r\n    }\r\n    return this;\r\n}\r\nfunction set$1(key, value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get.call(target, key);\r\n    target.set(key, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, key, value);\r\n    }\r\n    else if (hasChanged(value, oldValue)) {\r\n        trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n    }\r\n    return this;\r\n}\r\nfunction deleteEntry(key) {\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get ? get.call(target, key) : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.delete(key);\r\n    if (hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction clear() {\r\n    const target = toRaw(this);\r\n    const hadItems = target.size !== 0;\r\n    const oldTarget = (process.env.NODE_ENV !== 'production')\r\n        ? isMap(target)\r\n            ? new Map(target)\r\n            : new Set(target)\r\n        : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.clear();\r\n    if (hadItems) {\r\n        trigger(target, \"clear\" /* CLEAR */, undefined, undefined, oldTarget);\r\n    }\r\n    return result;\r\n}\r\nfunction createForEach(isReadonly, isShallow) {\r\n    return function forEach(callback, thisArg) {\r\n        const observed = this;\r\n        const target = observed[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n        !isReadonly && track(rawTarget, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n        return target.forEach((value, key) => {\r\n            // important: make sure the callback is\r\n            // 1. invoked with the reactive map as `this` and 3rd arg\r\n            // 2. the value received should be a corresponding reactive/readonly.\r\n            return callback.call(thisArg, wrap(value), wrap(key), observed);\r\n        });\r\n    };\r\n}\r\nfunction createIterableMethod(method, isReadonly, isShallow) {\r\n    return function (...args) {\r\n        const target = this[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const targetIsMap = isMap(rawTarget);\r\n        const isPair = method === 'entries' || (method === Symbol.iterator && targetIsMap);\r\n        const isKeyOnly = method === 'keys' && targetIsMap;\r\n        const innerIterator = target[method](...args);\r\n        const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n        !isReadonly &&\r\n            track(rawTarget, \"iterate\" /* ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\r\n        // return a wrapped iterator which returns observed versions of the\r\n        // values emitted from the real iterator\r\n        return {\r\n            // iterator protocol\r\n            next() {\r\n                const { value, done } = innerIterator.next();\r\n                return done\r\n                    ? { value, done }\r\n                    : {\r\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n                        done\r\n                    };\r\n            },\r\n            // iterable protocol\r\n            [Symbol.iterator]() {\r\n                return this;\r\n            }\r\n        };\r\n    };\r\n}\r\nfunction createReadonlyMethod(type) {\r\n    return function (...args) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const key = args[0] ? `on key \"${args[0]}\" ` : ``;\r\n            console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\r\n        }\r\n        return type === \"delete\" /* DELETE */ ? false : this;\r\n    };\r\n}\r\nconst mutableInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, false)\r\n};\r\nconst shallowInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, false, true);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, true)\r\n};\r\nconst readonlyInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, true);\r\n    },\r\n    get size() {\r\n        return size(this, true);\r\n    },\r\n    has(key) {\r\n        return has$1.call(this, key, true);\r\n    },\r\n    add: createReadonlyMethod(\"add\" /* ADD */),\r\n    set: createReadonlyMethod(\"set\" /* SET */),\r\n    delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n    clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n    forEach: createForEach(true, false)\r\n};\r\nconst iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\r\niteratorMethods.forEach(method => {\r\n    mutableInstrumentations[method] = createIterableMethod(method, false, false);\r\n    readonlyInstrumentations[method] = createIterableMethod(method, true, false);\r\n    shallowInstrumentations[method] = createIterableMethod(method, false, true);\r\n});\r\nfunction createInstrumentationGetter(isReadonly, shallow) {\r\n    const instrumentations = shallow\r\n        ? shallowInstrumentations\r\n        : isReadonly\r\n            ? readonlyInstrumentations\r\n            : mutableInstrumentations;\r\n    return (target, key, receiver) => {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */) {\r\n            return target;\r\n        }\r\n        return Reflect.get(hasOwn(instrumentations, key) && key in target\r\n            ? instrumentations\r\n            : target, key, receiver);\r\n    };\r\n}\r\nconst mutableCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, false)\r\n};\r\nconst shallowCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, true)\r\n};\r\nconst readonlyCollectionHandlers = {\r\n    get: createInstrumentationGetter(true, false)\r\n};\r\nfunction checkIdentityKeys(target, has, key) {\r\n    const rawKey = toRaw(key);\r\n    if (rawKey !== key && has.call(target, rawKey)) {\r\n        const type = toRawType(target);\r\n        console.warn(`Reactive ${type} contains both the raw and reactive ` +\r\n            `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\r\n            `which can lead to inconsistencies. ` +\r\n            `Avoid differentiating between the raw and reactive versions ` +\r\n            `of an object and only use the reactive version if possible.`);\r\n    }\r\n}\n\nconst reactiveMap = new WeakMap();\r\nconst readonlyMap = new WeakMap();\r\nfunction targetTypeMap(rawType) {\r\n    switch (rawType) {\r\n        case 'Object':\r\n        case 'Array':\r\n            return 1 /* COMMON */;\r\n        case 'Map':\r\n        case 'Set':\r\n        case 'WeakMap':\r\n        case 'WeakSet':\r\n            return 2 /* COLLECTION */;\r\n        default:\r\n            return 0 /* INVALID */;\r\n    }\r\n}\r\nfunction getTargetType(value) {\r\n    return value[\"__v_skip\" /* SKIP */] || !Object.isExtensible(value)\r\n        ? 0 /* INVALID */\r\n        : targetTypeMap(toRawType(value));\r\n}\r\nfunction reactive(target) {\r\n    // if trying to observe a readonly proxy, return the readonly version.\r\n    if (target && target[\"__v_isReadonly\" /* IS_READONLY */]) {\r\n        return target;\r\n    }\r\n    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers);\r\n}\r\n/**\r\n * Return a shallowly-reactive copy of the original object, where only the root\r\n * level properties are reactive. It also does not auto-unwrap refs (even at the\r\n * root level).\r\n */\r\nfunction shallowReactive(target) {\r\n    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers);\r\n}\r\n/**\r\n * Creates a readonly copy of the original object. Note the returned copy is not\r\n * made reactive, but `readonly` can be called on an already reactive object.\r\n */\r\nfunction readonly(target) {\r\n    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers);\r\n}\r\n/**\r\n * Returns a reactive-copy of the original object, where only the root level\r\n * properties are readonly, and does NOT unwrap refs nor recursively convert\r\n * returned properties.\r\n * This is used for creating the props proxy object for stateful components.\r\n */\r\nfunction shallowReadonly(target) {\r\n    return createReactiveObject(target, true, shallowReadonlyHandlers, readonlyCollectionHandlers);\r\n}\r\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers) {\r\n    if (!isObject(target)) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`value cannot be made reactive: ${String(target)}`);\r\n        }\r\n        return target;\r\n    }\r\n    // target is already a Proxy, return it.\r\n    // exception: calling readonly() on a reactive object\r\n    if (target[\"__v_raw\" /* RAW */] &&\r\n        !(isReadonly && target[\"__v_isReactive\" /* IS_REACTIVE */])) {\r\n        return target;\r\n    }\r\n    // target already has corresponding Proxy\r\n    const proxyMap = isReadonly ? readonlyMap : reactiveMap;\r\n    const existingProxy = proxyMap.get(target);\r\n    if (existingProxy) {\r\n        return existingProxy;\r\n    }\r\n    // only a whitelist of value types can be observed.\r\n    const targetType = getTargetType(target);\r\n    if (targetType === 0 /* INVALID */) {\r\n        return target;\r\n    }\r\n    const proxy = new Proxy(target, targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers);\r\n    proxyMap.set(target, proxy);\r\n    return proxy;\r\n}\r\nfunction isReactive(value) {\r\n    if (isReadonly(value)) {\r\n        return isReactive(value[\"__v_raw\" /* RAW */]);\r\n    }\r\n    return !!(value && value[\"__v_isReactive\" /* IS_REACTIVE */]);\r\n}\r\nfunction isReadonly(value) {\r\n    return !!(value && value[\"__v_isReadonly\" /* IS_READONLY */]);\r\n}\r\nfunction isProxy(value) {\r\n    return isReactive(value) || isReadonly(value);\r\n}\r\nfunction toRaw(observed) {\r\n    return ((observed && toRaw(observed[\"__v_raw\" /* RAW */])) || observed);\r\n}\r\nfunction markRaw(value) {\r\n    def(value, \"__v_skip\" /* SKIP */, true);\r\n    return value;\r\n}\n\nconst convert = (val) => isObject(val) ? reactive(val) : val;\r\nfunction isRef(r) {\r\n    return Boolean(r && r.__v_isRef === true);\r\n}\r\nfunction ref(value) {\r\n    return createRef(value);\r\n}\r\nfunction shallowRef(value) {\r\n    return createRef(value, true);\r\n}\r\nclass RefImpl {\r\n    constructor(_rawValue, _shallow = false) {\r\n        this._rawValue = _rawValue;\r\n        this._shallow = _shallow;\r\n        this.__v_isRef = true;\r\n        this._value = _shallow ? _rawValue : convert(_rawValue);\r\n    }\r\n    get value() {\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newVal) {\r\n        if (hasChanged(toRaw(newVal), this._rawValue)) {\r\n            this._rawValue = newVal;\r\n            this._value = this._shallow ? newVal : convert(newVal);\r\n            trigger(toRaw(this), \"set\" /* SET */, 'value', newVal);\r\n        }\r\n    }\r\n}\r\nfunction createRef(rawValue, shallow = false) {\r\n    if (isRef(rawValue)) {\r\n        return rawValue;\r\n    }\r\n    return new RefImpl(rawValue, shallow);\r\n}\r\nfunction triggerRef(ref) {\r\n    trigger(toRaw(ref), \"set\" /* SET */, 'value', (process.env.NODE_ENV !== 'production') ? ref.value : void 0);\r\n}\r\nfunction unref(ref) {\r\n    return isRef(ref) ? ref.value : ref;\r\n}\r\nconst shallowUnwrapHandlers = {\r\n    get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n    set: (target, key, value, receiver) => {\r\n        const oldValue = target[key];\r\n        if (isRef(oldValue) && !isRef(value)) {\r\n            oldValue.value = value;\r\n            return true;\r\n        }\r\n        else {\r\n            return Reflect.set(target, key, value, receiver);\r\n        }\r\n    }\r\n};\r\nfunction proxyRefs(objectWithRefs) {\r\n    return isReactive(objectWithRefs)\r\n        ? objectWithRefs\r\n        : new Proxy(objectWithRefs, shallowUnwrapHandlers);\r\n}\r\nclass CustomRefImpl {\r\n    constructor(factory) {\r\n        this.__v_isRef = true;\r\n        const { get, set } = factory(() => track(this, \"get\" /* GET */, 'value'), () => trigger(this, \"set\" /* SET */, 'value'));\r\n        this._get = get;\r\n        this._set = set;\r\n    }\r\n    get value() {\r\n        return this._get();\r\n    }\r\n    set value(newVal) {\r\n        this._set(newVal);\r\n    }\r\n}\r\nfunction customRef(factory) {\r\n    return new CustomRefImpl(factory);\r\n}\r\nfunction toRefs(object) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isProxy(object)) {\r\n        console.warn(`toRefs() expects a reactive object but received a plain one.`);\r\n    }\r\n    const ret = isArray(object) ? new Array(object.length) : {};\r\n    for (const key in object) {\r\n        ret[key] = toRef(object, key);\r\n    }\r\n    return ret;\r\n}\r\nclass ObjectRefImpl {\r\n    constructor(_object, _key) {\r\n        this._object = _object;\r\n        this._key = _key;\r\n        this.__v_isRef = true;\r\n    }\r\n    get value() {\r\n        return this._object[this._key];\r\n    }\r\n    set value(newVal) {\r\n        this._object[this._key] = newVal;\r\n    }\r\n}\r\nfunction toRef(object, key) {\r\n    return isRef(object[key])\r\n        ? object[key]\r\n        : new ObjectRefImpl(object, key);\r\n}\n\nclass ComputedRefImpl {\r\n    constructor(getter, _setter, isReadonly) {\r\n        this._setter = _setter;\r\n        this._dirty = true;\r\n        this.__v_isRef = true;\r\n        this.effect = effect(getter, {\r\n            lazy: true,\r\n            scheduler: () => {\r\n                if (!this._dirty) {\r\n                    this._dirty = true;\r\n                    trigger(toRaw(this), \"set\" /* SET */, 'value');\r\n                }\r\n            }\r\n        });\r\n        this[\"__v_isReadonly\" /* IS_READONLY */] = isReadonly;\r\n    }\r\n    get value() {\r\n        if (this._dirty) {\r\n            this._value = this.effect();\r\n            this._dirty = false;\r\n        }\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newValue) {\r\n        this._setter(newValue);\r\n    }\r\n}\r\nfunction computed(getterOrOptions) {\r\n    let getter;\r\n    let setter;\r\n    if (isFunction(getterOrOptions)) {\r\n        getter = getterOrOptions;\r\n        setter = (process.env.NODE_ENV !== 'production')\r\n            ? () => {\r\n                console.warn('Write operation failed: computed value is readonly');\r\n            }\r\n            : NOOP;\r\n    }\r\n    else {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n    return new ComputedRefImpl(getter, setter, isFunction(getterOrOptions) || !getterOrOptions.set);\r\n}\n\nexport { ITERATE_KEY, computed, customRef, effect, enableTracking, isProxy, isReactive, isReadonly, isRef, markRaw, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, track, trigger, triggerRef, unref };\n","import { pauseTracking, resetTracking, isRef, toRaw, shallowReactive, trigger, isReactive, effect, stop, ref, isProxy, proxyRefs, toRef, reactive, shallowReadonly, track, computed as computed$1, isReadonly } from '@vue/reactivity';\nexport { customRef, isProxy, isReactive, isReadonly, isRef, markRaw, proxyRefs, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, toRaw, toRef, toRefs, triggerRef, unref } from '@vue/reactivity';\nimport { isString, isFunction, isPromise, isArray, extend, EMPTY_OBJ, toHandlerKey, toNumber, hyphenate, camelize, isOn, hasOwn, isModelListener, def, isReservedProp, EMPTY_ARR, isObject, capitalize, toRawType, makeMap, remove, NOOP, hasChanged, isSet, isMap, invokeArrayFns, NO, getGlobalThis, normalizeClass, normalizeStyle, isGloballyWhitelisted } from '@vue/shared';\nexport { camelize, capitalize, toDisplayString, toHandlerKey } from '@vue/shared';\n\nconst stack = [];\r\nfunction pushWarningContext(vnode) {\r\n    stack.push(vnode);\r\n}\r\nfunction popWarningContext() {\r\n    stack.pop();\r\n}\r\nfunction warn(msg, ...args) {\r\n    // avoid props formatting or warn handler tracking deps that might be mutated\r\n    // during patch, leading to infinite recursion.\r\n    pauseTracking();\r\n    const instance = stack.length ? stack[stack.length - 1].component : null;\r\n    const appWarnHandler = instance && instance.appContext.config.warnHandler;\r\n    const trace = getComponentTrace();\r\n    if (appWarnHandler) {\r\n        callWithErrorHandling(appWarnHandler, instance, 11 /* APP_WARN_HANDLER */, [\r\n            msg + args.join(''),\r\n            instance && instance.proxy,\r\n            trace\r\n                .map(({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`)\r\n                .join('\\n'),\r\n            trace\r\n        ]);\r\n    }\r\n    else {\r\n        const warnArgs = [`[Vue warn]: ${msg}`, ...args];\r\n        /* istanbul ignore if */\r\n        if (trace.length &&\r\n            // avoid spamming console during tests\r\n            !false) {\r\n            warnArgs.push(`\\n`, ...formatTrace(trace));\r\n        }\r\n        console.warn(...warnArgs);\r\n    }\r\n    resetTracking();\r\n}\r\nfunction getComponentTrace() {\r\n    let currentVNode = stack[stack.length - 1];\r\n    if (!currentVNode) {\r\n        return [];\r\n    }\r\n    // we can't just use the stack because it will be incomplete during updates\r\n    // that did not start from the root. Re-construct the parent chain using\r\n    // instance parent pointers.\r\n    const normalizedStack = [];\r\n    while (currentVNode) {\r\n        const last = normalizedStack[0];\r\n        if (last && last.vnode === currentVNode) {\r\n            last.recurseCount++;\r\n        }\r\n        else {\r\n            normalizedStack.push({\r\n                vnode: currentVNode,\r\n                recurseCount: 0\r\n            });\r\n        }\r\n        const parentInstance = currentVNode.component && currentVNode.component.parent;\r\n        currentVNode = parentInstance && parentInstance.vnode;\r\n    }\r\n    return normalizedStack;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace) {\r\n    const logs = [];\r\n    trace.forEach((entry, i) => {\r\n        logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\r\n    });\r\n    return logs;\r\n}\r\nfunction formatTraceEntry({ vnode, recurseCount }) {\r\n    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\r\n    const isRoot = vnode.component ? vnode.component.parent == null : false;\r\n    const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;\r\n    const close = `>` + postfix;\r\n    return vnode.props\r\n        ? [open, ...formatProps(vnode.props), close]\r\n        : [open + close];\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProps(props) {\r\n    const res = [];\r\n    const keys = Object.keys(props);\r\n    keys.slice(0, 3).forEach(key => {\r\n        res.push(...formatProp(key, props[key]));\r\n    });\r\n    if (keys.length > 3) {\r\n        res.push(` ...`);\r\n    }\r\n    return res;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProp(key, value, raw) {\r\n    if (isString(value)) {\r\n        value = JSON.stringify(value);\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (typeof value === 'number' ||\r\n        typeof value === 'boolean' ||\r\n        value == null) {\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (isRef(value)) {\r\n        value = formatProp(key, toRaw(value.value), true);\r\n        return raw ? value : [`${key}=Ref<`, value, `>`];\r\n    }\r\n    else if (isFunction(value)) {\r\n        return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\r\n    }\r\n    else {\r\n        value = toRaw(value);\r\n        return raw ? value : [`${key}=`, value];\r\n    }\r\n}\n\nconst ErrorTypeStrings = {\r\n    [\"bc\" /* BEFORE_CREATE */]: 'beforeCreate hook',\r\n    [\"c\" /* CREATED */]: 'created hook',\r\n    [\"bm\" /* BEFORE_MOUNT */]: 'beforeMount hook',\r\n    [\"m\" /* MOUNTED */]: 'mounted hook',\r\n    [\"bu\" /* BEFORE_UPDATE */]: 'beforeUpdate hook',\r\n    [\"u\" /* UPDATED */]: 'updated',\r\n    [\"bum\" /* BEFORE_UNMOUNT */]: 'beforeUnmount hook',\r\n    [\"um\" /* UNMOUNTED */]: 'unmounted hook',\r\n    [\"a\" /* ACTIVATED */]: 'activated hook',\r\n    [\"da\" /* DEACTIVATED */]: 'deactivated hook',\r\n    [\"ec\" /* ERROR_CAPTURED */]: 'errorCaptured hook',\r\n    [\"rtc\" /* RENDER_TRACKED */]: 'renderTracked hook',\r\n    [\"rtg\" /* RENDER_TRIGGERED */]: 'renderTriggered hook',\r\n    [0 /* SETUP_FUNCTION */]: 'setup function',\r\n    [1 /* RENDER_FUNCTION */]: 'render function',\r\n    [2 /* WATCH_GETTER */]: 'watcher getter',\r\n    [3 /* WATCH_CALLBACK */]: 'watcher callback',\r\n    [4 /* WATCH_CLEANUP */]: 'watcher cleanup function',\r\n    [5 /* NATIVE_EVENT_HANDLER */]: 'native event handler',\r\n    [6 /* COMPONENT_EVENT_HANDLER */]: 'component event handler',\r\n    [7 /* VNODE_HOOK */]: 'vnode hook',\r\n    [8 /* DIRECTIVE_HOOK */]: 'directive hook',\r\n    [9 /* TRANSITION_HOOK */]: 'transition hook',\r\n    [10 /* APP_ERROR_HANDLER */]: 'app errorHandler',\r\n    [11 /* APP_WARN_HANDLER */]: 'app warnHandler',\r\n    [12 /* FUNCTION_REF */]: 'ref function',\r\n    [13 /* ASYNC_COMPONENT_LOADER */]: 'async component loader',\r\n    [14 /* SCHEDULER */]: 'scheduler flush. This is likely a Vue internals bug. ' +\r\n        'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-next'\r\n};\r\nfunction callWithErrorHandling(fn, instance, type, args) {\r\n    let res;\r\n    try {\r\n        res = args ? fn(...args) : fn();\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, type);\r\n    }\r\n    return res;\r\n}\r\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\r\n    if (isFunction(fn)) {\r\n        const res = callWithErrorHandling(fn, instance, type, args);\r\n        if (res && isPromise(res)) {\r\n            res.catch(err => {\r\n                handleError(err, instance, type);\r\n            });\r\n        }\r\n        return res;\r\n    }\r\n    const values = [];\r\n    for (let i = 0; i < fn.length; i++) {\r\n        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\r\n    }\r\n    return values;\r\n}\r\nfunction handleError(err, instance, type, throwInDev = true) {\r\n    const contextVNode = instance ? instance.vnode : null;\r\n    if (instance) {\r\n        let cur = instance.parent;\r\n        // the exposed instance is the render proxy to keep it consistent with 2.x\r\n        const exposedInstance = instance.proxy;\r\n        // in production the hook receives only the error code\r\n        const errorInfo = (process.env.NODE_ENV !== 'production') ? ErrorTypeStrings[type] : type;\r\n        while (cur) {\r\n            const errorCapturedHooks = cur.ec;\r\n            if (errorCapturedHooks) {\r\n                for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            cur = cur.parent;\r\n        }\r\n        // app-level handling\r\n        const appErrorHandler = instance.appContext.config.errorHandler;\r\n        if (appErrorHandler) {\r\n            callWithErrorHandling(appErrorHandler, null, 10 /* APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);\r\n            return;\r\n        }\r\n    }\r\n    logError(err, type, contextVNode, throwInDev);\r\n}\r\nfunction logError(err, type, contextVNode, throwInDev = true) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const info = ErrorTypeStrings[type];\r\n        if (contextVNode) {\r\n            pushWarningContext(contextVNode);\r\n        }\r\n        warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\r\n        if (contextVNode) {\r\n            popWarningContext();\r\n        }\r\n        // crash in dev by default so it's more noticeable\r\n        if (throwInDev) {\r\n            throw err;\r\n        }\r\n        else {\r\n            console.error(err);\r\n        }\r\n    }\r\n    else {\r\n        // recover in prod to reduce the impact on end-user\r\n        console.error(err);\r\n    }\r\n}\n\nlet isFlushing = false;\r\nlet isFlushPending = false;\r\nconst queue = [];\r\nlet flushIndex = 0;\r\nconst pendingPreFlushCbs = [];\r\nlet activePreFlushCbs = null;\r\nlet preFlushIndex = 0;\r\nconst pendingPostFlushCbs = [];\r\nlet activePostFlushCbs = null;\r\nlet postFlushIndex = 0;\r\nconst resolvedPromise = Promise.resolve();\r\nlet currentFlushPromise = null;\r\nlet currentPreFlushParentJob = null;\r\nconst RECURSION_LIMIT = 100;\r\nfunction nextTick(fn) {\r\n    const p = currentFlushPromise || resolvedPromise;\r\n    return fn ? p.then(this ? fn.bind(this) : fn) : p;\r\n}\r\nfunction queueJob(job) {\r\n    // the dedupe search uses the startIndex argument of Array.includes()\r\n    // by default the search index includes the current job that is being run\r\n    // so it cannot recursively trigger itself again.\r\n    // if the job is a watch() callback, the search will start with a +1 index to\r\n    // allow it recursively trigger itself - it is the user's responsibility to\r\n    // ensure it doesn't end up in an infinite loop.\r\n    if ((!queue.length ||\r\n        !queue.includes(job, isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex)) &&\r\n        job !== currentPreFlushParentJob) {\r\n        queue.push(job);\r\n        queueFlush();\r\n    }\r\n}\r\nfunction queueFlush() {\r\n    if (!isFlushing && !isFlushPending) {\r\n        isFlushPending = true;\r\n        currentFlushPromise = resolvedPromise.then(flushJobs);\r\n    }\r\n}\r\nfunction invalidateJob(job) {\r\n    const i = queue.indexOf(job);\r\n    if (i > -1) {\r\n        queue.splice(i, 1);\r\n    }\r\n}\r\nfunction queueCb(cb, activeQueue, pendingQueue, index) {\r\n    if (!isArray(cb)) {\r\n        if (!activeQueue ||\r\n            !activeQueue.includes(cb, cb.allowRecurse ? index + 1 : index)) {\r\n            pendingQueue.push(cb);\r\n        }\r\n    }\r\n    else {\r\n        // if cb is an array, it is a component lifecycle hook which can only be\r\n        // triggered by a job, which is already deduped in the main queue, so\r\n        // we can skip duplicate check here to improve perf\r\n        pendingQueue.push(...cb);\r\n    }\r\n    queueFlush();\r\n}\r\nfunction queuePreFlushCb(cb) {\r\n    queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex);\r\n}\r\nfunction queuePostFlushCb(cb) {\r\n    queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex);\r\n}\r\nfunction flushPreFlushCbs(seen, parentJob = null) {\r\n    if (pendingPreFlushCbs.length) {\r\n        currentPreFlushParentJob = parentJob;\r\n        activePreFlushCbs = [...new Set(pendingPreFlushCbs)];\r\n        pendingPreFlushCbs.length = 0;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        for (preFlushIndex = 0; preFlushIndex < activePreFlushCbs.length; preFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePreFlushCbs[preFlushIndex]);\r\n            }\r\n            activePreFlushCbs[preFlushIndex]();\r\n        }\r\n        activePreFlushCbs = null;\r\n        preFlushIndex = 0;\r\n        currentPreFlushParentJob = null;\r\n        // recursively flush until it drains\r\n        flushPreFlushCbs(seen, parentJob);\r\n    }\r\n}\r\nfunction flushPostFlushCbs(seen) {\r\n    if (pendingPostFlushCbs.length) {\r\n        const deduped = [...new Set(pendingPostFlushCbs)];\r\n        pendingPostFlushCbs.length = 0;\r\n        // #1947 already has active queue, nested flushPostFlushCbs call\r\n        if (activePostFlushCbs) {\r\n            activePostFlushCbs.push(...deduped);\r\n            return;\r\n        }\r\n        activePostFlushCbs = deduped;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\r\n        for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex]);\r\n            }\r\n            activePostFlushCbs[postFlushIndex]();\r\n        }\r\n        activePostFlushCbs = null;\r\n        postFlushIndex = 0;\r\n    }\r\n}\r\nconst getId = (job) => job.id == null ? Infinity : job.id;\r\nfunction flushJobs(seen) {\r\n    isFlushPending = false;\r\n    isFlushing = true;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        seen = seen || new Map();\r\n    }\r\n    flushPreFlushCbs(seen);\r\n    // Sort queue before flush.\r\n    // This ensures that:\r\n    // 1. Components are updated from parent to child. (because parent is always\r\n    //    created before the child so its render effect will have smaller\r\n    //    priority number)\r\n    // 2. If a component is unmounted during a parent component's update,\r\n    //    its update can be skipped.\r\n    queue.sort((a, b) => getId(a) - getId(b));\r\n    try {\r\n        for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n            const job = queue[flushIndex];\r\n            if (job) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkRecursiveUpdates(seen, job);\r\n                }\r\n                callWithErrorHandling(job, null, 14 /* SCHEDULER */);\r\n            }\r\n        }\r\n    }\r\n    finally {\r\n        flushIndex = 0;\r\n        queue.length = 0;\r\n        flushPostFlushCbs(seen);\r\n        isFlushing = false;\r\n        currentFlushPromise = null;\r\n        // some postFlushCb queued jobs!\r\n        // keep flushing until it drains.\r\n        if (queue.length || pendingPostFlushCbs.length) {\r\n            flushJobs(seen);\r\n        }\r\n    }\r\n}\r\nfunction checkRecursiveUpdates(seen, fn) {\r\n    if (!seen.has(fn)) {\r\n        seen.set(fn, 1);\r\n    }\r\n    else {\r\n        const count = seen.get(fn);\r\n        if (count > RECURSION_LIMIT) {\r\n            throw new Error(`Maximum recursive updates exceeded. ` +\r\n                `This means you have a reactive effect that is mutating its own ` +\r\n                `dependencies and thus recursively triggering itself. Possible sources ` +\r\n                `include component template, render function, updated hook or ` +\r\n                `watcher source function.`);\r\n        }\r\n        else {\r\n            seen.set(fn, count + 1);\r\n        }\r\n    }\r\n}\n\n/* eslint-disable no-restricted-globals */\r\nlet isHmrUpdating = false;\r\nconst hmrDirtyComponents = new Set();\r\n// Expose the HMR runtime on the global object\r\n// This makes it entirely tree-shakable without polluting the exports and makes\r\n// it easier to be used in toolings like vue-loader\r\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\r\n// to be set so that its instances can be registered / removed.\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    const globalObject = typeof global !== 'undefined'\r\n        ? global\r\n        : typeof self !== 'undefined'\r\n            ? self\r\n            : typeof window !== 'undefined'\r\n                ? window\r\n                : {};\r\n    globalObject.__VUE_HMR_RUNTIME__ = {\r\n        createRecord: tryWrap(createRecord),\r\n        rerender: tryWrap(rerender),\r\n        reload: tryWrap(reload)\r\n    };\r\n}\r\nconst map = new Map();\r\nfunction registerHMR(instance) {\r\n    const id = instance.type.__hmrId;\r\n    let record = map.get(id);\r\n    if (!record) {\r\n        createRecord(id, instance.type);\r\n        record = map.get(id);\r\n    }\r\n    record.instances.add(instance);\r\n}\r\nfunction unregisterHMR(instance) {\r\n    map.get(instance.type.__hmrId).instances.delete(instance);\r\n}\r\nfunction createRecord(id, component) {\r\n    if (!component) {\r\n        warn(`HMR API usage is out of date.\\n` +\r\n            `Please upgrade vue-loader/vite/rollup-plugin-vue or other relevant ` +\r\n            `depdendency that handles Vue SFC compilation.`);\r\n        component = {};\r\n    }\r\n    if (map.has(id)) {\r\n        return false;\r\n    }\r\n    map.set(id, {\r\n        component: isClassComponent(component) ? component.__vccOpts : component,\r\n        instances: new Set()\r\n    });\r\n    return true;\r\n}\r\nfunction rerender(id, newRender) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    if (newRender)\r\n        record.component.render = newRender;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    Array.from(record.instances).forEach(instance => {\r\n        if (newRender) {\r\n            instance.render = newRender;\r\n        }\r\n        instance.renderCache = [];\r\n        // this flag forces child components with slot content to update\r\n        isHmrUpdating = true;\r\n        instance.update();\r\n        isHmrUpdating = false;\r\n    });\r\n}\r\nfunction reload(id, newComp) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    const { component, instances } = record;\r\n    if (!hmrDirtyComponents.has(component)) {\r\n        // 1. Update existing comp definition to match new one\r\n        newComp = isClassComponent(newComp) ? newComp.__vccOpts : newComp;\r\n        extend(component, newComp);\r\n        for (const key in component) {\r\n            if (!(key in newComp)) {\r\n                delete component[key];\r\n            }\r\n        }\r\n        // 2. Mark component dirty. This forces the renderer to replace the component\r\n        // on patch.\r\n        hmrDirtyComponents.add(component);\r\n        // 3. Make sure to unmark the component after the reload.\r\n        queuePostFlushCb(() => {\r\n            hmrDirtyComponents.delete(component);\r\n        });\r\n    }\r\n    Array.from(instances).forEach(instance => {\r\n        if (instance.parent) {\r\n            // 4. Force the parent instance to re-render. This will cause all updated\r\n            // components to be unmounted and re-mounted. Queue the update so that we\r\n            // don't end up forcing the same parent to re-render multiple times.\r\n            queueJob(instance.parent.update);\r\n        }\r\n        else if (instance.appContext.reload) {\r\n            // root instance mounted via createApp() has a reload method\r\n            instance.appContext.reload();\r\n        }\r\n        else if (typeof window !== 'undefined') {\r\n            // root instance inside tree created via raw render(). Force reload.\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\r\n        }\r\n    });\r\n}\r\nfunction tryWrap(fn) {\r\n    return (id, arg) => {\r\n        try {\r\n            return fn(id, arg);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` +\r\n                `Full reload required.`);\r\n        }\r\n    };\r\n}\n\nlet devtools;\r\nfunction setDevtoolsHook(hook) {\r\n    devtools = hook;\r\n}\r\nfunction devtoolsInitApp(app, version) {\r\n    // TODO queue if devtools is undefined\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:init\" /* APP_INIT */, app, version, {\r\n        Fragment,\r\n        Text,\r\n        Comment,\r\n        Static\r\n    });\r\n}\r\nfunction devtoolsUnmountApp(app) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:unmount\" /* APP_UNMOUNT */, app);\r\n}\r\nconst devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\"component:added\" /* COMPONENT_ADDED */);\r\nconst devtoolsComponentUpdated = /*#__PURE__*/ createDevtoolsComponentHook(\"component:updated\" /* COMPONENT_UPDATED */);\r\nconst devtoolsComponentRemoved = /*#__PURE__*/ createDevtoolsComponentHook(\"component:removed\" /* COMPONENT_REMOVED */);\r\nfunction createDevtoolsComponentHook(hook) {\r\n    return (component) => {\r\n        if (!devtools)\r\n            return;\r\n        devtools.emit(hook, component.appContext.app, component.uid, component.parent ? component.parent.uid : undefined, component);\r\n    };\r\n}\r\nfunction devtoolsComponentEmit(component, event, params) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"component:emit\" /* COMPONENT_EMIT */, component.appContext.app, component, event, params);\r\n}\n\nfunction emit(instance, event, ...rawArgs) {\r\n    const props = instance.vnode.props || EMPTY_OBJ;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const { emitsOptions, propsOptions: [propsOptions] } = instance;\r\n        if (emitsOptions) {\r\n            if (!(event in emitsOptions)) {\r\n                if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {\r\n                    warn(`Component emitted event \"${event}\" but it is neither declared in ` +\r\n                        `the emits option nor as an \"${toHandlerKey(event)}\" prop.`);\r\n                }\r\n            }\r\n            else {\r\n                const validator = emitsOptions[event];\r\n                if (isFunction(validator)) {\r\n                    const isValid = validator(...rawArgs);\r\n                    if (!isValid) {\r\n                        warn(`Invalid event arguments: event validation failed for event \"${event}\".`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let args = rawArgs;\r\n    const isModelListener = event.startsWith('update:');\r\n    // for v-model update:xxx events, apply modifiers on args\r\n    const modelArg = isModelListener && event.slice(7);\r\n    if (modelArg && modelArg in props) {\r\n        const modifiersKey = `${modelArg === 'modelValue' ? 'model' : modelArg}Modifiers`;\r\n        const { number, trim } = props[modifiersKey] || EMPTY_OBJ;\r\n        if (trim) {\r\n            args = rawArgs.map(a => a.trim());\r\n        }\r\n        else if (number) {\r\n            args = rawArgs.map(toNumber);\r\n        }\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsComponentEmit(instance, event, args);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const lowerCaseEvent = event.toLowerCase();\r\n        if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\r\n            warn(`Event \"${lowerCaseEvent}\" is emitted in component ` +\r\n                `${formatComponentName(instance, instance.type)} but the handler is registered for \"${event}\". ` +\r\n                `Note that HTML attributes are case-insensitive and you cannot use ` +\r\n                `v-on to listen to camelCase events when using in-DOM templates. ` +\r\n                `You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`);\r\n        }\r\n    }\r\n    // convert handler name to camelCase. See issue #2249\r\n    let handlerName = toHandlerKey(camelize(event));\r\n    let handler = props[handlerName];\r\n    // for v-model update:xxx events, also trigger kebab-case equivalent\r\n    // for props passed via kebab-case\r\n    if (!handler && isModelListener) {\r\n        handlerName = toHandlerKey(hyphenate(event));\r\n        handler = props[handlerName];\r\n    }\r\n    if (handler) {\r\n        callWithAsyncErrorHandling(handler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n    const onceHandler = props[handlerName + `Once`];\r\n    if (onceHandler) {\r\n        if (!instance.emitted) {\r\n            (instance.emitted = {})[handlerName] = true;\r\n        }\r\n        else if (instance.emitted[handlerName]) {\r\n            return;\r\n        }\r\n        callWithAsyncErrorHandling(onceHandler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n}\r\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\r\n    if (!appContext.deopt && comp.__emits !== undefined) {\r\n        return comp.__emits;\r\n    }\r\n    const raw = comp.emits;\r\n    let normalized = {};\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendEmits = (raw) => {\r\n            hasExtends = true;\r\n            extend(normalized, normalizeEmitsOptions(raw, appContext, true));\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendEmits);\r\n        }\r\n        if (comp.extends) {\r\n            extendEmits(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendEmits);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__emits = null);\r\n    }\r\n    if (isArray(raw)) {\r\n        raw.forEach(key => (normalized[key] = null));\r\n    }\r\n    else {\r\n        extend(normalized, raw);\r\n    }\r\n    return (comp.__emits = normalized);\r\n}\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nfunction isEmitListener(options, key) {\r\n    if (!options || !isOn(key)) {\r\n        return false;\r\n    }\r\n    key = key.slice(2).replace(/Once$/, '');\r\n    return (hasOwn(options, key[0].toLowerCase() + key.slice(1)) ||\r\n        hasOwn(options, hyphenate(key)) ||\r\n        hasOwn(options, key));\r\n}\n\n/**\r\n * mark the current rendering instance for asset resolution (e.g.\r\n * resolveComponent, resolveDirective) during render\r\n */\r\nlet currentRenderingInstance = null;\r\nfunction setCurrentRenderingInstance(instance) {\r\n    currentRenderingInstance = instance;\r\n}\r\n/**\r\n * dev only flag to track whether $attrs was used during render.\r\n * If $attrs was used during render then the warning for failed attrs\r\n * fallthrough can be suppressed.\r\n */\r\nlet accessedAttrs = false;\r\nfunction markAttrsAccessed() {\r\n    accessedAttrs = true;\r\n}\r\nfunction renderComponentRoot(instance) {\r\n    const { type: Component, vnode, proxy, withProxy, props, propsOptions: [propsOptions], slots, attrs, emit, render, renderCache, data, setupState, ctx } = instance;\r\n    let result;\r\n    currentRenderingInstance = instance;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        accessedAttrs = false;\r\n    }\r\n    try {\r\n        let fallthroughAttrs;\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            // withProxy is a proxy with a different `has` trap only for\r\n            // runtime-compiled render functions using `with` block.\r\n            const proxyToUse = withProxy || proxy;\r\n            result = normalizeVNode(render.call(proxyToUse, proxyToUse, renderCache, props, setupState, data, ctx));\r\n            fallthroughAttrs = attrs;\r\n        }\r\n        else {\r\n            // functional\r\n            const render = Component;\r\n            // in dev, mark attrs accessed if optional props (attrs === props)\r\n            if ((process.env.NODE_ENV !== 'production') && attrs === props) {\r\n                markAttrsAccessed();\r\n            }\r\n            result = normalizeVNode(render.length > 1\r\n                ? render(props, (process.env.NODE_ENV !== 'production')\r\n                    ? {\r\n                        get attrs() {\r\n                            markAttrsAccessed();\r\n                            return attrs;\r\n                        },\r\n                        slots,\r\n                        emit\r\n                    }\r\n                    : { attrs, slots, emit })\r\n                : render(props, null /* we know it doesn't need it */));\r\n            fallthroughAttrs = Component.props\r\n                ? attrs\r\n                : getFunctionalFallthrough(attrs);\r\n        }\r\n        // attr merging\r\n        // in dev mode, comments are preserved, and it's possible for a template\r\n        // to have comments along side the root element which makes it a fragment\r\n        let root = result;\r\n        let setRoot = undefined;\r\n        if ((process.env.NODE_ENV !== 'production') && result.patchFlag & 2048 /* DEV_ROOT_FRAGMENT */) {\r\n            ;\r\n            [root, setRoot] = getChildRoot(result);\r\n        }\r\n        if (Component.inheritAttrs !== false && fallthroughAttrs) {\r\n            const keys = Object.keys(fallthroughAttrs);\r\n            const { shapeFlag } = root;\r\n            if (keys.length) {\r\n                if (shapeFlag & 1 /* ELEMENT */ ||\r\n                    shapeFlag & 6 /* COMPONENT */) {\r\n                    if (propsOptions && keys.some(isModelListener)) {\r\n                        // If a v-model listener (onUpdate:xxx) has a corresponding declared\r\n                        // prop, it indicates this component expects to handle v-model and\r\n                        // it should not fallthrough.\r\n                        // related: #1543, #1643, #1989\r\n                        fallthroughAttrs = filterModelListeners(fallthroughAttrs, propsOptions);\r\n                    }\r\n                    root = cloneVNode(root, fallthroughAttrs);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production') && !accessedAttrs && root.type !== Comment) {\r\n                    const allAttrs = Object.keys(attrs);\r\n                    const eventAttrs = [];\r\n                    const extraAttrs = [];\r\n                    for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n                        const key = allAttrs[i];\r\n                        if (isOn(key)) {\r\n                            // ignore v-model handlers when they fail to fallthrough\r\n                            if (!isModelListener(key)) {\r\n                                // remove `on`, lowercase first letter to reflect event casing\r\n                                // accurately\r\n                                eventAttrs.push(key[2].toLowerCase() + key.slice(3));\r\n                            }\r\n                        }\r\n                        else {\r\n                            extraAttrs.push(key);\r\n                        }\r\n                    }\r\n                    if (extraAttrs.length) {\r\n                        warn(`Extraneous non-props attributes (` +\r\n                            `${extraAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes.`);\r\n                    }\r\n                    if (eventAttrs.length) {\r\n                        warn(`Extraneous non-emits event listeners (` +\r\n                            `${eventAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes. ` +\r\n                            `If the listener is intended to be a component custom event listener only, ` +\r\n                            `declare it using the \"emits\" option.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // inherit directives\r\n        if (vnode.dirs) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Runtime directive used on component with non-element root node. ` +\r\n                    `The directives will not function as intended.`);\r\n            }\r\n            root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\r\n        }\r\n        // inherit transition data\r\n        if (vnode.transition) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Component inside <Transition> renders non-element root node ` +\r\n                    `that cannot be animated.`);\r\n            }\r\n            root.transition = vnode.transition;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && setRoot) {\r\n            setRoot(root);\r\n        }\r\n        else {\r\n            result = root;\r\n        }\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, 1 /* RENDER_FUNCTION */);\r\n        result = createVNode(Comment);\r\n    }\r\n    currentRenderingInstance = null;\r\n    return result;\r\n}\r\n/**\r\n * dev only\r\n * In dev mode, template root level comments are rendered, which turns the\r\n * template into a fragment root, but we need to locate the single element\r\n * root for attrs and scope id processing.\r\n */\r\nconst getChildRoot = (vnode) => {\r\n    const rawChildren = vnode.children;\r\n    const dynamicChildren = vnode.dynamicChildren;\r\n    const childRoot = filterSingleRoot(rawChildren);\r\n    if (!childRoot) {\r\n        return [vnode, undefined];\r\n    }\r\n    const index = rawChildren.indexOf(childRoot);\r\n    const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\r\n    const setRoot = (updatedRoot) => {\r\n        rawChildren[index] = updatedRoot;\r\n        if (dynamicChildren) {\r\n            if (dynamicIndex > -1) {\r\n                dynamicChildren[dynamicIndex] = updatedRoot;\r\n            }\r\n            else if (updatedRoot.patchFlag > 0) {\r\n                vnode.dynamicChildren = [...dynamicChildren, updatedRoot];\r\n            }\r\n        }\r\n    };\r\n    return [normalizeVNode(childRoot), setRoot];\r\n};\r\nfunction filterSingleRoot(children) {\r\n    let singleRoot;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        if (isVNode(child)) {\r\n            // ignore user comment\r\n            if (child.type !== Comment || child.children === 'v-if') {\r\n                if (singleRoot) {\r\n                    // has more than 1 non-comment child, return now\r\n                    return;\r\n                }\r\n                else {\r\n                    singleRoot = child;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n    return singleRoot;\r\n}\r\nconst getFunctionalFallthrough = (attrs) => {\r\n    let res;\r\n    for (const key in attrs) {\r\n        if (key === 'class' || key === 'style' || isOn(key)) {\r\n            (res || (res = {}))[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst filterModelListeners = (attrs, props) => {\r\n    const res = {};\r\n    for (const key in attrs) {\r\n        if (!isModelListener(key) || !(key.slice(9) in props)) {\r\n            res[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst isElementRoot = (vnode) => {\r\n    return (vnode.shapeFlag & 6 /* COMPONENT */ ||\r\n        vnode.shapeFlag & 1 /* ELEMENT */ ||\r\n        vnode.type === Comment // potential v-if branch switch\r\n    );\r\n};\r\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\r\n    const { props: prevProps, children: prevChildren, component } = prevVNode;\r\n    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\r\n    const emits = component.emitsOptions;\r\n    // Parent component's render function was hot-updated. Since this may have\r\n    // caused the child component's slots content to have changed, we need to\r\n    // force the child to update as well.\r\n    if ((process.env.NODE_ENV !== 'production') && (prevChildren || nextChildren) && isHmrUpdating) {\r\n        return true;\r\n    }\r\n    // force child update for runtime directive or transition on component vnode.\r\n    if (nextVNode.dirs || nextVNode.transition) {\r\n        return true;\r\n    }\r\n    if (optimized && patchFlag >= 0) {\r\n        if (patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n            // slot content that references values that might have changed,\r\n            // e.g. in a v-for\r\n            return true;\r\n        }\r\n        if (patchFlag & 16 /* FULL_PROPS */) {\r\n            if (!prevProps) {\r\n                return !!nextProps;\r\n            }\r\n            // presence of this flag indicates props are always non-null\r\n            return hasPropsChanged(prevProps, nextProps, emits);\r\n        }\r\n        else if (patchFlag & 8 /* PROPS */) {\r\n            const dynamicProps = nextVNode.dynamicProps;\r\n            for (let i = 0; i < dynamicProps.length; i++) {\r\n                const key = dynamicProps[i];\r\n                if (nextProps[key] !== prevProps[key] &&\r\n                    !isEmitListener(emits, key)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // this path is only taken by manually written render functions\r\n        // so presence of any children leads to a forced update\r\n        if (prevChildren || nextChildren) {\r\n            if (!nextChildren || !nextChildren.$stable) {\r\n                return true;\r\n            }\r\n        }\r\n        if (prevProps === nextProps) {\r\n            return false;\r\n        }\r\n        if (!prevProps) {\r\n            return !!nextProps;\r\n        }\r\n        if (!nextProps) {\r\n            return true;\r\n        }\r\n        return hasPropsChanged(prevProps, nextProps, emits);\r\n    }\r\n    return false;\r\n}\r\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\r\n    const nextKeys = Object.keys(nextProps);\r\n    if (nextKeys.length !== Object.keys(prevProps).length) {\r\n        return true;\r\n    }\r\n    for (let i = 0; i < nextKeys.length; i++) {\r\n        const key = nextKeys[i];\r\n        if (nextProps[key] !== prevProps[key] &&\r\n            !isEmitListener(emitsOptions, key)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction updateHOCHostEl({ vnode, parent }, el // HostNode\r\n) {\r\n    while (parent && parent.subTree === vnode) {\r\n        (vnode = parent.vnode).el = el;\r\n        parent = parent.parent;\r\n    }\r\n}\n\nconst isSuspense = (type) => type.__isSuspense;\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nconst SuspenseImpl = {\r\n    // In order to make Suspense tree-shakable, we need to avoid importing it\r\n    // directly in the renderer. The renderer checks for the __isSuspense flag\r\n    // on a vnode's type and calls the `process` method, passing in renderer\r\n    // internals.\r\n    __isSuspense: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, \r\n    // platform-specific impl passed from renderer\r\n    rendererInternals) {\r\n        if (n1 == null) {\r\n            mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals);\r\n        }\r\n        else {\r\n            patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, rendererInternals);\r\n        }\r\n    },\r\n    hydrate: hydrateSuspense,\r\n    create: createSuspenseBoundary\r\n};\r\n// Force-casted public typing for h and TSX props inference\r\nconst Suspense = ( SuspenseImpl\r\n    );\r\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals) {\r\n    const { p: patch, o: { createElement } } = rendererInternals;\r\n    const hiddenContainer = createElement('div');\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals));\r\n    // start mounting the content subtree in an off-dom container\r\n    patch(null, (suspense.pendingBranch = vnode.ssContent), hiddenContainer, null, parentComponent, suspense, isSVG);\r\n    // now check if we have encountered any async deps\r\n    if (suspense.deps > 0) {\r\n        // has async\r\n        // mount the fallback tree\r\n        patch(null, vnode.ssFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n        isSVG);\r\n        setActiveBranch(suspense, vnode.ssFallback);\r\n    }\r\n    else {\r\n        // Suspense has no async deps. Just resolve.\r\n        suspense.resolve();\r\n    }\r\n}\r\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, { p: patch, um: unmount, o: { createElement } }) {\r\n    const suspense = (n2.suspense = n1.suspense);\r\n    suspense.vnode = n2;\r\n    n2.el = n1.el;\r\n    const newBranch = n2.ssContent;\r\n    const newFallback = n2.ssFallback;\r\n    const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\r\n    if (pendingBranch) {\r\n        suspense.pendingBranch = newBranch;\r\n        if (isSameVNodeType(newBranch, pendingBranch)) {\r\n            // same root type but content may have changed.\r\n            patch(pendingBranch, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n            if (suspense.deps <= 0) {\r\n                suspense.resolve();\r\n            }\r\n            else if (isInFallback) {\r\n                patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG);\r\n                setActiveBranch(suspense, newFallback);\r\n            }\r\n        }\r\n        else {\r\n            // toggled before pending tree is resolved\r\n            suspense.pendingId++;\r\n            if (isHydrating) {\r\n                // if toggled before hydration is finished, the current DOM tree is\r\n                // no longer valid. set it as the active branch so it will be unmounted\r\n                // when resolved\r\n                suspense.isHydrating = false;\r\n                suspense.activeBranch = pendingBranch;\r\n            }\r\n            else {\r\n                unmount(pendingBranch, parentComponent, suspense);\r\n            }\r\n            // increment pending ID. this is used to invalidate async callbacks\r\n            // reset suspense state\r\n            suspense.deps = 0;\r\n            // discard effects from pending branch\r\n            suspense.effects.length = 0;\r\n            // discard previous container\r\n            suspense.hiddenContainer = createElement('div');\r\n            if (isInFallback) {\r\n                // already in fallback state\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n                else {\r\n                    patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                    isSVG);\r\n                    setActiveBranch(suspense, newFallback);\r\n                }\r\n            }\r\n            else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n                // toggled \"back\" to current active branch\r\n                patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG);\r\n                // force resolve\r\n                suspense.resolve(true);\r\n            }\r\n            else {\r\n                // switched to a 3rd branch\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n            // root did not change, just normal patch\r\n            patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG);\r\n            setActiveBranch(suspense, newBranch);\r\n        }\r\n        else {\r\n            // root node toggled\r\n            // invoke @pending event\r\n            const onPending = n2.props && n2.props.onPending;\r\n            if (isFunction(onPending)) {\r\n                onPending();\r\n            }\r\n            // mount pending branch in off-dom container\r\n            suspense.pendingBranch = newBranch;\r\n            suspense.pendingId++;\r\n            patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n            if (suspense.deps <= 0) {\r\n                // incoming branch has no async deps, resolve now.\r\n                suspense.resolve();\r\n            }\r\n            else {\r\n                const { timeout, pendingId } = suspense;\r\n                if (timeout > 0) {\r\n                    setTimeout(() => {\r\n                        if (suspense.pendingId === pendingId) {\r\n                            suspense.fallback(newFallback);\r\n                        }\r\n                    }, timeout);\r\n                }\r\n                else if (timeout === 0) {\r\n                    suspense.fallback(newFallback);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nlet hasWarned = false;\r\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals, isHydrating = false) {\r\n    /* istanbul ignore if */\r\n    if ((process.env.NODE_ENV !== 'production') && !false && !hasWarned) {\r\n        hasWarned = true;\r\n        // @ts-ignore `console.info` cannot be null error\r\n        console[console.info ? 'info' : 'log'](`<Suspense> is an experimental feature and its API will likely change.`);\r\n    }\r\n    const { p: patch, m: move, um: unmount, n: next, o: { parentNode, remove } } = rendererInternals;\r\n    const timeout = toNumber(vnode.props && vnode.props.timeout);\r\n    const suspense = {\r\n        vnode,\r\n        parent,\r\n        parentComponent,\r\n        isSVG,\r\n        container,\r\n        hiddenContainer,\r\n        anchor,\r\n        deps: 0,\r\n        pendingId: 0,\r\n        timeout: typeof timeout === 'number' ? timeout : -1,\r\n        activeBranch: null,\r\n        pendingBranch: null,\r\n        isInFallback: true,\r\n        isHydrating,\r\n        isUnmounted: false,\r\n        effects: [],\r\n        resolve(resume = false) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!resume && !suspense.pendingBranch) {\r\n                    throw new Error(`suspense.resolve() is called without a pending branch.`);\r\n                }\r\n                if (suspense.isUnmounted) {\r\n                    throw new Error(`suspense.resolve() is called on an already unmounted suspense boundary.`);\r\n                }\r\n            }\r\n            const { vnode, activeBranch, pendingBranch, pendingId, effects, parentComponent, container } = suspense;\r\n            if (suspense.isHydrating) {\r\n                suspense.isHydrating = false;\r\n            }\r\n            else if (!resume) {\r\n                const delayEnter = activeBranch &&\r\n                    pendingBranch.transition &&\r\n                    pendingBranch.transition.mode === 'out-in';\r\n                if (delayEnter) {\r\n                    activeBranch.transition.afterLeave = () => {\r\n                        if (pendingId === suspense.pendingId) {\r\n                            move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                        }\r\n                    };\r\n                }\r\n                // this is initial anchor on mount\r\n                let { anchor } = suspense;\r\n                // unmount current active tree\r\n                if (activeBranch) {\r\n                    // if the fallback tree was mounted, it may have been moved\r\n                    // as part of a parent suspense. get the latest anchor for insertion\r\n                    anchor = next(activeBranch);\r\n                    unmount(activeBranch, parentComponent, suspense, true);\r\n                }\r\n                if (!delayEnter) {\r\n                    // move content from off-dom container to actual container\r\n                    move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                }\r\n            }\r\n            setActiveBranch(suspense, pendingBranch);\r\n            suspense.pendingBranch = null;\r\n            suspense.isInFallback = false;\r\n            // flush buffered effects\r\n            // check if there is a pending parent suspense\r\n            let parent = suspense.parent;\r\n            let hasUnresolvedAncestor = false;\r\n            while (parent) {\r\n                if (parent.pendingBranch) {\r\n                    // found a pending parent suspense, merge buffered post jobs\r\n                    // into that parent\r\n                    parent.effects.push(...effects);\r\n                    hasUnresolvedAncestor = true;\r\n                    break;\r\n                }\r\n                parent = parent.parent;\r\n            }\r\n            // no pending parent suspense, flush all jobs\r\n            if (!hasUnresolvedAncestor) {\r\n                queuePostFlushCb(effects);\r\n            }\r\n            suspense.effects = [];\r\n            // invoke @resolve event\r\n            const onResolve = vnode.props && vnode.props.onResolve;\r\n            if (isFunction(onResolve)) {\r\n                onResolve();\r\n            }\r\n        },\r\n        fallback(fallbackVNode) {\r\n            if (!suspense.pendingBranch) {\r\n                return;\r\n            }\r\n            const { vnode, activeBranch, parentComponent, container, isSVG } = suspense;\r\n            // invoke @fallback event\r\n            const onFallback = vnode.props && vnode.props.onFallback;\r\n            if (isFunction(onFallback)) {\r\n                onFallback();\r\n            }\r\n            const anchor = next(activeBranch);\r\n            const mountFallback = () => {\r\n                if (!suspense.isInFallback) {\r\n                    return;\r\n                }\r\n                // mount the fallback tree\r\n                patch(null, fallbackVNode, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG);\r\n                setActiveBranch(suspense, fallbackVNode);\r\n            };\r\n            const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in';\r\n            if (delayEnter) {\r\n                activeBranch.transition.afterLeave = mountFallback;\r\n            }\r\n            // unmount current active branch\r\n            unmount(activeBranch, parentComponent, null, // no suspense so unmount hooks fire now\r\n            true // shouldRemove\r\n            );\r\n            suspense.isInFallback = true;\r\n            if (!delayEnter) {\r\n                mountFallback();\r\n            }\r\n        },\r\n        move(container, anchor, type) {\r\n            suspense.activeBranch &&\r\n                move(suspense.activeBranch, container, anchor, type);\r\n            suspense.container = container;\r\n        },\r\n        next() {\r\n            return suspense.activeBranch && next(suspense.activeBranch);\r\n        },\r\n        registerDep(instance, setupRenderEffect) {\r\n            const isInPendingSuspense = !!suspense.pendingBranch;\r\n            if (isInPendingSuspense) {\r\n                suspense.deps++;\r\n            }\r\n            const hydratedEl = instance.vnode.el;\r\n            instance\r\n                .asyncDep.catch(err => {\r\n                handleError(err, instance, 0 /* SETUP_FUNCTION */);\r\n            })\r\n                .then(asyncSetupResult => {\r\n                // retry when the setup() promise resolves.\r\n                // component may have been unmounted before resolve.\r\n                if (instance.isUnmounted ||\r\n                    suspense.isUnmounted ||\r\n                    suspense.pendingId !== instance.suspenseId) {\r\n                    return;\r\n                }\r\n                // retry from this component\r\n                instance.asyncResolved = true;\r\n                const { vnode } = instance;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(vnode);\r\n                }\r\n                handleSetupResult(instance, asyncSetupResult);\r\n                if (hydratedEl) {\r\n                    // vnode may have been replaced if an update happened before the\r\n                    // async dep is resolved.\r\n                    vnode.el = hydratedEl;\r\n                }\r\n                const placeholder = !hydratedEl && instance.subTree.el;\r\n                setupRenderEffect(instance, vnode, \r\n                // component may have been moved before resolve.\r\n                // if this is not a hydration, instance.subTree will be the comment\r\n                // placeholder.\r\n                parentNode(hydratedEl || instance.subTree.el), \r\n                // anchor will not be used if this is hydration, so only need to\r\n                // consider the comment placeholder case.\r\n                hydratedEl ? null : next(instance.subTree), suspense, isSVG, optimized);\r\n                if (placeholder) {\r\n                    remove(placeholder);\r\n                }\r\n                updateHOCHostEl(instance, vnode.el);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                // only decrease deps count if suspense is not already resolved\r\n                if (isInPendingSuspense && --suspense.deps === 0) {\r\n                    suspense.resolve();\r\n                }\r\n            });\r\n        },\r\n        unmount(parentSuspense, doRemove) {\r\n            suspense.isUnmounted = true;\r\n            if (suspense.activeBranch) {\r\n                unmount(suspense.activeBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n            if (suspense.pendingBranch) {\r\n                unmount(suspense.pendingBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n        }\r\n    };\r\n    return suspense;\r\n}\r\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, optimized, rendererInternals, hydrateNode) {\r\n    /* eslint-disable no-restricted-globals */\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, document.createElement('div'), null, isSVG, optimized, rendererInternals, true /* hydrating */));\r\n    // there are two possible scenarios for server-rendered suspense:\r\n    // - success: ssr content should be fully resolved\r\n    // - failure: ssr content should be the fallback branch.\r\n    // however, on the client we don't really know if it has failed or not\r\n    // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n    // need to construct a suspense boundary first\r\n    const result = hydrateNode(node, (suspense.pendingBranch = vnode.ssContent), parentComponent, suspense, optimized);\r\n    if (suspense.deps === 0) {\r\n        suspense.resolve();\r\n    }\r\n    return result;\r\n    /* eslint-enable no-restricted-globals */\r\n}\r\nfunction normalizeSuspenseChildren(vnode) {\r\n    const { shapeFlag, children } = vnode;\r\n    let content;\r\n    let fallback;\r\n    if (shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        content = normalizeSuspenseSlot(children.default);\r\n        fallback = normalizeSuspenseSlot(children.fallback);\r\n    }\r\n    else {\r\n        content = normalizeSuspenseSlot(children);\r\n        fallback = normalizeVNode(null);\r\n    }\r\n    return {\r\n        content,\r\n        fallback\r\n    };\r\n}\r\nfunction normalizeSuspenseSlot(s) {\r\n    if (isFunction(s)) {\r\n        s = s();\r\n    }\r\n    if (isArray(s)) {\r\n        const singleChild = filterSingleRoot(s);\r\n        if ((process.env.NODE_ENV !== 'production') && !singleChild) {\r\n            warn(`<Suspense> slots expect a single root node.`);\r\n        }\r\n        s = singleChild;\r\n    }\r\n    return normalizeVNode(s);\r\n}\r\nfunction queueEffectWithSuspense(fn, suspense) {\r\n    if (suspense && suspense.pendingBranch) {\r\n        if (isArray(fn)) {\r\n            suspense.effects.push(...fn);\r\n        }\r\n        else {\r\n            suspense.effects.push(fn);\r\n        }\r\n    }\r\n    else {\r\n        queuePostFlushCb(fn);\r\n    }\r\n}\r\nfunction setActiveBranch(suspense, branch) {\r\n    suspense.activeBranch = branch;\r\n    const { vnode, parentComponent } = suspense;\r\n    const el = (vnode.el = branch.el);\r\n    // in case suspense is the root node of a component,\r\n    // recursively update the HOC el\r\n    if (parentComponent && parentComponent.subTree === vnode) {\r\n        parentComponent.vnode.el = el;\r\n        updateHOCHostEl(parentComponent, el);\r\n    }\r\n}\n\nlet isRenderingCompiledSlot = 0;\r\nconst setCompiledSlotRendering = (n) => (isRenderingCompiledSlot += n);\r\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nfunction renderSlot(slots, name, props = {}, \r\n// this is not a user-facing function, so the fallback is always generated by\r\n// the compiler and guaranteed to be a function returning an array\r\nfallback) {\r\n    let slot = slots[name];\r\n    if ((process.env.NODE_ENV !== 'production') && slot && slot.length > 1) {\r\n        warn(`SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n            `function. You need to mark this component with $dynamic-slots in the ` +\r\n            `parent template.`);\r\n        slot = () => [];\r\n    }\r\n    // a compiled slot disables block tracking by default to avoid manual\r\n    // invocation interfering with template-based block tracking, but in\r\n    // `renderSlot` we can be sure that it's template-based so we can force\r\n    // enable it.\r\n    isRenderingCompiledSlot++;\r\n    openBlock();\r\n    const validSlotContent = slot && ensureValidVNode(slot(props));\r\n    const rendered = createBlock(Fragment, { key: props.key || `_${name}` }, validSlotContent || (fallback ? fallback() : []), validSlotContent && slots._ === 1 /* STABLE */\r\n        ? 64 /* STABLE_FRAGMENT */\r\n        : -2 /* BAIL */);\r\n    isRenderingCompiledSlot--;\r\n    return rendered;\r\n}\r\nfunction ensureValidVNode(vnodes) {\r\n    return vnodes.some(child => {\r\n        if (!isVNode(child))\r\n            return true;\r\n        if (child.type === Comment)\r\n            return false;\r\n        if (child.type === Fragment &&\r\n            !ensureValidVNode(child.children))\r\n            return false;\r\n        return true;\r\n    })\r\n        ? vnodes\r\n        : null;\r\n}\n\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private\r\n */\r\nfunction withCtx(fn, ctx = currentRenderingInstance) {\r\n    if (!ctx)\r\n        return fn;\r\n    const renderFnWithContext = (...args) => {\r\n        // If a user calls a compiled slot inside a template expression (#1745), it\r\n        // can mess up block tracking, so by default we need to push a null block to\r\n        // avoid that. This isn't necessary if rendering a compiled `<slot>`.\r\n        if (!isRenderingCompiledSlot) {\r\n            openBlock(true /* null block that disables tracking */);\r\n        }\r\n        const owner = currentRenderingInstance;\r\n        setCurrentRenderingInstance(ctx);\r\n        const res = fn(...args);\r\n        setCurrentRenderingInstance(owner);\r\n        if (!isRenderingCompiledSlot) {\r\n            closeBlock();\r\n        }\r\n        return res;\r\n    };\r\n    renderFnWithContext._c = true;\r\n    return renderFnWithContext;\r\n}\n\n// SFC scoped style ID management.\r\nlet currentScopeId = null;\r\nconst scopeIdStack = [];\r\n/**\r\n * @private\r\n */\r\nfunction pushScopeId(id) {\r\n    scopeIdStack.push((currentScopeId = id));\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction popScopeId() {\r\n    scopeIdStack.pop();\r\n    currentScopeId = scopeIdStack[scopeIdStack.length - 1] || null;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction withScopeId(id) {\r\n    return ((fn) => withCtx(function () {\r\n        pushScopeId(id);\r\n        const res = fn.apply(this, arguments);\r\n        popScopeId();\r\n        return res;\r\n    }));\r\n}\n\nfunction initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\r\nisSSR = false) {\r\n    const props = {};\r\n    const attrs = {};\r\n    def(attrs, InternalObjectKey, 1);\r\n    setFullProps(instance, rawProps, props, attrs);\r\n    // validation\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(props, instance);\r\n    }\r\n    if (isStateful) {\r\n        // stateful\r\n        instance.props = isSSR ? props : shallowReactive(props);\r\n    }\r\n    else {\r\n        if (!instance.type.props) {\r\n            // functional w/ optional props, props === attrs\r\n            instance.props = attrs;\r\n        }\r\n        else {\r\n            // functional w/ declared props\r\n            instance.props = props;\r\n        }\r\n    }\r\n    instance.attrs = attrs;\r\n}\r\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\r\n    const { props, attrs, vnode: { patchFlag } } = instance;\r\n    const rawCurrentProps = toRaw(props);\r\n    const [options] = instance.propsOptions;\r\n    if (\r\n    // always force full diff in dev\r\n    // - #1942 if hmr is enabled with sfc component\r\n    // - vite#872 non-sfc component used by sfc component\r\n    !((process.env.NODE_ENV !== 'production') &&\r\n        (instance.type.__hmrId ||\r\n            (instance.parent && instance.parent.type.__hmrId))) &&\r\n        (optimized || patchFlag > 0) &&\r\n        !(patchFlag & 16 /* FULL_PROPS */)) {\r\n        if (patchFlag & 8 /* PROPS */) {\r\n            // Compiler-generated props & no keys change, just set the updated\r\n            // the props.\r\n            const propsToUpdate = instance.vnode.dynamicProps;\r\n            for (let i = 0; i < propsToUpdate.length; i++) {\r\n                const key = propsToUpdate[i];\r\n                // PROPS flag guarantees rawProps to be non-null\r\n                const value = rawProps[key];\r\n                if (options) {\r\n                    // attr / props separation was done on init and will be consistent\r\n                    // in this code path, so just check if attrs have it.\r\n                    if (hasOwn(attrs, key)) {\r\n                        attrs[key] = value;\r\n                    }\r\n                    else {\r\n                        const camelizedKey = camelize(key);\r\n                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    attrs[key] = value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // full props update.\r\n        setFullProps(instance, rawProps, props, attrs);\r\n        // in case of dynamic props, check if we need to delete keys from\r\n        // the props object\r\n        let kebabKey;\r\n        for (const key in rawCurrentProps) {\r\n            if (!rawProps ||\r\n                // for camelCase\r\n                (!hasOwn(rawProps, key) &&\r\n                    // it's possible the original props was passed in as kebab-case\r\n                    // and converted to camelCase (#955)\r\n                    ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))) {\r\n                if (options) {\r\n                    if (rawPrevProps &&\r\n                        // for camelCase\r\n                        (rawPrevProps[key] !== undefined ||\r\n                            // for kebab-case\r\n                            rawPrevProps[kebabKey] !== undefined)) {\r\n                        props[key] = resolvePropValue(options, rawProps || EMPTY_OBJ, key, undefined, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    delete props[key];\r\n                }\r\n            }\r\n        }\r\n        // in the case of functional component w/o props declaration, props and\r\n        // attrs point to the same object so it should already have been updated.\r\n        if (attrs !== rawCurrentProps) {\r\n            for (const key in attrs) {\r\n                if (!rawProps || !hasOwn(rawProps, key)) {\r\n                    delete attrs[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // trigger updates for $attrs in case it's used in component slots\r\n    trigger(instance, \"set\" /* SET */, '$attrs');\r\n    if ((process.env.NODE_ENV !== 'production') && rawProps) {\r\n        validateProps(props, instance);\r\n    }\r\n}\r\nfunction setFullProps(instance, rawProps, props, attrs) {\r\n    const [options, needCastKeys] = instance.propsOptions;\r\n    if (rawProps) {\r\n        for (const key in rawProps) {\r\n            const value = rawProps[key];\r\n            // key, ref are reserved and never passed down\r\n            if (isReservedProp(key)) {\r\n                continue;\r\n            }\r\n            // prop option names are camelized during normalization, so to support\r\n            // kebab -> camel conversion here we need to camelize the key.\r\n            let camelKey;\r\n            if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n                props[camelKey] = value;\r\n            }\r\n            else if (!isEmitListener(instance.emitsOptions, key)) {\r\n                // Any non-declared (either as a prop or an emitted event) props are put\r\n                // into a separate `attrs` object for spreading. Make sure to preserve\r\n                // original key casing\r\n                attrs[key] = value;\r\n            }\r\n        }\r\n    }\r\n    if (needCastKeys) {\r\n        const rawCurrentProps = toRaw(props);\r\n        for (let i = 0; i < needCastKeys.length; i++) {\r\n            const key = needCastKeys[i];\r\n            props[key] = resolvePropValue(options, rawCurrentProps, key, rawCurrentProps[key], instance);\r\n        }\r\n    }\r\n}\r\nfunction resolvePropValue(options, props, key, value, instance) {\r\n    const opt = options[key];\r\n    if (opt != null) {\r\n        const hasDefault = hasOwn(opt, 'default');\r\n        // default values\r\n        if (hasDefault && value === undefined) {\r\n            const defaultValue = opt.default;\r\n            if (opt.type !== Function && isFunction(defaultValue)) {\r\n                setCurrentInstance(instance);\r\n                value = defaultValue(props);\r\n                setCurrentInstance(null);\r\n            }\r\n            else {\r\n                value = defaultValue;\r\n            }\r\n        }\r\n        // boolean casting\r\n        if (opt[0 /* shouldCast */]) {\r\n            if (!hasOwn(props, key) && !hasDefault) {\r\n                value = false;\r\n            }\r\n            else if (opt[1 /* shouldCastTrue */] &&\r\n                (value === '' || value === hyphenate(key))) {\r\n                value = true;\r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\r\n    if (!appContext.deopt && comp.__props) {\r\n        return comp.__props;\r\n    }\r\n    const raw = comp.props;\r\n    const normalized = {};\r\n    const needCastKeys = [];\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendProps = (raw) => {\r\n            hasExtends = true;\r\n            const [props, keys] = normalizePropsOptions(raw, appContext, true);\r\n            extend(normalized, props);\r\n            if (keys)\r\n                needCastKeys.push(...keys);\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendProps);\r\n        }\r\n        if (comp.extends) {\r\n            extendProps(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendProps);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__props = EMPTY_ARR);\r\n    }\r\n    if (isArray(raw)) {\r\n        for (let i = 0; i < raw.length; i++) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isString(raw[i])) {\r\n                warn(`props must be strings when using array syntax.`, raw[i]);\r\n            }\r\n            const normalizedKey = camelize(raw[i]);\r\n            if (validatePropName(normalizedKey)) {\r\n                normalized[normalizedKey] = EMPTY_OBJ;\r\n            }\r\n        }\r\n    }\r\n    else if (raw) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isObject(raw)) {\r\n            warn(`invalid props options`, raw);\r\n        }\r\n        for (const key in raw) {\r\n            const normalizedKey = camelize(key);\r\n            if (validatePropName(normalizedKey)) {\r\n                const opt = raw[key];\r\n                const prop = (normalized[normalizedKey] =\r\n                    isArray(opt) || isFunction(opt) ? { type: opt } : opt);\r\n                if (prop) {\r\n                    const booleanIndex = getTypeIndex(Boolean, prop.type);\r\n                    const stringIndex = getTypeIndex(String, prop.type);\r\n                    prop[0 /* shouldCast */] = booleanIndex > -1;\r\n                    prop[1 /* shouldCastTrue */] =\r\n                        stringIndex < 0 || booleanIndex < stringIndex;\r\n                    // if the prop needs boolean casting or default value\r\n                    if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n                        needCastKeys.push(normalizedKey);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return (comp.__props = [normalized, needCastKeys]);\r\n}\r\nfunction validatePropName(key) {\r\n    if (key[0] !== '$') {\r\n        return true;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid prop name: \"${key}\" is a reserved property.`);\r\n    }\r\n    return false;\r\n}\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor) {\r\n    const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\r\n    return match ? match[1] : '';\r\n}\r\nfunction isSameType(a, b) {\r\n    return getType(a) === getType(b);\r\n}\r\nfunction getTypeIndex(type, expectedTypes) {\r\n    if (isArray(expectedTypes)) {\r\n        for (let i = 0, len = expectedTypes.length; i < len; i++) {\r\n            if (isSameType(expectedTypes[i], type)) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(expectedTypes)) {\r\n        return isSameType(expectedTypes, type) ? 0 : -1;\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(props, instance) {\r\n    const rawValues = toRaw(props);\r\n    const options = instance.propsOptions[0];\r\n    for (const key in options) {\r\n        let opt = options[key];\r\n        if (opt == null)\r\n            continue;\r\n        validateProp(key, rawValues[key], opt, !hasOwn(rawValues, key));\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(name, value, prop, isAbsent) {\r\n    const { type, required, validator } = prop;\r\n    // required!\r\n    if (required && isAbsent) {\r\n        warn('Missing required prop: \"' + name + '\"');\r\n        return;\r\n    }\r\n    // missing but optional\r\n    if (value == null && !prop.required) {\r\n        return;\r\n    }\r\n    // type check\r\n    if (type != null && type !== true) {\r\n        let isValid = false;\r\n        const types = isArray(type) ? type : [type];\r\n        const expectedTypes = [];\r\n        // value is valid as long as one of the specified types match\r\n        for (let i = 0; i < types.length && !isValid; i++) {\r\n            const { valid, expectedType } = assertType(value, types[i]);\r\n            expectedTypes.push(expectedType || '');\r\n            isValid = valid;\r\n        }\r\n        if (!isValid) {\r\n            warn(getInvalidTypeMessage(name, value, expectedTypes));\r\n            return;\r\n        }\r\n    }\r\n    // custom validator\r\n    if (validator && !validator(value)) {\r\n        warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\r\n    }\r\n}\r\nconst isSimpleType = /*#__PURE__*/ makeMap('String,Number,Boolean,Function,Symbol');\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value, type) {\r\n    let valid;\r\n    const expectedType = getType(type);\r\n    if (isSimpleType(expectedType)) {\r\n        const t = typeof value;\r\n        valid = t === expectedType.toLowerCase();\r\n        // for primitive wrapper objects\r\n        if (!valid && t === 'object') {\r\n            valid = value instanceof type;\r\n        }\r\n    }\r\n    else if (expectedType === 'Object') {\r\n        valid = isObject(value);\r\n    }\r\n    else if (expectedType === 'Array') {\r\n        valid = isArray(value);\r\n    }\r\n    else {\r\n        valid = value instanceof type;\r\n    }\r\n    return {\r\n        valid,\r\n        expectedType\r\n    };\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\r\n    let message = `Invalid prop: type check failed for prop \"${name}\".` +\r\n        ` Expected ${expectedTypes.map(capitalize).join(', ')}`;\r\n    const expectedType = expectedTypes[0];\r\n    const receivedType = toRawType(value);\r\n    const expectedValue = styleValue(value, expectedType);\r\n    const receivedValue = styleValue(value, receivedType);\r\n    // check if we need to specify expected value\r\n    if (expectedTypes.length === 1 &&\r\n        isExplicable(expectedType) &&\r\n        !isBoolean(expectedType, receivedType)) {\r\n        message += ` with value ${expectedValue}`;\r\n    }\r\n    message += `, got ${receivedType} `;\r\n    // check if we need to specify received value\r\n    if (isExplicable(receivedType)) {\r\n        message += `with value ${receivedValue}.`;\r\n    }\r\n    return message;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value, type) {\r\n    if (type === 'String') {\r\n        return `\"${value}\"`;\r\n    }\r\n    else if (type === 'Number') {\r\n        return `${Number(value)}`;\r\n    }\r\n    else {\r\n        return `${value}`;\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type) {\r\n    const explicitTypes = ['string', 'number', 'boolean'];\r\n    return explicitTypes.some(elem => type.toLowerCase() === elem);\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args) {\r\n    return args.some(elem => elem.toLowerCase() === 'boolean');\r\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\r\n    if (target) {\r\n        const hooks = target[type] || (target[type] = []);\r\n        // cache the error handling wrapper for injected hooks so the same hook\r\n        // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n        // handling\".\r\n        const wrappedHook = hook.__weh ||\r\n            (hook.__weh = (...args) => {\r\n                if (target.isUnmounted) {\r\n                    return;\r\n                }\r\n                // disable tracking inside all lifecycle hooks\r\n                // since they can potentially be called inside effects.\r\n                pauseTracking();\r\n                // Set currentInstance during hook invocation.\r\n                // This assumes the hook does not synchronously trigger other hooks, which\r\n                // can only be false when the user does something really funky.\r\n                setCurrentInstance(target);\r\n                const res = callWithAsyncErrorHandling(hook, target, type, args);\r\n                setCurrentInstance(null);\r\n                resetTracking();\r\n                return res;\r\n            });\r\n        if (prepend) {\r\n            hooks.unshift(wrappedHook);\r\n        }\r\n        else {\r\n            hooks.push(wrappedHook);\r\n        }\r\n        return wrappedHook;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''));\r\n        warn(`${apiName} is called when there is no active component instance to be ` +\r\n            `associated with. ` +\r\n            `Lifecycle injection APIs can only be used during execution of setup().` +\r\n            ( ` If you are using async setup(), make sure to register lifecycle ` +\r\n                    `hooks before the first await statement.`\r\n                ));\r\n    }\r\n}\r\nconst createHook = (lifecycle) => (hook, target = currentInstance) => \r\n// post-create lifecycle registrations are noops during SSR\r\n!isInSSRComponentSetup && injectHook(lifecycle, hook, target);\r\nconst onBeforeMount = createHook(\"bm\" /* BEFORE_MOUNT */);\r\nconst onMounted = createHook(\"m\" /* MOUNTED */);\r\nconst onBeforeUpdate = createHook(\"bu\" /* BEFORE_UPDATE */);\r\nconst onUpdated = createHook(\"u\" /* UPDATED */);\r\nconst onBeforeUnmount = createHook(\"bum\" /* BEFORE_UNMOUNT */);\r\nconst onUnmounted = createHook(\"um\" /* UNMOUNTED */);\r\nconst onRenderTriggered = createHook(\"rtg\" /* RENDER_TRIGGERED */);\r\nconst onRenderTracked = createHook(\"rtc\" /* RENDER_TRACKED */);\r\nconst onErrorCaptured = (hook, target = currentInstance) => {\r\n    injectHook(\"ec\" /* ERROR_CAPTURED */, hook, target);\r\n};\n\n// Simple effect.\r\nfunction watchEffect(effect, options) {\r\n    return doWatch(effect, null, options);\r\n}\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {};\r\n// implementation\r\nfunction watch(source, cb, options) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(cb)) {\r\n        warn(`\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n            `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n            `supports \\`watch(source, cb, options?) signature.`);\r\n    }\r\n    return doWatch(source, cb, options);\r\n}\r\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ, instance = currentInstance) {\r\n    if ((process.env.NODE_ENV !== 'production') && !cb) {\r\n        if (immediate !== undefined) {\r\n            warn(`watch() \"immediate\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n        if (deep !== undefined) {\r\n            warn(`watch() \"deep\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n    }\r\n    const warnInvalidSource = (s) => {\r\n        warn(`Invalid watch source: `, s, `A watch source can only be a getter/effect function, a ref, ` +\r\n            `a reactive object, or an array of these types.`);\r\n    };\r\n    let getter;\r\n    let forceTrigger = false;\r\n    if (isRef(source)) {\r\n        getter = () => source.value;\r\n        forceTrigger = !!source._shallow;\r\n    }\r\n    else if (isReactive(source)) {\r\n        getter = () => source;\r\n        deep = true;\r\n    }\r\n    else if (isArray(source)) {\r\n        getter = () => source.map(s => {\r\n            if (isRef(s)) {\r\n                return s.value;\r\n            }\r\n            else if (isReactive(s)) {\r\n                return traverse(s);\r\n            }\r\n            else if (isFunction(s)) {\r\n                return callWithErrorHandling(s, instance, 2 /* WATCH_GETTER */);\r\n            }\r\n            else {\r\n                (process.env.NODE_ENV !== 'production') && warnInvalidSource(s);\r\n            }\r\n        });\r\n    }\r\n    else if (isFunction(source)) {\r\n        if (cb) {\r\n            // getter with cb\r\n            getter = () => callWithErrorHandling(source, instance, 2 /* WATCH_GETTER */);\r\n        }\r\n        else {\r\n            // no cb -> simple effect\r\n            getter = () => {\r\n                if (instance && instance.isUnmounted) {\r\n                    return;\r\n                }\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                return callWithErrorHandling(source, instance, 3 /* WATCH_CALLBACK */, [onInvalidate]);\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        getter = NOOP;\r\n        (process.env.NODE_ENV !== 'production') && warnInvalidSource(source);\r\n    }\r\n    if (cb && deep) {\r\n        const baseGetter = getter;\r\n        getter = () => traverse(baseGetter());\r\n    }\r\n    let cleanup;\r\n    const onInvalidate = (fn) => {\r\n        cleanup = runner.options.onStop = () => {\r\n            callWithErrorHandling(fn, instance, 4 /* WATCH_CLEANUP */);\r\n        };\r\n    };\r\n    let oldValue = isArray(source) ? [] : INITIAL_WATCHER_VALUE;\r\n    const job = () => {\r\n        if (!runner.active) {\r\n            return;\r\n        }\r\n        if (cb) {\r\n            // watch(source, cb)\r\n            const newValue = runner();\r\n            if (deep || forceTrigger || hasChanged(newValue, oldValue)) {\r\n                // cleanup before running cb again\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [\r\n                    newValue,\r\n                    // pass undefined as the old value when it's changed for the first time\r\n                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n                    onInvalidate\r\n                ]);\r\n                oldValue = newValue;\r\n            }\r\n        }\r\n        else {\r\n            // watchEffect\r\n            runner();\r\n        }\r\n    };\r\n    // important: mark the job as a watcher callback so that scheduler knows\r\n    // it is allowed to self-trigger (#1727)\r\n    job.allowRecurse = !!cb;\r\n    let scheduler;\r\n    if (flush === 'sync') {\r\n        scheduler = job;\r\n    }\r\n    else if (flush === 'post') {\r\n        scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\r\n    }\r\n    else {\r\n        // default: 'pre'\r\n        scheduler = () => {\r\n            if (!instance || instance.isMounted) {\r\n                queuePreFlushCb(job);\r\n            }\r\n            else {\r\n                // with 'pre' option, the first call must happen before\r\n                // the component is mounted so it is called synchronously.\r\n                job();\r\n            }\r\n        };\r\n    }\r\n    const runner = effect(getter, {\r\n        lazy: true,\r\n        onTrack,\r\n        onTrigger,\r\n        scheduler\r\n    });\r\n    recordInstanceBoundEffect(runner, instance);\r\n    // initial run\r\n    if (cb) {\r\n        if (immediate) {\r\n            job();\r\n        }\r\n        else {\r\n            oldValue = runner();\r\n        }\r\n    }\r\n    else if (flush === 'post') {\r\n        queuePostRenderEffect(runner, instance && instance.suspense);\r\n    }\r\n    else {\r\n        runner();\r\n    }\r\n    return () => {\r\n        stop(runner);\r\n        if (instance) {\r\n            remove(instance.effects, runner);\r\n        }\r\n    };\r\n}\r\n// this.$watch\r\nfunction instanceWatch(source, cb, options) {\r\n    const publicThis = this.proxy;\r\n    const getter = isString(source)\r\n        ? () => publicThis[source]\r\n        : source.bind(publicThis);\r\n    return doWatch(getter, cb.bind(publicThis), options, this);\r\n}\r\nfunction traverse(value, seen = new Set()) {\r\n    if (!isObject(value) || seen.has(value)) {\r\n        return value;\r\n    }\r\n    seen.add(value);\r\n    if (isRef(value)) {\r\n        traverse(value.value, seen);\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            traverse(value[i], seen);\r\n        }\r\n    }\r\n    else if (isSet(value) || isMap(value)) {\r\n        value.forEach((v) => {\r\n            traverse(v, seen);\r\n        });\r\n    }\r\n    else {\r\n        for (const key in value) {\r\n            traverse(value[key], seen);\r\n        }\r\n    }\r\n    return value;\r\n}\n\nfunction useTransitionState() {\r\n    const state = {\r\n        isMounted: false,\r\n        isLeaving: false,\r\n        isUnmounting: false,\r\n        leavingVNodes: new Map()\r\n    };\r\n    onMounted(() => {\r\n        state.isMounted = true;\r\n    });\r\n    onBeforeUnmount(() => {\r\n        state.isUnmounting = true;\r\n    });\r\n    return state;\r\n}\r\nconst TransitionHookValidator = [Function, Array];\r\nconst BaseTransitionImpl = {\r\n    name: `BaseTransition`,\r\n    props: {\r\n        mode: String,\r\n        appear: Boolean,\r\n        persisted: Boolean,\r\n        // enter\r\n        onBeforeEnter: TransitionHookValidator,\r\n        onEnter: TransitionHookValidator,\r\n        onAfterEnter: TransitionHookValidator,\r\n        onEnterCancelled: TransitionHookValidator,\r\n        // leave\r\n        onBeforeLeave: TransitionHookValidator,\r\n        onLeave: TransitionHookValidator,\r\n        onAfterLeave: TransitionHookValidator,\r\n        onLeaveCancelled: TransitionHookValidator,\r\n        // appear\r\n        onBeforeAppear: TransitionHookValidator,\r\n        onAppear: TransitionHookValidator,\r\n        onAfterAppear: TransitionHookValidator,\r\n        onAppearCancelled: TransitionHookValidator\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevTransitionKey;\r\n        return () => {\r\n            const children = slots.default && getTransitionRawChildren(slots.default(), true);\r\n            if (!children || !children.length) {\r\n                return;\r\n            }\r\n            // warn multiple elements\r\n            if ((process.env.NODE_ENV !== 'production') && children.length > 1) {\r\n                warn('<transition> can only be used on a single element or component. Use ' +\r\n                    '<transition-group> for lists.');\r\n            }\r\n            // there's no need to track reactivity for these props so use the raw\r\n            // props for a bit better perf\r\n            const rawProps = toRaw(props);\r\n            const { mode } = rawProps;\r\n            // check mode\r\n            if ((process.env.NODE_ENV !== 'production') && mode && !['in-out', 'out-in', 'default'].includes(mode)) {\r\n                warn(`invalid <transition> mode: ${mode}`);\r\n            }\r\n            // at this point children has a guaranteed length of 1.\r\n            const child = children[0];\r\n            if (state.isLeaving) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            // in the case of <transition><keep-alive/></transition>, we need to\r\n            // compare the type of the kept-alive children.\r\n            const innerChild = getKeepAliveChild(child);\r\n            if (!innerChild) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            const enterHooks = resolveTransitionHooks(innerChild, rawProps, state, instance);\r\n            setTransitionHooks(innerChild, enterHooks);\r\n            const oldChild = instance.subTree;\r\n            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\r\n            let transitionKeyChanged = false;\r\n            const { getTransitionKey } = innerChild.type;\r\n            if (getTransitionKey) {\r\n                const key = getTransitionKey();\r\n                if (prevTransitionKey === undefined) {\r\n                    prevTransitionKey = key;\r\n                }\r\n                else if (key !== prevTransitionKey) {\r\n                    prevTransitionKey = key;\r\n                    transitionKeyChanged = true;\r\n                }\r\n            }\r\n            // handle mode\r\n            if (oldInnerChild &&\r\n                oldInnerChild.type !== Comment &&\r\n                (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\r\n                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);\r\n                // update old tree's hooks in case of dynamic transition\r\n                setTransitionHooks(oldInnerChild, leavingHooks);\r\n                // switching between different views\r\n                if (mode === 'out-in') {\r\n                    state.isLeaving = true;\r\n                    // return placeholder node and queue update when leave finishes\r\n                    leavingHooks.afterLeave = () => {\r\n                        state.isLeaving = false;\r\n                        instance.update();\r\n                    };\r\n                    return emptyPlaceholder(child);\r\n                }\r\n                else if (mode === 'in-out') {\r\n                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\r\n                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\r\n                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\r\n                        // early removal callback\r\n                        el._leaveCb = () => {\r\n                            earlyRemove();\r\n                            el._leaveCb = undefined;\r\n                            delete enterHooks.delayedLeave;\r\n                        };\r\n                        enterHooks.delayedLeave = delayedLeave;\r\n                    };\r\n                }\r\n            }\r\n            return child;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst BaseTransition = BaseTransitionImpl;\r\nfunction getLeavingNodesForType(state, vnode) {\r\n    const { leavingVNodes } = state;\r\n    let leavingVNodesCache = leavingVNodes.get(vnode.type);\r\n    if (!leavingVNodesCache) {\r\n        leavingVNodesCache = Object.create(null);\r\n        leavingVNodes.set(vnode.type, leavingVNodesCache);\r\n    }\r\n    return leavingVNodesCache;\r\n}\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nfunction resolveTransitionHooks(vnode, props, state, instance) {\r\n    const { appear, mode, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled, onBeforeAppear, onAppear, onAfterAppear, onAppearCancelled } = props;\r\n    const key = String(vnode.key);\r\n    const leavingVNodesCache = getLeavingNodesForType(state, vnode);\r\n    const callHook = (hook, args) => {\r\n        hook &&\r\n            callWithAsyncErrorHandling(hook, instance, 9 /* TRANSITION_HOOK */, args);\r\n    };\r\n    const hooks = {\r\n        mode,\r\n        persisted,\r\n        beforeEnter(el) {\r\n            let hook = onBeforeEnter;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onBeforeAppear || onBeforeEnter;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            // for same element (v-show)\r\n            if (el._leaveCb) {\r\n                el._leaveCb(true /* cancelled */);\r\n            }\r\n            // for toggled element with same key (v-if)\r\n            const leavingVNode = leavingVNodesCache[key];\r\n            if (leavingVNode &&\r\n                isSameVNodeType(vnode, leavingVNode) &&\r\n                leavingVNode.el._leaveCb) {\r\n                // force early removal (not cancelled)\r\n                leavingVNode.el._leaveCb();\r\n            }\r\n            callHook(hook, [el]);\r\n        },\r\n        enter(el) {\r\n            let hook = onEnter;\r\n            let afterHook = onAfterEnter;\r\n            let cancelHook = onEnterCancelled;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onAppear || onEnter;\r\n                    afterHook = onAfterAppear || onAfterEnter;\r\n                    cancelHook = onAppearCancelled || onEnterCancelled;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            let called = false;\r\n            const done = (el._enterCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                if (cancelled) {\r\n                    callHook(cancelHook, [el]);\r\n                }\r\n                else {\r\n                    callHook(afterHook, [el]);\r\n                }\r\n                if (hooks.delayedLeave) {\r\n                    hooks.delayedLeave();\r\n                }\r\n                el._enterCb = undefined;\r\n            });\r\n            if (hook) {\r\n                hook(el, done);\r\n                if (hook.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        leave(el, remove) {\r\n            const key = String(vnode.key);\r\n            if (el._enterCb) {\r\n                el._enterCb(true /* cancelled */);\r\n            }\r\n            if (state.isUnmounting) {\r\n                return remove();\r\n            }\r\n            callHook(onBeforeLeave, [el]);\r\n            let called = false;\r\n            const done = (el._leaveCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                remove();\r\n                if (cancelled) {\r\n                    callHook(onLeaveCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterLeave, [el]);\r\n                }\r\n                el._leaveCb = undefined;\r\n                if (leavingVNodesCache[key] === vnode) {\r\n                    delete leavingVNodesCache[key];\r\n                }\r\n            });\r\n            leavingVNodesCache[key] = vnode;\r\n            if (onLeave) {\r\n                onLeave(el, done);\r\n                if (onLeave.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        clone(vnode) {\r\n            return resolveTransitionHooks(vnode, props, state, instance);\r\n        }\r\n    };\r\n    return hooks;\r\n}\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode) {\r\n    if (isKeepAlive(vnode)) {\r\n        vnode = cloneVNode(vnode);\r\n        vnode.children = null;\r\n        return vnode;\r\n    }\r\n}\r\nfunction getKeepAliveChild(vnode) {\r\n    return isKeepAlive(vnode)\r\n        ? vnode.children\r\n            ? vnode.children[0]\r\n            : undefined\r\n        : vnode;\r\n}\r\nfunction setTransitionHooks(vnode, hooks) {\r\n    if (vnode.shapeFlag & 6 /* COMPONENT */ && vnode.component) {\r\n        setTransitionHooks(vnode.component.subTree, hooks);\r\n    }\r\n    else if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        vnode.ssContent.transition = hooks.clone(vnode.ssContent);\r\n        vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\r\n    }\r\n    else {\r\n        vnode.transition = hooks;\r\n    }\r\n}\r\nfunction getTransitionRawChildren(children, keepComment = false) {\r\n    let ret = [];\r\n    let keyedFragmentCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // handle fragment children case, e.g. v-for\r\n        if (child.type === Fragment) {\r\n            if (child.patchFlag & 128 /* KEYED_FRAGMENT */)\r\n                keyedFragmentCount++;\r\n            ret = ret.concat(getTransitionRawChildren(child.children, keepComment));\r\n        }\r\n        // comment placeholders should be skipped, e.g. v-if\r\n        else if (keepComment || child.type !== Comment) {\r\n            ret.push(child);\r\n        }\r\n    }\r\n    // #1126 if a transition children list contains multiple sub fragments, these\r\n    // fragments will be merged into a flat children array. Since each v-for\r\n    // fragment may contain different static bindings inside, we need to de-op\r\n    // these children to force full diffs to ensure correct behavior.\r\n    if (keyedFragmentCount > 1) {\r\n        for (let i = 0; i < ret.length; i++) {\r\n            ret[i].patchFlag = -2 /* BAIL */;\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\r\nconst KeepAliveImpl = {\r\n    name: `KeepAlive`,\r\n    // Marker for special handling inside the renderer. We are not using a ===\r\n    // check directly on KeepAlive in the renderer, because importing it directly\r\n    // would prevent it from being tree-shaken.\r\n    __isKeepAlive: true,\r\n    inheritRef: true,\r\n    props: {\r\n        include: [String, RegExp, Array],\r\n        exclude: [String, RegExp, Array],\r\n        max: [String, Number]\r\n    },\r\n    setup(props, { slots }) {\r\n        const cache = new Map();\r\n        const keys = new Set();\r\n        let current = null;\r\n        const instance = getCurrentInstance();\r\n        const parentSuspense = instance.suspense;\r\n        // KeepAlive communicates with the instantiated renderer via the\r\n        // ctx where the renderer passes in its internals,\r\n        // and the KeepAlive instance exposes activate/deactivate implementations.\r\n        // The whole point of this is to avoid importing KeepAlive directly in the\r\n        // renderer to facilitate tree-shaking.\r\n        const sharedContext = instance.ctx;\r\n        const { renderer: { p: patch, m: move, um: _unmount, o: { createElement } } } = sharedContext;\r\n        const storageContainer = createElement('div');\r\n        sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n            const instance = vnode.component;\r\n            move(vnode, container, anchor, 0 /* ENTER */, parentSuspense);\r\n            // in case props have changed\r\n            patch(instance.vnode, vnode, container, anchor, instance, parentSuspense, isSVG, optimized);\r\n            queuePostRenderEffect(() => {\r\n                instance.isDeactivated = false;\r\n                if (instance.a) {\r\n                    invokeArrayFns(instance.a);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n            }, parentSuspense);\r\n        };\r\n        sharedContext.deactivate = (vnode) => {\r\n            const instance = vnode.component;\r\n            move(vnode, storageContainer, null, 1 /* LEAVE */, parentSuspense);\r\n            queuePostRenderEffect(() => {\r\n                if (instance.da) {\r\n                    invokeArrayFns(instance.da);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n                instance.isDeactivated = true;\r\n            }, parentSuspense);\r\n        };\r\n        function unmount(vnode) {\r\n            // reset the shapeFlag so it can be properly unmounted\r\n            resetShapeFlag(vnode);\r\n            _unmount(vnode, instance, parentSuspense);\r\n        }\r\n        function pruneCache(filter) {\r\n            cache.forEach((vnode, key) => {\r\n                const name = getComponentName(vnode.type);\r\n                if (name && (!filter || !filter(name))) {\r\n                    pruneCacheEntry(key);\r\n                }\r\n            });\r\n        }\r\n        function pruneCacheEntry(key) {\r\n            const cached = cache.get(key);\r\n            if (!current || cached.type !== current.type) {\r\n                unmount(cached);\r\n            }\r\n            else if (current) {\r\n                // current active instance should no longer be kept-alive.\r\n                // we can't unmount it now but it might be later, so reset its flag now.\r\n                resetShapeFlag(current);\r\n            }\r\n            cache.delete(key);\r\n            keys.delete(key);\r\n        }\r\n        // prune cache on include/exclude prop change\r\n        watch(() => [props.include, props.exclude], ([include, exclude]) => {\r\n            include && pruneCache(name => matches(include, name));\r\n            exclude && pruneCache(name => !matches(exclude, name));\r\n        }, \r\n        // prune post-render after `current` has been updated\r\n        { flush: 'post', deep: true });\r\n        // cache sub tree after render\r\n        let pendingCacheKey = null;\r\n        const cacheSubtree = () => {\r\n            // fix #1621, the pendingCacheKey could be 0\r\n            if (pendingCacheKey != null) {\r\n                cache.set(pendingCacheKey, getInnerChild(instance.subTree));\r\n            }\r\n        };\r\n        onMounted(cacheSubtree);\r\n        onUpdated(cacheSubtree);\r\n        onBeforeUnmount(() => {\r\n            cache.forEach(cached => {\r\n                const { subTree, suspense } = instance;\r\n                const vnode = getInnerChild(subTree);\r\n                if (cached.type === vnode.type) {\r\n                    // current instance will be unmounted as part of keep-alive's unmount\r\n                    resetShapeFlag(vnode);\r\n                    // but invoke its deactivated hook here\r\n                    const da = vnode.component.da;\r\n                    da && queuePostRenderEffect(da, suspense);\r\n                    return;\r\n                }\r\n                unmount(cached);\r\n            });\r\n        });\r\n        return () => {\r\n            pendingCacheKey = null;\r\n            if (!slots.default) {\r\n                return null;\r\n            }\r\n            const children = slots.default();\r\n            const rawVNode = children[0];\r\n            if (children.length > 1) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`KeepAlive should contain exactly one component child.`);\r\n                }\r\n                current = null;\r\n                return children;\r\n            }\r\n            else if (!isVNode(rawVNode) ||\r\n                (!(rawVNode.shapeFlag & 4 /* STATEFUL_COMPONENT */) &&\r\n                    !(rawVNode.shapeFlag & 128 /* SUSPENSE */))) {\r\n                current = null;\r\n                return rawVNode;\r\n            }\r\n            let vnode = getInnerChild(rawVNode);\r\n            const comp = vnode.type;\r\n            const name = getComponentName(comp);\r\n            const { include, exclude, max } = props;\r\n            if ((include && (!name || !matches(include, name))) ||\r\n                (exclude && name && matches(exclude, name))) {\r\n                current = vnode;\r\n                return rawVNode;\r\n            }\r\n            const key = vnode.key == null ? comp : vnode.key;\r\n            const cachedVNode = cache.get(key);\r\n            // clone vnode if it's reused because we are going to mutate it\r\n            if (vnode.el) {\r\n                vnode = cloneVNode(vnode);\r\n                if (rawVNode.shapeFlag & 128 /* SUSPENSE */) {\r\n                    rawVNode.ssContent = vnode;\r\n                }\r\n            }\r\n            // #1513 it's possible for the returned vnode to be cloned due to attr\r\n            // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n            // that is mounted. Instead of caching it directly, we store the pending\r\n            // key and cache `instance.subTree` (the normalized vnode) in\r\n            // beforeMount/beforeUpdate hooks.\r\n            pendingCacheKey = key;\r\n            if (cachedVNode) {\r\n                // copy over mounted state\r\n                vnode.el = cachedVNode.el;\r\n                vnode.component = cachedVNode.component;\r\n                if (vnode.transition) {\r\n                    // recursively update transition hooks on subTree\r\n                    setTransitionHooks(vnode, vnode.transition);\r\n                }\r\n                // avoid vnode being mounted as fresh\r\n                vnode.shapeFlag |= 512 /* COMPONENT_KEPT_ALIVE */;\r\n                // make this key the freshest\r\n                keys.delete(key);\r\n                keys.add(key);\r\n            }\r\n            else {\r\n                keys.add(key);\r\n                // prune oldest entry\r\n                if (max && keys.size > parseInt(max, 10)) {\r\n                    pruneCacheEntry(keys.values().next().value);\r\n                }\r\n            }\r\n            // avoid vnode being unmounted\r\n            vnode.shapeFlag |= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n            current = vnode;\r\n            return rawVNode;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst KeepAlive = KeepAliveImpl;\r\nfunction matches(pattern, name) {\r\n    if (isArray(pattern)) {\r\n        return pattern.some((p) => matches(p, name));\r\n    }\r\n    else if (isString(pattern)) {\r\n        return pattern.split(',').indexOf(name) > -1;\r\n    }\r\n    else if (pattern.test) {\r\n        return pattern.test(name);\r\n    }\r\n    /* istanbul ignore next */\r\n    return false;\r\n}\r\nfunction onActivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"a\" /* ACTIVATED */, target);\r\n}\r\nfunction onDeactivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"da\" /* DEACTIVATED */, target);\r\n}\r\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\r\n    // cache the deactivate branch check wrapper for injected hooks so the same\r\n    // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n    // deactivation check\".\r\n    const wrappedHook = hook.__wdc ||\r\n        (hook.__wdc = () => {\r\n            // only fire the hook if the target instance is NOT in a deactivated branch.\r\n            let current = target;\r\n            while (current) {\r\n                if (current.isDeactivated) {\r\n                    return;\r\n                }\r\n                current = current.parent;\r\n            }\r\n            hook();\r\n        });\r\n    injectHook(type, wrappedHook, target);\r\n    // In addition to registering it on the target instance, we walk up the parent\r\n    // chain and register it on all ancestor instances that are keep-alive roots.\r\n    // This avoids the need to walk the entire component tree when invoking these\r\n    // hooks, and more importantly, avoids the need to track child components in\r\n    // arrays.\r\n    if (target) {\r\n        let current = target.parent;\r\n        while (current && current.parent) {\r\n            if (isKeepAlive(current.parent.vnode)) {\r\n                injectToKeepAliveRoot(wrappedHook, type, target, current);\r\n            }\r\n            current = current.parent;\r\n        }\r\n    }\r\n}\r\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\r\n    // injectHook wraps the original for error handling, so make sure to remove\r\n    // the wrapped version.\r\n    const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */);\r\n    onUnmounted(() => {\r\n        remove(keepAliveRoot[type], injected);\r\n    }, target);\r\n}\r\nfunction resetShapeFlag(vnode) {\r\n    let shapeFlag = vnode.shapeFlag;\r\n    if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n        shapeFlag -= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n    }\r\n    if (shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n        shapeFlag -= 512 /* COMPONENT_KEPT_ALIVE */;\r\n    }\r\n    vnode.shapeFlag = shapeFlag;\r\n}\r\nfunction getInnerChild(vnode) {\r\n    return vnode.shapeFlag & 128 /* SUSPENSE */ ? vnode.ssContent : vnode;\r\n}\n\nconst isInternalKey = (key) => key[0] === '_' || key === '$stable';\r\nconst normalizeSlotValue = (value) => isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value)];\r\nconst normalizeSlot = (key, rawSlot, ctx) => withCtx((props) => {\r\n    if ((process.env.NODE_ENV !== 'production') && currentInstance) {\r\n        warn(`Slot \"${key}\" invoked outside of the render function: ` +\r\n            `this will not track dependencies used in the slot. ` +\r\n            `Invoke the slot function inside the render function instead.`);\r\n    }\r\n    return normalizeSlotValue(rawSlot(props));\r\n}, ctx);\r\nconst normalizeObjectSlots = (rawSlots, slots) => {\r\n    const ctx = rawSlots._ctx;\r\n    for (const key in rawSlots) {\r\n        if (isInternalKey(key))\r\n            continue;\r\n        const value = rawSlots[key];\r\n        if (isFunction(value)) {\r\n            slots[key] = normalizeSlot(key, value, ctx);\r\n        }\r\n        else if (value != null) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Non-function value encountered for slot \"${key}\". ` +\r\n                    `Prefer function slots for better performance.`);\r\n            }\r\n            const normalized = normalizeSlotValue(value);\r\n            slots[key] = () => normalized;\r\n        }\r\n    }\r\n};\r\nconst normalizeVNodeSlots = (instance, children) => {\r\n    if ((process.env.NODE_ENV !== 'production') && !isKeepAlive(instance.vnode)) {\r\n        warn(`Non-function value encountered for default slot. ` +\r\n            `Prefer function slots for better performance.`);\r\n    }\r\n    const normalized = normalizeSlotValue(children);\r\n    instance.slots.default = () => normalized;\r\n};\r\nconst initSlots = (instance, children) => {\r\n    if (instance.vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            instance.slots = children;\r\n            // make compiler marker non-enumerable\r\n            def(children, '_', type);\r\n        }\r\n        else {\r\n            normalizeObjectSlots(children, (instance.slots = {}));\r\n        }\r\n    }\r\n    else {\r\n        instance.slots = {};\r\n        if (children) {\r\n            normalizeVNodeSlots(instance, children);\r\n        }\r\n    }\r\n    def(instance.slots, InternalObjectKey, 1);\r\n};\r\nconst updateSlots = (instance, children) => {\r\n    const { vnode, slots } = instance;\r\n    let needDeletionCheck = true;\r\n    let deletionComparisonTarget = EMPTY_OBJ;\r\n    if (vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // compiled slots.\r\n            if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n                // Parent was HMR updated so slot content may have changed.\r\n                // force update slots and mark instance for hmr as well\r\n                extend(slots, children);\r\n            }\r\n            else if (type === 1 /* STABLE */) {\r\n                // compiled AND stable.\r\n                // no need to update, and skip stale slots removal.\r\n                needDeletionCheck = false;\r\n            }\r\n            else {\r\n                // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n                // normalization.\r\n                extend(slots, children);\r\n            }\r\n        }\r\n        else {\r\n            needDeletionCheck = !children.$stable;\r\n            normalizeObjectSlots(children, slots);\r\n        }\r\n        deletionComparisonTarget = children;\r\n    }\r\n    else if (children) {\r\n        // non slot object children (direct value) passed to a component\r\n        normalizeVNodeSlots(instance, children);\r\n        deletionComparisonTarget = { default: 1 };\r\n    }\r\n    // delete stale slots\r\n    if (needDeletionCheck) {\r\n        for (const key in slots) {\r\n            if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n                delete slots[key];\r\n            }\r\n        }\r\n    }\r\n};\n\n/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text');\r\nfunction validateDirectiveName(name) {\r\n    if (isBuiltInDirective(name)) {\r\n        warn('Do not use built-in directive ids as custom directive id: ' + name);\r\n    }\r\n}\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nfunction withDirectives(vnode, directives) {\r\n    const internalInstance = currentRenderingInstance;\r\n    if (internalInstance === null) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`withDirectives can only be used inside render functions.`);\r\n        return vnode;\r\n    }\r\n    const instance = internalInstance.proxy;\r\n    const bindings = vnode.dirs || (vnode.dirs = []);\r\n    for (let i = 0; i < directives.length; i++) {\r\n        let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];\r\n        if (isFunction(dir)) {\r\n            dir = {\r\n                mounted: dir,\r\n                updated: dir\r\n            };\r\n        }\r\n        bindings.push({\r\n            dir,\r\n            instance,\r\n            value,\r\n            oldValue: void 0,\r\n            arg,\r\n            modifiers\r\n        });\r\n    }\r\n    return vnode;\r\n}\r\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\r\n    const bindings = vnode.dirs;\r\n    const oldBindings = prevVNode && prevVNode.dirs;\r\n    for (let i = 0; i < bindings.length; i++) {\r\n        const binding = bindings[i];\r\n        if (oldBindings) {\r\n            binding.oldValue = oldBindings[i].value;\r\n        }\r\n        const hook = binding.dir[name];\r\n        if (hook) {\r\n            callWithAsyncErrorHandling(hook, instance, 8 /* DIRECTIVE_HOOK */, [\r\n                vnode.el,\r\n                binding,\r\n                vnode,\r\n                prevVNode\r\n            ]);\r\n        }\r\n    }\r\n}\n\nfunction createAppContext() {\r\n    return {\r\n        app: null,\r\n        config: {\r\n            isNativeTag: NO,\r\n            performance: false,\r\n            globalProperties: {},\r\n            optionMergeStrategies: {},\r\n            isCustomElement: NO,\r\n            errorHandler: undefined,\r\n            warnHandler: undefined\r\n        },\r\n        mixins: [],\r\n        components: {},\r\n        directives: {},\r\n        provides: Object.create(null)\r\n    };\r\n}\r\nlet uid = 0;\r\nfunction createAppAPI(render, hydrate) {\r\n    return function createApp(rootComponent, rootProps = null) {\r\n        if (rootProps != null && !isObject(rootProps)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`root props passed to app.mount() must be an object.`);\r\n            rootProps = null;\r\n        }\r\n        const context = createAppContext();\r\n        const installedPlugins = new Set();\r\n        let isMounted = false;\r\n        const app = (context.app = {\r\n            _uid: uid++,\r\n            _component: rootComponent,\r\n            _props: rootProps,\r\n            _container: null,\r\n            _context: context,\r\n            version,\r\n            get config() {\r\n                return context.config;\r\n            },\r\n            set config(v) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`app.config cannot be replaced. Modify individual options instead.`);\r\n                }\r\n            },\r\n            use(plugin, ...options) {\r\n                if (installedPlugins.has(plugin)) {\r\n                    (process.env.NODE_ENV !== 'production') && warn(`Plugin has already been applied to target app.`);\r\n                }\r\n                else if (plugin && isFunction(plugin.install)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin.install(app, ...options);\r\n                }\r\n                else if (isFunction(plugin)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin(app, ...options);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`A plugin must either be a function or an object with an \"install\" ` +\r\n                        `function.`);\r\n                }\r\n                return app;\r\n            },\r\n            mixin(mixin) {\r\n                if (__VUE_OPTIONS_API__) {\r\n                    if (!context.mixins.includes(mixin)) {\r\n                        context.mixins.push(mixin);\r\n                        // global mixin with props/emits de-optimizes props/emits\r\n                        // normalization caching.\r\n                        if (mixin.props || mixin.emits) {\r\n                            context.deopt = true;\r\n                        }\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Mixin has already been applied to target app' +\r\n                            (mixin.name ? `: ${mixin.name}` : ''));\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Mixins are only available in builds supporting Options API');\r\n                }\r\n                return app;\r\n            },\r\n            component(name, component) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateComponentName(name, context.config);\r\n                }\r\n                if (!component) {\r\n                    return context.components[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.components[name]) {\r\n                    warn(`Component \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.components[name] = component;\r\n                return app;\r\n            },\r\n            directive(name, directive) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateDirectiveName(name);\r\n                }\r\n                if (!directive) {\r\n                    return context.directives[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.directives[name]) {\r\n                    warn(`Directive \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.directives[name] = directive;\r\n                return app;\r\n            },\r\n            mount(rootContainer, isHydrate) {\r\n                if (!isMounted) {\r\n                    const vnode = createVNode(rootComponent, rootProps);\r\n                    // store app context on the root VNode.\r\n                    // this will be set on the root instance on initial mount.\r\n                    vnode.appContext = context;\r\n                    // HMR root reload\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        context.reload = () => {\r\n                            render(cloneVNode(vnode), rootContainer);\r\n                        };\r\n                    }\r\n                    if (isHydrate && hydrate) {\r\n                        hydrate(vnode, rootContainer);\r\n                    }\r\n                    else {\r\n                        render(vnode, rootContainer);\r\n                    }\r\n                    isMounted = true;\r\n                    app._container = rootContainer;\r\n                    rootContainer.__vue_app__ = app;\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsInitApp(app, version);\r\n                    }\r\n                    return vnode.component.proxy;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`App has already been mounted.\\n` +\r\n                        `If you want to remount the same app, move your app creation logic ` +\r\n                        `into a factory function and create fresh app instances for each ` +\r\n                        `mount - e.g. \\`const createMyApp = () => createApp(App)\\``);\r\n                }\r\n            },\r\n            unmount() {\r\n                if (isMounted) {\r\n                    render(null, app._container);\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsUnmountApp(app);\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`Cannot unmount an app that is not mounted.`);\r\n                }\r\n            },\r\n            provide(key, value) {\r\n                if ((process.env.NODE_ENV !== 'production') && key in context.provides) {\r\n                    warn(`App already provides property with key \"${String(key)}\". ` +\r\n                        `It will be overwritten with the new value.`);\r\n                }\r\n                // TypeScript doesn't allow symbols as index type\r\n                // https://github.com/Microsoft/TypeScript/issues/24587\r\n                context.provides[key] = value;\r\n                return app;\r\n            }\r\n        });\r\n        return app;\r\n    };\r\n}\n\nlet hasMismatch = false;\r\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== 'foreignObject';\r\nconst isComment = (node) => node.nodeType === 8 /* COMMENT */;\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nfunction createHydrationFunctions(rendererInternals) {\r\n    const { mt: mountComponent, p: patch, o: { patchProp, nextSibling, parentNode, remove, insert, createComment } } = rendererInternals;\r\n    const hydrate = (vnode, container) => {\r\n        if ((process.env.NODE_ENV !== 'production') && !container.hasChildNodes()) {\r\n            warn(`Attempting to hydrate existing markup but container is empty. ` +\r\n                `Performing full mount instead.`);\r\n            patch(null, vnode, container);\r\n            return;\r\n        }\r\n        hasMismatch = false;\r\n        hydrateNode(container.firstChild, vnode, null, null);\r\n        flushPostFlushCbs();\r\n        if (hasMismatch && !false) {\r\n            // this error should show up in production\r\n            console.error(`Hydration completed but contains mismatches.`);\r\n        }\r\n    };\r\n    const hydrateNode = (node, vnode, parentComponent, parentSuspense, optimized = false) => {\r\n        const isFragmentStart = isComment(node) && node.data === '[';\r\n        const onMismatch = () => handleMismatch(node, vnode, parentComponent, parentSuspense, isFragmentStart);\r\n        const { type, ref, shapeFlag } = vnode;\r\n        const domType = node.nodeType;\r\n        vnode.el = node;\r\n        let nextNode = null;\r\n        switch (type) {\r\n            case Text:\r\n                if (domType !== 3 /* TEXT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    if (node.data !== vnode.children) {\r\n                        hasMismatch = true;\r\n                        (process.env.NODE_ENV !== 'production') &&\r\n                            warn(`Hydration text mismatch:` +\r\n                                `\\n- Client: ${JSON.stringify(node.data)}` +\r\n                                `\\n- Server: ${JSON.stringify(vnode.children)}`);\r\n                        node.data = vnode.children;\r\n                    }\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Comment:\r\n                if (domType !== 8 /* COMMENT */ || isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Static:\r\n                if (domType !== 1 /* ELEMENT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    // determine anchor, adopt content\r\n                    nextNode = node;\r\n                    // if the static vnode has its content stripped during build,\r\n                    // adopt it from the server-rendered HTML.\r\n                    const needToAdoptContent = !vnode.children.length;\r\n                    for (let i = 0; i < vnode.staticCount; i++) {\r\n                        if (needToAdoptContent)\r\n                            vnode.children += nextNode.outerHTML;\r\n                        if (i === vnode.staticCount - 1) {\r\n                            vnode.anchor = nextNode;\r\n                        }\r\n                        nextNode = nextSibling(nextNode);\r\n                    }\r\n                    return nextNode;\r\n                }\r\n                break;\r\n            case Fragment:\r\n                if (!isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = hydrateFragment(node, vnode, parentComponent, parentSuspense, optimized);\r\n                }\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    if (domType !== 1 /* ELEMENT */ ||\r\n                        vnode.type !== node.tagName.toLowerCase()) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = hydrateElement(node, vnode, parentComponent, parentSuspense, optimized);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    // when setting up the render effect, if the initial vnode already\r\n                    // has .el set, the component will perform hydration instead of mount\r\n                    // on its sub-tree.\r\n                    const container = parentNode(node);\r\n                    const hydrateComponent = () => {\r\n                        mountComponent(vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), optimized);\r\n                    };\r\n                    // async component\r\n                    const loadAsync = vnode.type.__asyncLoader;\r\n                    if (loadAsync) {\r\n                        loadAsync().then(hydrateComponent);\r\n                    }\r\n                    else {\r\n                        hydrateComponent();\r\n                    }\r\n                    // component may be async, so in the case of fragments we cannot rely\r\n                    // on component's rendered output to determine the end of the fragment\r\n                    // instead, we do a lookahead to find the end anchor node.\r\n                    nextNode = isFragmentStart\r\n                        ? locateClosingAsyncAnchor(node)\r\n                        : nextSibling(node);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    if (domType !== 8 /* COMMENT */) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, optimized, rendererInternals, hydrateChildren);\r\n                    }\r\n                }\r\n                else if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                    nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, isSVGContainer(parentNode(node)), optimized, rendererInternals, hydrateNode);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid HostVNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, vnode);\r\n        }\r\n        return nextNode;\r\n    };\r\n    const hydrateElement = (el, vnode, parentComponent, parentSuspense, optimized) => {\r\n        optimized = optimized || !!vnode.dynamicChildren;\r\n        const { props, patchFlag, shapeFlag, dirs } = vnode;\r\n        // skip props & children if this is hoisted static nodes\r\n        if (patchFlag !== -1 /* HOISTED */) {\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                if (!optimized ||\r\n                    (patchFlag & 16 /* FULL_PROPS */ ||\r\n                        patchFlag & 32 /* HYDRATE_EVENTS */)) {\r\n                    for (const key in props) {\r\n                        if (!isReservedProp(key) && isOn(key)) {\r\n                            patchProp(el, key, null, props[key]);\r\n                        }\r\n                    }\r\n                }\r\n                else if (props.onClick) {\r\n                    // Fast path for click listeners (which is most often) to avoid\r\n                    // iterating through props.\r\n                    patchProp(el, 'onClick', null, props.onClick);\r\n                }\r\n            }\r\n            // vnode / directive hooks\r\n            let vnodeHooks;\r\n            if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n                invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n            }\r\n            if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n                queueEffectWithSuspense(() => {\r\n                    vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n                    dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n                }, parentSuspense);\r\n            }\r\n            // children\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */ &&\r\n                // skip if element has innerHTML / textContent\r\n                !(props && (props.innerHTML || props.textContent))) {\r\n                let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, optimized);\r\n                let hasWarned = false;\r\n                while (next) {\r\n                    hasMismatch = true;\r\n                    if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                        warn(`Hydration children mismatch in <${vnode.type}>: ` +\r\n                            `server rendered element contains more child nodes than client vdom.`);\r\n                        hasWarned = true;\r\n                    }\r\n                    // The SSRed DOM contains more nodes than it should. Remove them.\r\n                    const cur = next;\r\n                    next = next.nextSibling;\r\n                    remove(cur);\r\n                }\r\n            }\r\n            else if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                if (el.textContent !== vnode.children) {\r\n                    hasMismatch = true;\r\n                    (process.env.NODE_ENV !== 'production') &&\r\n                        warn(`Hydration text content mismatch in <${vnode.type}>:\\n` +\r\n                            `- Client: ${el.textContent}\\n` +\r\n                            `- Server: ${vnode.children}`);\r\n                    el.textContent = vnode.children;\r\n                }\r\n            }\r\n        }\r\n        return el.nextSibling;\r\n    };\r\n    const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, optimized) => {\r\n        optimized = optimized || !!parentVNode.dynamicChildren;\r\n        const children = parentVNode.children;\r\n        const l = children.length;\r\n        let hasWarned = false;\r\n        for (let i = 0; i < l; i++) {\r\n            const vnode = optimized\r\n                ? children[i]\r\n                : (children[i] = normalizeVNode(children[i]));\r\n            if (node) {\r\n                node = hydrateNode(node, vnode, parentComponent, parentSuspense, optimized);\r\n            }\r\n            else {\r\n                hasMismatch = true;\r\n                if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                    warn(`Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n                        `server rendered element contains fewer child nodes than client vdom.`);\r\n                    hasWarned = true;\r\n                }\r\n                // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n                patch(null, vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container));\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    const hydrateFragment = (node, vnode, parentComponent, parentSuspense, optimized) => {\r\n        const container = parentNode(node);\r\n        const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, optimized);\r\n        if (next && isComment(next) && next.data === ']') {\r\n            return nextSibling((vnode.anchor = next));\r\n        }\r\n        else {\r\n            // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n            // back. This should have led to node/children mismatch warnings.\r\n            hasMismatch = true;\r\n            // since the anchor is missing, we need to create one and insert it\r\n            insert((vnode.anchor = createComment(`]`)), container, next);\r\n            return next;\r\n        }\r\n    };\r\n    const handleMismatch = (node, vnode, parentComponent, parentSuspense, isFragment) => {\r\n        hasMismatch = true;\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`Hydration node mismatch:\\n- Client vnode:`, vnode.type, `\\n- Server rendered DOM:`, node, node.nodeType === 3 /* TEXT */\r\n                ? `(text)`\r\n                : isComment(node) && node.data === '['\r\n                    ? `(start of fragment)`\r\n                    : ``);\r\n        vnode.el = null;\r\n        if (isFragment) {\r\n            // remove excessive fragment nodes\r\n            const end = locateClosingAsyncAnchor(node);\r\n            while (true) {\r\n                const next = nextSibling(node);\r\n                if (next && next !== end) {\r\n                    remove(next);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const next = nextSibling(node);\r\n        const container = parentNode(node);\r\n        remove(node);\r\n        patch(null, vnode, container, next, parentComponent, parentSuspense, isSVGContainer(container));\r\n        return next;\r\n    };\r\n    const locateClosingAsyncAnchor = (node) => {\r\n        let match = 0;\r\n        while (node) {\r\n            node = nextSibling(node);\r\n            if (node && isComment(node)) {\r\n                if (node.data === '[')\r\n                    match++;\r\n                if (node.data === ']') {\r\n                    if (match === 0) {\r\n                        return nextSibling(node);\r\n                    }\r\n                    else {\r\n                        match--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    return [hydrate, hydrateNode];\r\n}\n\nlet supported;\r\nlet perf;\r\nfunction startMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        perf.mark(`vue-${type}-${instance.uid}`);\r\n    }\r\n}\r\nfunction endMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        const startTag = `vue-${type}-${instance.uid}`;\r\n        const endTag = startTag + `:end`;\r\n        perf.mark(endTag);\r\n        perf.measure(`<${formatComponentName(instance, instance.type)}> ${type}`, startTag, endTag);\r\n        perf.clearMarks(startTag);\r\n        perf.clearMarks(endTag);\r\n    }\r\n}\r\nfunction isSupported() {\r\n    if (supported !== undefined) {\r\n        return supported;\r\n    }\r\n    /* eslint-disable no-restricted-globals */\r\n    if (typeof window !== 'undefined' && window.performance) {\r\n        supported = true;\r\n        perf = window.performance;\r\n    }\r\n    else {\r\n        supported = false;\r\n    }\r\n    /* eslint-enable no-restricted-globals */\r\n    return supported;\r\n}\n\n/**\r\n * This is only called in esm-bundler builds.\r\n * It is called when a renderer is created, in `baseCreateRenderer` so that\r\n * importing runtime-core is side-effects free.\r\n *\r\n * istanbul-ignore-next\r\n */\r\nfunction initFeatureFlags() {\r\n    let needWarn = false;\r\n    if (typeof __VUE_OPTIONS_API__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_OPTIONS_API__ = true;\r\n    }\r\n    if (typeof __VUE_PROD_DEVTOOLS__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_PROD_DEVTOOLS__ = false;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && needWarn) {\r\n        console.warn(`You are running the esm-bundler build of Vue. It is recommended to ` +\r\n            `configure your bundler to explicitly replace feature flag globals ` +\r\n            `with boolean literals to get proper tree-shaking in the final bundle. ` +\r\n            `See http://link.vuejs.org/feature-flags for more details.`);\r\n    }\r\n}\n\n// implementation, close to no-op\r\nfunction defineComponent(options) {\r\n    return isFunction(options) ? { setup: options, name: options.name } : options;\r\n}\n\nconst isAsyncWrapper = (i) => !!i.type.__asyncLoader;\r\nfunction defineAsyncComponent(source) {\r\n    if (isFunction(source)) {\r\n        source = { loader: source };\r\n    }\r\n    const { loader, loadingComponent: loadingComponent, errorComponent: errorComponent, delay = 200, timeout, // undefined = never times out\r\n    suspensible = true, onError: userOnError } = source;\r\n    let pendingRequest = null;\r\n    let resolvedComp;\r\n    let retries = 0;\r\n    const retry = () => {\r\n        retries++;\r\n        pendingRequest = null;\r\n        return load();\r\n    };\r\n    const load = () => {\r\n        let thisRequest;\r\n        return (pendingRequest ||\r\n            (thisRequest = pendingRequest = loader()\r\n                .catch(err => {\r\n                err = err instanceof Error ? err : new Error(String(err));\r\n                if (userOnError) {\r\n                    return new Promise((resolve, reject) => {\r\n                        const userRetry = () => resolve(retry());\r\n                        const userFail = () => reject(err);\r\n                        userOnError(err, userRetry, userFail, retries + 1);\r\n                    });\r\n                }\r\n                else {\r\n                    throw err;\r\n                }\r\n            })\r\n                .then((comp) => {\r\n                if (thisRequest !== pendingRequest && pendingRequest) {\r\n                    return pendingRequest;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && !comp) {\r\n                    warn(`Async component loader resolved to undefined. ` +\r\n                        `If you are using retry(), make sure to return its return value.`);\r\n                }\r\n                // interop module default\r\n                if (comp &&\r\n                    (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {\r\n                    comp = comp.default;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && comp && !isObject(comp) && !isFunction(comp)) {\r\n                    throw new Error(`Invalid async component load result: ${comp}`);\r\n                }\r\n                resolvedComp = comp;\r\n                return comp;\r\n            })));\r\n    };\r\n    return defineComponent({\r\n        __asyncLoader: load,\r\n        name: 'AsyncComponentWrapper',\r\n        setup() {\r\n            const instance = currentInstance;\r\n            // already resolved\r\n            if (resolvedComp) {\r\n                return () => createInnerComp(resolvedComp, instance);\r\n            }\r\n            const onError = (err) => {\r\n                pendingRequest = null;\r\n                handleError(err, instance, 13 /* ASYNC_COMPONENT_LOADER */, !errorComponent /* do not throw in dev if user provided error component */);\r\n            };\r\n            // suspense-controlled or SSR.\r\n            if (( suspensible && instance.suspense) ||\r\n                (false )) {\r\n                return load()\r\n                    .then(comp => {\r\n                    return () => createInnerComp(comp, instance);\r\n                })\r\n                    .catch(err => {\r\n                    onError(err);\r\n                    return () => errorComponent\r\n                        ? createVNode(errorComponent, {\r\n                            error: err\r\n                        })\r\n                        : null;\r\n                });\r\n            }\r\n            const loaded = ref(false);\r\n            const error = ref();\r\n            const delayed = ref(!!delay);\r\n            if (delay) {\r\n                setTimeout(() => {\r\n                    delayed.value = false;\r\n                }, delay);\r\n            }\r\n            if (timeout != null) {\r\n                setTimeout(() => {\r\n                    if (!loaded.value && !error.value) {\r\n                        const err = new Error(`Async component timed out after ${timeout}ms.`);\r\n                        onError(err);\r\n                        error.value = err;\r\n                    }\r\n                }, timeout);\r\n            }\r\n            load()\r\n                .then(() => {\r\n                loaded.value = true;\r\n            })\r\n                .catch(err => {\r\n                onError(err);\r\n                error.value = err;\r\n            });\r\n            return () => {\r\n                if (loaded.value && resolvedComp) {\r\n                    return createInnerComp(resolvedComp, instance);\r\n                }\r\n                else if (error.value && errorComponent) {\r\n                    return createVNode(errorComponent, {\r\n                        error: error.value\r\n                    });\r\n                }\r\n                else if (loadingComponent && !delayed.value) {\r\n                    return createVNode(loadingComponent);\r\n                }\r\n            };\r\n        }\r\n    });\r\n}\r\nfunction createInnerComp(comp, { vnode: { ref, props, children } }) {\r\n    const vnode = createVNode(comp, props, children);\r\n    // ensure inner component inherits the async wrapper's ref owner\r\n    vnode.ref = ref;\r\n    return vnode;\r\n}\n\nconst prodEffectOptions = {\r\n    scheduler: queueJob,\r\n    // #1801, #2043 component render effects should allow recursive updates\r\n    allowRecurse: true\r\n};\r\nfunction createDevEffectOptions(instance) {\r\n    return {\r\n        scheduler: queueJob,\r\n        allowRecurse: true,\r\n        onTrack: instance.rtc ? e => invokeArrayFns(instance.rtc, e) : void 0,\r\n        onTrigger: instance.rtg ? e => invokeArrayFns(instance.rtg, e) : void 0\r\n    };\r\n}\r\nconst queuePostRenderEffect =  queueEffectWithSuspense\r\n    ;\r\nconst setRef = (rawRef, oldRawRef, parentSuspense, vnode) => {\r\n    if (isArray(rawRef)) {\r\n        rawRef.forEach((r, i) => setRef(r, oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef), parentSuspense, vnode));\r\n        return;\r\n    }\r\n    let value;\r\n    if (!vnode || isAsyncWrapper(vnode)) {\r\n        value = null;\r\n    }\r\n    else {\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            value = vnode.component.exposed || vnode.component.proxy;\r\n        }\r\n        else {\r\n            value = vnode.el;\r\n        }\r\n    }\r\n    const { i: owner, r: ref } = rawRef;\r\n    if ((process.env.NODE_ENV !== 'production') && !owner) {\r\n        warn(`Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n            `A vnode with ref must be created inside the render function.`);\r\n        return;\r\n    }\r\n    const oldRef = oldRawRef && oldRawRef.r;\r\n    const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs;\r\n    const setupState = owner.setupState;\r\n    // unset old ref\r\n    if (oldRef != null && oldRef !== ref) {\r\n        if (isString(oldRef)) {\r\n            refs[oldRef] = null;\r\n            if (hasOwn(setupState, oldRef)) {\r\n                setupState[oldRef] = null;\r\n            }\r\n        }\r\n        else if (isRef(oldRef)) {\r\n            oldRef.value = null;\r\n        }\r\n    }\r\n    if (isString(ref)) {\r\n        const doSet = () => {\r\n            refs[ref] = value;\r\n            if (hasOwn(setupState, ref)) {\r\n                setupState[ref] = value;\r\n            }\r\n        };\r\n        // #1789: for non-null values, set them after render\r\n        // null values means this is unmount and it should not overwrite another\r\n        // ref with the same key\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isRef(ref)) {\r\n        const doSet = () => {\r\n            ref.value = value;\r\n        };\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isFunction(ref)) {\r\n        callWithErrorHandling(ref, owner, 12 /* FUNCTION_REF */, [value, refs]);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn('Invalid template ref type:', value, `(${typeof value})`);\r\n    }\r\n};\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nfunction createRenderer(options) {\r\n    return baseCreateRenderer(options);\r\n}\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nfunction createHydrationRenderer(options) {\r\n    return baseCreateRenderer(options, createHydrationFunctions);\r\n}\r\n// implementation\r\nfunction baseCreateRenderer(options, createHydrationFns) {\r\n    // compile-time feature flags check\r\n    {\r\n        initFeatureFlags();\r\n    }\r\n    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, forcePatchProp: hostForcePatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = NOOP, cloneNode: hostCloneNode, insertStaticContent: hostInsertStaticContent } = options;\r\n    // Note: functions inside this closure should use `const xxx = () => {}`\r\n    // style in order to prevent being inlined by minifiers.\r\n    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, optimized = false) => {\r\n        // patching & not same type, unmount old tree\r\n        if (n1 && !isSameVNodeType(n1, n2)) {\r\n            anchor = getNextHostNode(n1);\r\n            unmount(n1, parentComponent, parentSuspense, true);\r\n            n1 = null;\r\n        }\r\n        if (n2.patchFlag === -2 /* BAIL */) {\r\n            optimized = false;\r\n            n2.dynamicChildren = null;\r\n        }\r\n        const { type, ref, shapeFlag } = n2;\r\n        switch (type) {\r\n            case Text:\r\n                processText(n1, n2, container, anchor);\r\n                break;\r\n            case Comment:\r\n                processCommentNode(n1, n2, container, anchor);\r\n                break;\r\n            case Static:\r\n                if (n1 == null) {\r\n                    mountStaticNode(n2, container, anchor, isSVG);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    patchStaticNode(n1, n2, container, isSVG);\r\n                }\r\n                break;\r\n            case Fragment:\r\n                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid VNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        // set ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, n1 && n1.ref, parentSuspense, n2);\r\n        }\r\n    };\r\n    const processText = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);\r\n        }\r\n        else {\r\n            const el = (n2.el = n1.el);\r\n            if (n2.children !== n1.children) {\r\n                hostSetText(el, n2.children);\r\n            }\r\n        }\r\n    };\r\n    const processCommentNode = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);\r\n        }\r\n        else {\r\n            // there's no support for dynamic comments\r\n            n2.el = n1.el;\r\n        }\r\n    };\r\n    const mountStaticNode = (n2, container, anchor, isSVG) => {\r\n        [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const patchStaticNode = (n1, n2, container, isSVG) => {\r\n        // static nodes are only patched during dev for HMR\r\n        if (n2.children !== n1.children) {\r\n            const anchor = hostNextSibling(n1.anchor);\r\n            // remove existing\r\n            removeStaticNode(n1);\r\n            [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n        }\r\n        else {\r\n            n2.el = n1.el;\r\n            n2.anchor = n1.anchor;\r\n        }\r\n    };\r\n    const moveStaticNode = ({ el, anchor }, container, nextSibling) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostInsert(el, container, nextSibling);\r\n            el = next;\r\n        }\r\n        hostInsert(anchor, container, nextSibling);\r\n    };\r\n    const removeStaticNode = ({ el, anchor }) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostRemove(el);\r\n            el = next;\r\n        }\r\n        hostRemove(anchor);\r\n    };\r\n    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        isSVG = isSVG || n2.type === 'svg';\r\n        if (n1 == null) {\r\n            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n    };\r\n    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let el;\r\n        let vnodeHook;\r\n        const { type, props, shapeFlag, transition, scopeId, patchFlag, dirs } = vnode;\r\n        if (!(process.env.NODE_ENV !== 'production') &&\r\n            vnode.el &&\r\n            hostCloneNode !== undefined &&\r\n            patchFlag === -1 /* HOISTED */) {\r\n            // If a vnode has non-null el, it means it's being reused.\r\n            // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n            // exactly the same, and we can simply do a clone here.\r\n            // only do this in production since cloned trees cannot be HMR updated.\r\n            el = vnode.el = hostCloneNode(vnode.el);\r\n        }\r\n        else {\r\n            el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is);\r\n            // mount children first, since some props may rely on child content\r\n            // being already rendered, e.g. `<select value>`\r\n            if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                hostSetElementText(el, vnode.children);\r\n            }\r\n            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', optimized || !!vnode.dynamicChildren);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                for (const key in props) {\r\n                    if (!isReservedProp(key)) {\r\n                        hostPatchProp(el, key, null, props[key], isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n                if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                }\r\n            }\r\n            // scopeId\r\n            setScopeId(el, scopeId, vnode, parentComponent);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            Object.defineProperty(el, '__vnode', {\r\n                value: vnode,\r\n                enumerable: false\r\n            });\r\n            Object.defineProperty(el, '__vueParentComponent', {\r\n                value: parentComponent,\r\n                enumerable: false\r\n            });\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n        }\r\n        // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n        // #1689 For inside suspense + suspense resolved case, just call it\r\n        const needCallTransitionHooks = (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\r\n            transition &&\r\n            !transition.persisted;\r\n        if (needCallTransitionHooks) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        hostInsert(el, container, anchor);\r\n        if ((vnodeHook = props && props.onVnodeMounted) ||\r\n            needCallTransitionHooks ||\r\n            dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                needCallTransitionHooks && transition.enter(el);\r\n                dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const setScopeId = (el, scopeId, vnode, parentComponent) => {\r\n        if (scopeId) {\r\n            hostSetScopeId(el, scopeId);\r\n        }\r\n        if (parentComponent) {\r\n            const treeOwnerId = parentComponent.type.__scopeId;\r\n            // vnode's own scopeId and the current patched component's scopeId is\r\n            // different - this is a slot content node.\r\n            if (treeOwnerId && treeOwnerId !== scopeId) {\r\n                hostSetScopeId(el, treeOwnerId + '-s');\r\n            }\r\n            let subTree = parentComponent.subTree;\r\n            if ((process.env.NODE_ENV !== 'production') && subTree.type === Fragment) {\r\n                subTree =\r\n                    filterSingleRoot(subTree.children) || subTree;\r\n            }\r\n            if (vnode === subTree) {\r\n                setScopeId(el, parentComponent.vnode.scopeId, parentComponent.vnode, parentComponent.parent);\r\n            }\r\n        }\r\n    };\r\n    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, optimized, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            const child = (children[i] = optimized\r\n                ? cloneIfMounted(children[i])\r\n                : normalizeVNode(children[i]));\r\n            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n    };\r\n    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const el = (n2.el = n1.el);\r\n        let { patchFlag, dynamicChildren, dirs } = n2;\r\n        // #1426 take the old vnode's patch flag into account since user may clone a\r\n        // compiler-generated vnode, which de-opts to FULL_PROPS\r\n        patchFlag |= n1.patchFlag & 16 /* FULL_PROPS */;\r\n        const oldProps = n1.props || EMPTY_OBJ;\r\n        const newProps = n2.props || EMPTY_OBJ;\r\n        let vnodeHook;\r\n        if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (patchFlag > 0) {\r\n            // the presence of a patchFlag means this element's render code was\r\n            // generated by the compiler and can take the fast path.\r\n            // in this path old node and new node are guaranteed to have the same shape\r\n            // (i.e. at the exact same position in the source template)\r\n            if (patchFlag & 16 /* FULL_PROPS */) {\r\n                // element props contain dynamic keys, full diff needed\r\n                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else {\r\n                // class\r\n                // this flag is matched when the element has dynamic class bindings.\r\n                if (patchFlag & 2 /* CLASS */) {\r\n                    if (oldProps.class !== newProps.class) {\r\n                        hostPatchProp(el, 'class', null, newProps.class, isSVG);\r\n                    }\r\n                }\r\n                // style\r\n                // this flag is matched when the element has dynamic style bindings\r\n                if (patchFlag & 4 /* STYLE */) {\r\n                    hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);\r\n                }\r\n                // props\r\n                // This flag is matched when the element has dynamic prop/attr bindings\r\n                // other than class and style. The keys of dynamic prop/attrs are saved for\r\n                // faster iteration.\r\n                // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n                // bail out and go through a full diff because we need to unset the old key\r\n                if (patchFlag & 8 /* PROPS */) {\r\n                    // if the flag is present then dynamicProps must be non-null\r\n                    const propsToUpdate = n2.dynamicProps;\r\n                    for (let i = 0; i < propsToUpdate.length; i++) {\r\n                        const key = propsToUpdate[i];\r\n                        const prev = oldProps[key];\r\n                        const next = newProps[key];\r\n                        if (next !== prev ||\r\n                            (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                            hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // text\r\n            // This flag is matched when the element has only dynamic text children.\r\n            if (patchFlag & 1 /* TEXT */) {\r\n                if (n1.children !== n2.children) {\r\n                    hostSetElementText(el, n2.children);\r\n                }\r\n            }\r\n        }\r\n        else if (!optimized && dynamicChildren == null) {\r\n            // unoptimized, full diff\r\n            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n        }\r\n        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\r\n        if (dynamicChildren) {\r\n            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG);\r\n            if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                traverseStaticChildren(n1, n2);\r\n            }\r\n        }\r\n        else if (!optimized) {\r\n            // full diff\r\n            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG);\r\n        }\r\n        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n                dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    // The fast path for blocks.\r\n    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG) => {\r\n        for (let i = 0; i < newChildren.length; i++) {\r\n            const oldVNode = oldChildren[i];\r\n            const newVNode = newChildren[i];\r\n            // Determine the container (parent element) for the patch.\r\n            const container = \r\n            // - In the case of a Fragment, we need to provide the actual parent\r\n            // of the Fragment itself so it can move its children.\r\n            oldVNode.type === Fragment ||\r\n                // - In the case of different nodes, there is going to be a replacement\r\n                // which also requires the correct parent container\r\n                !isSameVNodeType(oldVNode, newVNode) ||\r\n                // - In the case of a component, it could contain anything.\r\n                oldVNode.shapeFlag & 6 /* COMPONENT */ ||\r\n                oldVNode.shapeFlag & 64 /* TELEPORT */\r\n                ? hostParentNode(oldVNode.el)\r\n                : // In other cases, the parent container is not actually used so we\r\n                    // just pass the block element here to avoid a DOM parentNode call.\r\n                    fallbackContainer;\r\n            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, true);\r\n        }\r\n    };\r\n    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\r\n        if (oldProps !== newProps) {\r\n            for (const key in newProps) {\r\n                // empty string is not valid prop\r\n                if (isReservedProp(key))\r\n                    continue;\r\n                const next = newProps[key];\r\n                const prev = oldProps[key];\r\n                if (next !== prev ||\r\n                    (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                    hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                }\r\n            }\r\n            if (oldProps !== EMPTY_OBJ) {\r\n                for (const key in oldProps) {\r\n                    if (!isReservedProp(key) && !(key in newProps)) {\r\n                        hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''));\r\n        const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''));\r\n        let { patchFlag, dynamicChildren } = n2;\r\n        if (patchFlag > 0) {\r\n            optimized = true;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            hostInsert(fragmentStartAnchor, container, anchor);\r\n            hostInsert(fragmentEndAnchor, container, anchor);\r\n            // a fragment can only have array children\r\n            // since they are either generated by the compiler, or implicitly created\r\n            // from arrays.\r\n            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            if (patchFlag > 0 &&\r\n                patchFlag & 64 /* STABLE_FRAGMENT */ &&\r\n                dynamicChildren &&\r\n                // #2715 the previous fragment could've been a BAILed one as a result\r\n                // of renderSlot() with no valid children\r\n                n1.dynamicChildren) {\r\n                // a stable fragment (template root or <template v-for>) doesn't need to\r\n                // patch children order, but it may contain dynamicChildren.\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                    traverseStaticChildren(n1, n2);\r\n                }\r\n                else if (\r\n                // #2080 if the stable fragment has a key, it's a <template v-for> that may\r\n                //  get moved around. Make sure all root level vnodes inherit el.\r\n                // #2134 or if it's a component root, it may also get moved around\r\n                // as the component is being moved.\r\n                n2.key != null ||\r\n                    (parentComponent && n2 === parentComponent.subTree)) {\r\n                    traverseStaticChildren(n1, n2, true /* shallow */);\r\n                }\r\n            }\r\n            else {\r\n                // keyed / unkeyed, or manual fragments.\r\n                // for keyed & unkeyed, since they are compiler generated from v-for,\r\n                // each child is guaranteed to be a block so the fragment will never\r\n                // have dynamicChildren.\r\n                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n    };\r\n    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        if (n1 == null) {\r\n            if (n2.shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n                parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);\r\n            }\r\n            else {\r\n                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n        else {\r\n            updateComponent(n1, n2, optimized);\r\n        }\r\n    };\r\n    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense));\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            registerHMR(instance);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            pushWarningContext(initialVNode);\r\n            startMeasure(instance, `mount`);\r\n        }\r\n        // inject renderer internals for keepAlive\r\n        if (isKeepAlive(initialVNode)) {\r\n            instance.ctx.renderer = internals;\r\n        }\r\n        // resolve props and slots for setup context\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            startMeasure(instance, `init`);\r\n        }\r\n        setupComponent(instance);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            endMeasure(instance, `init`);\r\n        }\r\n        // setup() is async. This component relies on async logic to be resolved\r\n        // before proceeding\r\n        if ( instance.asyncDep) {\r\n            parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect);\r\n            // Give it a placeholder if this is not hydration\r\n            // TODO handle self-defined fallback\r\n            if (!initialVNode.el) {\r\n                const placeholder = (instance.subTree = createVNode(Comment));\r\n                processCommentNode(null, placeholder, container, anchor);\r\n            }\r\n            return;\r\n        }\r\n        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            popWarningContext();\r\n            endMeasure(instance, `mount`);\r\n        }\r\n    };\r\n    const updateComponent = (n1, n2, optimized) => {\r\n        const instance = (n2.component = n1.component);\r\n        if (shouldUpdateComponent(n1, n2, optimized)) {\r\n            if (\r\n                instance.asyncDep &&\r\n                !instance.asyncResolved) {\r\n                // async & still pending - just update props and slots\r\n                // since the component's reactive effect for render isn't set-up yet\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(n2);\r\n                }\r\n                updateComponentPreRender(instance, n2, optimized);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                // normal update\r\n                instance.next = n2;\r\n                // in case the child component is also queued, remove it to avoid\r\n                // double updating the same child component in the same flush.\r\n                invalidateJob(instance.update);\r\n                // instance.update is the reactive effect runner.\r\n                instance.update();\r\n            }\r\n        }\r\n        else {\r\n            // no update needed. just copy over properties\r\n            n2.component = n1.component;\r\n            n2.el = n1.el;\r\n            instance.vnode = n2;\r\n        }\r\n    };\r\n    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\r\n        // create reactive effect for rendering\r\n        instance.update = effect(function componentEffect() {\r\n            if (!instance.isMounted) {\r\n                let vnodeHook;\r\n                const { el, props } = initialVNode;\r\n                const { bm, m, parent } = instance;\r\n                // beforeMount hook\r\n                if (bm) {\r\n                    invokeArrayFns(bm);\r\n                }\r\n                // onVnodeBeforeMount\r\n                if ((vnodeHook = props && props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const subTree = (instance.subTree = renderComponentRoot(instance));\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                if (el && hydrateNode) {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `hydrate`);\r\n                    }\r\n                    // vnode has adopted host node - perform hydration instead of mount.\r\n                    hydrateNode(initialVNode.el, subTree, instance, parentSuspense);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `hydrate`);\r\n                    }\r\n                }\r\n                else {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `patch`);\r\n                    }\r\n                    patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `patch`);\r\n                    }\r\n                    initialVNode.el = subTree.el;\r\n                }\r\n                // mounted hook\r\n                if (m) {\r\n                    queuePostRenderEffect(m, parentSuspense);\r\n                }\r\n                // onVnodeMounted\r\n                if ((vnodeHook = props && props.onVnodeMounted)) {\r\n                    const scopedInitialVNode = initialVNode;\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, scopedInitialVNode);\r\n                    }, parentSuspense);\r\n                }\r\n                // activated hook for keep-alive roots.\r\n                // #1742 activated hook must be accessed after first render\r\n                // since the hook may be injected by a child keep-alive\r\n                const { a } = instance;\r\n                if (a &&\r\n                    initialVNode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n                    queuePostRenderEffect(a, parentSuspense);\r\n                }\r\n                instance.isMounted = true;\r\n                // #2458: deference mount-only object parameters to prevent memleaks\r\n                initialVNode = container = anchor = null;\r\n            }\r\n            else {\r\n                // updateComponent\r\n                // This is triggered by mutation of component's own state (next: null)\r\n                // OR parent calling processComponent (next: VNode)\r\n                let { next, bu, u, parent, vnode } = instance;\r\n                let originNext = next;\r\n                let vnodeHook;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(next || instance.vnode);\r\n                }\r\n                if (next) {\r\n                    next.el = vnode.el;\r\n                    updateComponentPreRender(instance, next, optimized);\r\n                }\r\n                else {\r\n                    next = vnode;\r\n                }\r\n                // beforeUpdate hook\r\n                if (bu) {\r\n                    invokeArrayFns(bu);\r\n                }\r\n                // onVnodeBeforeUpdate\r\n                if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n                    invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const nextTree = renderComponentRoot(instance);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                const prevTree = instance.subTree;\r\n                instance.subTree = nextTree;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `patch`);\r\n                }\r\n                patch(prevTree, nextTree, \r\n                // parent may have changed if it's in a teleport\r\n                hostParentNode(prevTree.el), \r\n                // anchor may have changed if it's in a fragment\r\n                getNextHostNode(prevTree), instance, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `patch`);\r\n                }\r\n                next.el = nextTree.el;\r\n                if (originNext === null) {\r\n                    // self-triggered update. In case of HOC, update parent component\r\n                    // vnode el. HOC is indicated by parent instance's subTree pointing\r\n                    // to child component's vnode\r\n                    updateHOCHostEl(instance, nextTree.el);\r\n                }\r\n                // updated hook\r\n                if (u) {\r\n                    queuePostRenderEffect(u, parentSuspense);\r\n                }\r\n                // onVnodeUpdated\r\n                if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                    }, parentSuspense);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentUpdated(instance);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n            }\r\n        }, (process.env.NODE_ENV !== 'production') ? createDevEffectOptions(instance) : prodEffectOptions);\r\n    };\r\n    const updateComponentPreRender = (instance, nextVNode, optimized) => {\r\n        nextVNode.component = instance;\r\n        const prevProps = instance.vnode.props;\r\n        instance.vnode = nextVNode;\r\n        instance.next = null;\r\n        updateProps(instance, nextVNode.props, prevProps, optimized);\r\n        updateSlots(instance, nextVNode.children);\r\n        // props update may have triggered pre-flush watchers.\r\n        // flush them before the render update.\r\n        flushPreFlushCbs(undefined, instance.update);\r\n    };\r\n    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized = false) => {\r\n        const c1 = n1 && n1.children;\r\n        const prevShapeFlag = n1 ? n1.shapeFlag : 0;\r\n        const c2 = n2.children;\r\n        const { patchFlag, shapeFlag } = n2;\r\n        // fast path\r\n        if (patchFlag > 0) {\r\n            if (patchFlag & 128 /* KEYED_FRAGMENT */) {\r\n                // this could be either fully-keyed or mixed (some keyed some not)\r\n                // presence of patchFlag means children are guaranteed to be arrays\r\n                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n            else if (patchFlag & 256 /* UNKEYED_FRAGMENT */) {\r\n                // unkeyed\r\n                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n        }\r\n        // children has 3 possibilities: text, array or no children.\r\n        if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n            // text children fast path\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(c1, parentComponent, parentSuspense);\r\n            }\r\n            if (c2 !== c1) {\r\n                hostSetElementText(container, c2);\r\n            }\r\n        }\r\n        else {\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                // prev children was array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    // two arrays, cannot assume anything, do full diff\r\n                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else {\r\n                    // no new children, just unmount old\r\n                    unmountChildren(c1, parentComponent, parentSuspense, true);\r\n                }\r\n            }\r\n            else {\r\n                // prev children was text OR null\r\n                // new children is array OR null\r\n                if (prevShapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                    hostSetElementText(container, '');\r\n                }\r\n                // mount new if array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        c1 = c1 || EMPTY_ARR;\r\n        c2 = c2 || EMPTY_ARR;\r\n        const oldLength = c1.length;\r\n        const newLength = c2.length;\r\n        const commonLength = Math.min(oldLength, newLength);\r\n        let i;\r\n        for (i = 0; i < commonLength; i++) {\r\n            const nextChild = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        if (oldLength > newLength) {\r\n            // remove old\r\n            unmountChildren(c1, parentComponent, parentSuspense, true, false, commonLength);\r\n        }\r\n        else {\r\n            // mount new\r\n            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, commonLength);\r\n        }\r\n    };\r\n    // can be all-keyed or mixed\r\n    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let i = 0;\r\n        const l2 = c2.length;\r\n        let e1 = c1.length - 1; // prev ending index\r\n        let e2 = l2 - 1; // next ending index\r\n        // 1. sync from start\r\n        // (a b) c\r\n        // (a b) d e\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[i];\r\n            const n2 = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        // 2. sync from end\r\n        // a (b c)\r\n        // d e (b c)\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[e1];\r\n            const n2 = (c2[e2] = optimized\r\n                ? cloneIfMounted(c2[e2])\r\n                : normalizeVNode(c2[e2]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            e1--;\r\n            e2--;\r\n        }\r\n        // 3. common sequence + mount\r\n        // (a b)\r\n        // (a b) c\r\n        // i = 2, e1 = 1, e2 = 2\r\n        // (a b)\r\n        // c (a b)\r\n        // i = 0, e1 = -1, e2 = 0\r\n        if (i > e1) {\r\n            if (i <= e2) {\r\n                const nextPos = e2 + 1;\r\n                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\r\n                while (i <= e2) {\r\n                    patch(null, (c2[i] = optimized\r\n                        ? cloneIfMounted(c2[i])\r\n                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG);\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        // 4. common sequence + unmount\r\n        // (a b) c\r\n        // (a b)\r\n        // i = 2, e1 = 2, e2 = 1\r\n        // a (b c)\r\n        // (b c)\r\n        // i = 0, e1 = 0, e2 = -1\r\n        else if (i > e2) {\r\n            while (i <= e1) {\r\n                unmount(c1[i], parentComponent, parentSuspense, true);\r\n                i++;\r\n            }\r\n        }\r\n        // 5. unknown sequence\r\n        // [i ... e1 + 1]: a b [c d e] f g\r\n        // [i ... e2 + 1]: a b [e d c h] f g\r\n        // i = 2, e1 = 4, e2 = 5\r\n        else {\r\n            const s1 = i; // prev starting index\r\n            const s2 = i; // next starting index\r\n            // 5.1 build key:index map for newChildren\r\n            const keyToNewIndexMap = new Map();\r\n            for (i = s2; i <= e2; i++) {\r\n                const nextChild = (c2[i] = optimized\r\n                    ? cloneIfMounted(c2[i])\r\n                    : normalizeVNode(c2[i]));\r\n                if (nextChild.key != null) {\r\n                    if ((process.env.NODE_ENV !== 'production') && keyToNewIndexMap.has(nextChild.key)) {\r\n                        warn(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);\r\n                    }\r\n                    keyToNewIndexMap.set(nextChild.key, i);\r\n                }\r\n            }\r\n            // 5.2 loop through old children left to be patched and try to patch\r\n            // matching nodes & remove nodes that are no longer present\r\n            let j;\r\n            let patched = 0;\r\n            const toBePatched = e2 - s2 + 1;\r\n            let moved = false;\r\n            // used to track whether any node has moved\r\n            let maxNewIndexSoFar = 0;\r\n            // works as Map<newIndex, oldIndex>\r\n            // Note that oldIndex is offset by +1\r\n            // and oldIndex = 0 is a special value indicating the new node has\r\n            // no corresponding old node.\r\n            // used for determining longest stable subsequence\r\n            const newIndexToOldIndexMap = new Array(toBePatched);\r\n            for (i = 0; i < toBePatched; i++)\r\n                newIndexToOldIndexMap[i] = 0;\r\n            for (i = s1; i <= e1; i++) {\r\n                const prevChild = c1[i];\r\n                if (patched >= toBePatched) {\r\n                    // all new children have been patched so this can only be a removal\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                    continue;\r\n                }\r\n                let newIndex;\r\n                if (prevChild.key != null) {\r\n                    newIndex = keyToNewIndexMap.get(prevChild.key);\r\n                }\r\n                else {\r\n                    // key-less node, try to locate a key-less node of the same type\r\n                    for (j = s2; j <= e2; j++) {\r\n                        if (newIndexToOldIndexMap[j - s2] === 0 &&\r\n                            isSameVNodeType(prevChild, c2[j])) {\r\n                            newIndex = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (newIndex === undefined) {\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                }\r\n                else {\r\n                    newIndexToOldIndexMap[newIndex - s2] = i + 1;\r\n                    if (newIndex >= maxNewIndexSoFar) {\r\n                        maxNewIndexSoFar = newIndex;\r\n                    }\r\n                    else {\r\n                        moved = true;\r\n                    }\r\n                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n                    patched++;\r\n                }\r\n            }\r\n            // 5.3 move and mount\r\n            // generate longest stable subsequence only when nodes have moved\r\n            const increasingNewIndexSequence = moved\r\n                ? getSequence(newIndexToOldIndexMap)\r\n                : EMPTY_ARR;\r\n            j = increasingNewIndexSequence.length - 1;\r\n            // looping backwards so that we can use last patched node as anchor\r\n            for (i = toBePatched - 1; i >= 0; i--) {\r\n                const nextIndex = s2 + i;\r\n                const nextChild = c2[nextIndex];\r\n                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\r\n                if (newIndexToOldIndexMap[i] === 0) {\r\n                    // mount new\r\n                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG);\r\n                }\r\n                else if (moved) {\r\n                    // move if:\r\n                    // There is no stable subsequence (e.g. a reverse)\r\n                    // OR current node is not among the stable sequence\r\n                    if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n                        move(nextChild, container, anchor, 2 /* REORDER */);\r\n                    }\r\n                    else {\r\n                        j--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\r\n        const { el, type, transition, children, shapeFlag } = vnode;\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            move(vnode.component.subTree, container, anchor, moveType);\r\n            return;\r\n        }\r\n        if ( shapeFlag & 128 /* SUSPENSE */) {\r\n            vnode.suspense.move(container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type.move(vnode, container, anchor, internals);\r\n            return;\r\n        }\r\n        if (type === Fragment) {\r\n            hostInsert(el, container, anchor);\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, anchor, moveType);\r\n            }\r\n            hostInsert(vnode.anchor, container, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            moveStaticNode(vnode, container, anchor);\r\n            return;\r\n        }\r\n        // single nodes\r\n        const needTransition = moveType !== 2 /* REORDER */ &&\r\n            shapeFlag & 1 /* ELEMENT */ &&\r\n            transition;\r\n        if (needTransition) {\r\n            if (moveType === 0 /* ENTER */) {\r\n                transition.beforeEnter(el);\r\n                hostInsert(el, container, anchor);\r\n                queuePostRenderEffect(() => transition.enter(el), parentSuspense);\r\n            }\r\n            else {\r\n                const { leave, delayLeave, afterLeave } = transition;\r\n                const remove = () => hostInsert(el, container, anchor);\r\n                const performLeave = () => {\r\n                    leave(el, () => {\r\n                        remove();\r\n                        afterLeave && afterLeave();\r\n                    });\r\n                };\r\n                if (delayLeave) {\r\n                    delayLeave(el, remove, performLeave);\r\n                }\r\n                else {\r\n                    performLeave();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            hostInsert(el, container, anchor);\r\n        }\r\n    };\r\n    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\r\n        const { type, props, ref, children, dynamicChildren, shapeFlag, patchFlag, dirs } = vnode;\r\n        // unset ref\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, null);\r\n        }\r\n        if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n            parentComponent.ctx.deactivate(vnode);\r\n            return;\r\n        }\r\n        const shouldInvokeDirs = shapeFlag & 1 /* ELEMENT */ && dirs;\r\n        let vnodeHook;\r\n        if ((vnodeHook = props && props.onVnodeBeforeUnmount)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n        }\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            unmountComponent(vnode.component, parentSuspense, doRemove);\r\n        }\r\n        else {\r\n            if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                vnode.suspense.unmount(parentSuspense, doRemove);\r\n                return;\r\n            }\r\n            if (shouldInvokeDirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');\r\n            }\r\n            if (dynamicChildren &&\r\n                // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n                (type !== Fragment ||\r\n                    (patchFlag > 0 && patchFlag & 64 /* STABLE_FRAGMENT */))) {\r\n                // fast path for block nodes: only need to unmount dynamic children.\r\n                unmountChildren(dynamicChildren, parentComponent, parentSuspense, false, true);\r\n            }\r\n            else if ((type === Fragment &&\r\n                (patchFlag & 128 /* KEYED_FRAGMENT */ ||\r\n                    patchFlag & 256 /* UNKEYED_FRAGMENT */)) ||\r\n                (!optimized && shapeFlag & 16 /* ARRAY_CHILDREN */)) {\r\n                unmountChildren(children, parentComponent, parentSuspense);\r\n            }\r\n            // an unmounted teleport should always remove its children if not disabled\r\n            if (shapeFlag & 64 /* TELEPORT */ &&\r\n                (doRemove || !isTeleportDisabled(vnode.props))) {\r\n                vnode.type.remove(vnode, internals);\r\n            }\r\n            if (doRemove) {\r\n                remove(vnode);\r\n            }\r\n        }\r\n        if ((vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                shouldInvokeDirs &&\r\n                    invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const remove = vnode => {\r\n        const { type, el, anchor, transition } = vnode;\r\n        if (type === Fragment) {\r\n            removeFragment(el, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            removeStaticNode(vnode);\r\n            return;\r\n        }\r\n        const performRemove = () => {\r\n            hostRemove(el);\r\n            if (transition && !transition.persisted && transition.afterLeave) {\r\n                transition.afterLeave();\r\n            }\r\n        };\r\n        if (vnode.shapeFlag & 1 /* ELEMENT */ &&\r\n            transition &&\r\n            !transition.persisted) {\r\n            const { leave, delayLeave } = transition;\r\n            const performLeave = () => leave(el, performRemove);\r\n            if (delayLeave) {\r\n                delayLeave(vnode.el, performRemove, performLeave);\r\n            }\r\n            else {\r\n                performLeave();\r\n            }\r\n        }\r\n        else {\r\n            performRemove();\r\n        }\r\n    };\r\n    const removeFragment = (cur, end) => {\r\n        // For fragments, directly remove all contained DOM nodes.\r\n        // (fragment child nodes cannot have transition)\r\n        let next;\r\n        while (cur !== end) {\r\n            next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(end);\r\n    };\r\n    const unmountComponent = (instance, parentSuspense, doRemove) => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            unregisterHMR(instance);\r\n        }\r\n        const { bum, effects, update, subTree, um } = instance;\r\n        // beforeUnmount hook\r\n        if (bum) {\r\n            invokeArrayFns(bum);\r\n        }\r\n        if (effects) {\r\n            for (let i = 0; i < effects.length; i++) {\r\n                stop(effects[i]);\r\n            }\r\n        }\r\n        // update may be null if a component is unmounted before its async\r\n        // setup has resolved.\r\n        if (update) {\r\n            stop(update);\r\n            unmount(subTree, instance, parentSuspense, doRemove);\r\n        }\r\n        // unmounted hook\r\n        if (um) {\r\n            queuePostRenderEffect(um, parentSuspense);\r\n        }\r\n        queuePostRenderEffect(() => {\r\n            instance.isUnmounted = true;\r\n        }, parentSuspense);\r\n        // A component with async dep inside a pending suspense is unmounted before\r\n        // its async dep resolves. This should remove the dep from the suspense, and\r\n        // cause the suspense to resolve immediately if that was the last dep.\r\n        if (\r\n            parentSuspense &&\r\n            parentSuspense.pendingBranch &&\r\n            !parentSuspense.isUnmounted &&\r\n            instance.asyncDep &&\r\n            !instance.asyncResolved &&\r\n            instance.suspenseId === parentSuspense.pendingId) {\r\n            parentSuspense.deps--;\r\n            if (parentSuspense.deps === 0) {\r\n                parentSuspense.resolve();\r\n            }\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            devtoolsComponentRemoved(instance);\r\n        }\r\n    };\r\n    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\r\n        }\r\n    };\r\n    const getNextHostNode = vnode => {\r\n        if (vnode.shapeFlag & 6 /* COMPONENT */) {\r\n            return getNextHostNode(vnode.component.subTree);\r\n        }\r\n        if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n            return vnode.suspense.next();\r\n        }\r\n        return hostNextSibling((vnode.anchor || vnode.el));\r\n    };\r\n    const render = (vnode, container) => {\r\n        if (vnode == null) {\r\n            if (container._vnode) {\r\n                unmount(container._vnode, null, null, true);\r\n            }\r\n        }\r\n        else {\r\n            patch(container._vnode || null, vnode, container);\r\n        }\r\n        flushPostFlushCbs();\r\n        container._vnode = vnode;\r\n    };\r\n    const internals = {\r\n        p: patch,\r\n        um: unmount,\r\n        m: move,\r\n        r: remove,\r\n        mt: mountComponent,\r\n        mc: mountChildren,\r\n        pc: patchChildren,\r\n        pbc: patchBlockChildren,\r\n        n: getNextHostNode,\r\n        o: options\r\n    };\r\n    let hydrate;\r\n    let hydrateNode;\r\n    if (createHydrationFns) {\r\n        [hydrate, hydrateNode] = createHydrationFns(internals);\r\n    }\r\n    return {\r\n        render,\r\n        hydrate,\r\n        createApp: createAppAPI(render, hydrate)\r\n    };\r\n}\r\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\r\n    callWithAsyncErrorHandling(hook, instance, 7 /* VNODE_HOOK */, [\r\n        vnode,\r\n        prevVNode\r\n    ]);\r\n}\r\n/**\r\n * #1156\r\n * When a component is HMR-enabled, we need to make sure that all static nodes\r\n * inside a block also inherit the DOM element from the previous tree so that\r\n * HMR updates (which are full updates) can retrieve the element for patching.\r\n *\r\n * #2080\r\n * Inside keyed `template` fragment static children, if a fragment is moved,\r\n * the children will always moved so that need inherit el form previous nodes\r\n * to ensure correct moved position.\r\n */\r\nfunction traverseStaticChildren(n1, n2, shallow = false) {\r\n    const ch1 = n1.children;\r\n    const ch2 = n2.children;\r\n    if (isArray(ch1) && isArray(ch2)) {\r\n        for (let i = 0; i < ch1.length; i++) {\r\n            // this is only called in the optimized path so array children are\r\n            // guaranteed to be vnodes\r\n            const c1 = ch1[i];\r\n            let c2 = ch2[i];\r\n            if (c2.shapeFlag & 1 /* ELEMENT */ && !c2.dynamicChildren) {\r\n                if (c2.patchFlag <= 0 || c2.patchFlag === 32 /* HYDRATE_EVENTS */) {\r\n                    c2 = ch2[i] = cloneIfMounted(ch2[i]);\r\n                    c2.el = c1.el;\r\n                }\r\n                if (!shallow)\r\n                    traverseStaticChildren(c1, c2);\r\n            }\r\n            // also inherit for comment nodes, but not placeholders (e.g. v-if which\r\n            // would have received .el during block patch)\r\n            if ((process.env.NODE_ENV !== 'production') && c2.type === Comment && !c2.el) {\r\n                c2.el = c1.el;\r\n            }\r\n        }\r\n    }\r\n}\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr) {\r\n    const p = arr.slice();\r\n    const result = [0];\r\n    let i, j, u, v, c;\r\n    const len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        const arrI = arr[i];\r\n        if (arrI !== 0) {\r\n            j = result[result.length - 1];\r\n            if (arr[j] < arrI) {\r\n                p[i] = j;\r\n                result.push(i);\r\n                continue;\r\n            }\r\n            u = 0;\r\n            v = result.length - 1;\r\n            while (u < v) {\r\n                c = ((u + v) / 2) | 0;\r\n                if (arr[result[c]] < arrI) {\r\n                    u = c + 1;\r\n                }\r\n                else {\r\n                    v = c;\r\n                }\r\n            }\r\n            if (arrI < arr[result[u]]) {\r\n                if (u > 0) {\r\n                    p[i] = result[u - 1];\r\n                }\r\n                result[u] = i;\r\n            }\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\n\nconst isTeleport = (type) => type.__isTeleport;\r\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === '');\r\nconst isTargetSVG = (target) => typeof SVGElement !== 'undefined' && target instanceof SVGElement;\r\nconst resolveTarget = (props, select) => {\r\n    const targetSelector = props && props.to;\r\n    if (isString(targetSelector)) {\r\n        if (!select) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current renderer does not support string target for Teleports. ` +\r\n                    `(missing querySelector renderer option)`);\r\n            return null;\r\n        }\r\n        else {\r\n            const target = select(targetSelector);\r\n            if (!target) {\r\n                (process.env.NODE_ENV !== 'production') &&\r\n                    warn(`Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n                        `Note the target element must exist before the component is mounted - ` +\r\n                        `i.e. the target cannot be rendered by the component itself, and ` +\r\n                        `ideally should be outside of the entire Vue component tree.`);\r\n            }\r\n            return target;\r\n        }\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && !targetSelector && !isTeleportDisabled(props)) {\r\n            warn(`Invalid Teleport target: ${targetSelector}`);\r\n        }\r\n        return targetSelector;\r\n    }\r\n};\r\nconst TeleportImpl = {\r\n    __isTeleport: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals) {\r\n        const { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, o: { insert, querySelector, createText, createComment } } = internals;\r\n        const disabled = isTeleportDisabled(n2.props);\r\n        const { shapeFlag, children } = n2;\r\n        if (n1 == null) {\r\n            // insert anchors in the main view\r\n            const placeholder = (n2.el = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport start')\r\n                : createText(''));\r\n            const mainAnchor = (n2.anchor = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport end')\r\n                : createText(''));\r\n            insert(placeholder, container, anchor);\r\n            insert(mainAnchor, container, anchor);\r\n            const target = (n2.target = resolveTarget(n2.props, querySelector));\r\n            const targetAnchor = (n2.targetAnchor = createText(''));\r\n            if (target) {\r\n                insert(targetAnchor, target);\r\n                // #2652 we could be teleporting from a non-SVG tree into an SVG tree\r\n                isSVG = isSVG || isTargetSVG(target);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production') && !disabled) {\r\n                warn('Invalid Teleport target on mount:', target, `(${typeof target})`);\r\n            }\r\n            const mount = (container, anchor) => {\r\n                // Teleport *always* has Array children. This is enforced in both the\r\n                // compiler and vnode children normalization.\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            };\r\n            if (disabled) {\r\n                mount(container, mainAnchor);\r\n            }\r\n            else if (target) {\r\n                mount(target, targetAnchor);\r\n            }\r\n        }\r\n        else {\r\n            // update content\r\n            n2.el = n1.el;\r\n            const mainAnchor = (n2.anchor = n1.anchor);\r\n            const target = (n2.target = n1.target);\r\n            const targetAnchor = (n2.targetAnchor = n1.targetAnchor);\r\n            const wasDisabled = isTeleportDisabled(n1.props);\r\n            const currentContainer = wasDisabled ? container : target;\r\n            const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\r\n            isSVG = isSVG || isTargetSVG(target);\r\n            if (n2.dynamicChildren) {\r\n                // fast path when the teleport happens to be a block root\r\n                patchBlockChildren(n1.dynamicChildren, n2.dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG);\r\n                // even in block tree mode we need to make sure all root-level nodes\r\n                // in the teleport inherit previous DOM references so that they can\r\n                // be moved in future patches.\r\n                traverseStaticChildren(n1, n2, true);\r\n            }\r\n            else if (!optimized) {\r\n                patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            if (disabled) {\r\n                if (!wasDisabled) {\r\n                    // enabled -> disabled\r\n                    // move into main container\r\n                    moveTeleport(n2, container, mainAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n            else {\r\n                // target changed\r\n                if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n                    const nextTarget = (n2.target = resolveTarget(n2.props, querySelector));\r\n                    if (nextTarget) {\r\n                        moveTeleport(n2, nextTarget, null, internals, 0 /* TARGET_CHANGE */);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Invalid Teleport target on update:', target, `(${typeof target})`);\r\n                    }\r\n                }\r\n                else if (wasDisabled) {\r\n                    // disabled -> enabled\r\n                    // move into teleport target\r\n                    moveTeleport(n2, target, targetAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    remove(vnode, { r: remove, o: { remove: hostRemove } }) {\r\n        const { shapeFlag, children, anchor } = vnode;\r\n        hostRemove(anchor);\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                remove(children[i]);\r\n            }\r\n        }\r\n    },\r\n    move: moveTeleport,\r\n    hydrate: hydrateTeleport\r\n};\r\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2 /* REORDER */) {\r\n    // move target anchor if this is a target change.\r\n    if (moveType === 0 /* TARGET_CHANGE */) {\r\n        insert(vnode.targetAnchor, container, parentAnchor);\r\n    }\r\n    const { el, anchor, shapeFlag, children, props } = vnode;\r\n    const isReorder = moveType === 2 /* REORDER */;\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(el, container, parentAnchor);\r\n    }\r\n    // if this is a re-order and teleport is enabled (content is in target)\r\n    // do not move children. So the opposite is: only move children if this\r\n    // is not a reorder, or the teleport is disabled\r\n    if (!isReorder || isTeleportDisabled(props)) {\r\n        // Teleport has either Array children or no children.\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, parentAnchor, 2 /* REORDER */);\r\n            }\r\n        }\r\n    }\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(anchor, container, parentAnchor);\r\n    }\r\n}\r\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, optimized, { o: { nextSibling, parentNode, querySelector } }, hydrateChildren) {\r\n    const target = (vnode.target = resolveTarget(vnode.props, querySelector));\r\n    if (target) {\r\n        // if multiple teleports rendered to the same target element, we need to\r\n        // pick up from where the last teleport finished instead of the first node\r\n        const targetNode = target._lpa || target.firstChild;\r\n        if (vnode.shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            if (isTeleportDisabled(vnode.props)) {\r\n                vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, optimized);\r\n                vnode.targetAnchor = targetNode;\r\n            }\r\n            else {\r\n                vnode.anchor = nextSibling(node);\r\n                vnode.targetAnchor = hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, optimized);\r\n            }\r\n            target._lpa =\r\n                vnode.targetAnchor && nextSibling(vnode.targetAnchor);\r\n        }\r\n    }\r\n    return vnode.anchor && nextSibling(vnode.anchor);\r\n}\r\n// Force-casted public typing for h and TSX props inference\r\nconst Teleport = TeleportImpl;\n\nconst COMPONENTS = 'components';\r\nconst DIRECTIVES = 'directives';\r\n/**\r\n * @private\r\n */\r\nfunction resolveComponent(name) {\r\n    return resolveAsset(COMPONENTS, name) || name;\r\n}\r\nconst NULL_DYNAMIC_COMPONENT = Symbol();\r\n/**\r\n * @private\r\n */\r\nfunction resolveDynamicComponent(component) {\r\n    if (isString(component)) {\r\n        return resolveAsset(COMPONENTS, component, false) || component;\r\n    }\r\n    else {\r\n        // invalid types will fallthrough to createVNode and raise warning\r\n        return (component || NULL_DYNAMIC_COMPONENT);\r\n    }\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction resolveDirective(name) {\r\n    return resolveAsset(DIRECTIVES, name);\r\n}\r\n// implementation\r\nfunction resolveAsset(type, name, warnMissing = true) {\r\n    const instance = currentRenderingInstance || currentInstance;\r\n    if (instance) {\r\n        const Component = instance.type;\r\n        // self name has highest priority\r\n        if (type === COMPONENTS) {\r\n            // special self referencing call generated by compiler\r\n            // inferred from SFC filename\r\n            if (name === `_self`) {\r\n                return Component;\r\n            }\r\n            const selfName = getComponentName(Component);\r\n            if (selfName &&\r\n                (selfName === name ||\r\n                    selfName === camelize(name) ||\r\n                    selfName === capitalize(camelize(name)))) {\r\n                return Component;\r\n            }\r\n        }\r\n        const res = \r\n        // local registration\r\n        // check instance[type] first for components with mixin or extends.\r\n        resolve(instance[type] || Component[type], name) ||\r\n            // global registration\r\n            resolve(instance.appContext[type], name);\r\n        if ((process.env.NODE_ENV !== 'production') && warnMissing && !res) {\r\n            warn(`Failed to resolve ${type.slice(0, -1)}: ${name}`);\r\n        }\r\n        return res;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`resolve${capitalize(type.slice(0, -1))} ` +\r\n            `can only be used in render() or setup().`);\r\n    }\r\n}\r\nfunction resolve(registry, name) {\r\n    return (registry &&\r\n        (registry[name] ||\r\n            registry[camelize(name)] ||\r\n            registry[capitalize(camelize(name))]));\r\n}\n\nconst Fragment = Symbol((process.env.NODE_ENV !== 'production') ? 'Fragment' : undefined);\r\nconst Text = Symbol((process.env.NODE_ENV !== 'production') ? 'Text' : undefined);\r\nconst Comment = Symbol((process.env.NODE_ENV !== 'production') ? 'Comment' : undefined);\r\nconst Static = Symbol((process.env.NODE_ENV !== 'production') ? 'Static' : undefined);\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nconst blockStack = [];\r\nlet currentBlock = null;\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nfunction openBlock(disableTracking = false) {\r\n    blockStack.push((currentBlock = disableTracking ? null : []));\r\n}\r\nfunction closeBlock() {\r\n    blockStack.pop();\r\n    currentBlock = blockStack[blockStack.length - 1] || null;\r\n}\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nlet shouldTrack = 1;\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nfunction setBlockTracking(value) {\r\n    shouldTrack += value;\r\n}\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\r\n    const vnode = createVNode(type, props, children, patchFlag, dynamicProps, true /* isBlock: prevent a block from tracking itself */);\r\n    // save current block children on the block vnode\r\n    vnode.dynamicChildren = currentBlock || EMPTY_ARR;\r\n    // close block\r\n    closeBlock();\r\n    // a block is always going to be patched, so track it as a child of its\r\n    // parent block\r\n    if (shouldTrack > 0 && currentBlock) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction isVNode(value) {\r\n    return value ? value.__v_isVNode === true : false;\r\n}\r\nfunction isSameVNodeType(n1, n2) {\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        n2.shapeFlag & 6 /* COMPONENT */ &&\r\n        hmrDirtyComponents.has(n2.type)) {\r\n        // HMR only: if the component has been hot-updated, force a reload.\r\n        return false;\r\n    }\r\n    return n1.type === n2.type && n1.key === n2.key;\r\n}\r\nlet vnodeArgsTransformer;\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nfunction transformVNodeArgs(transformer) {\r\n    vnodeArgsTransformer = transformer;\r\n}\r\nconst createVNodeWithArgsTransform = (...args) => {\r\n    return _createVNode(...(vnodeArgsTransformer\r\n        ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n        : args));\r\n};\r\nconst InternalObjectKey = `__vInternal`;\r\nconst normalizeKey = ({ key }) => key != null ? key : null;\r\nconst normalizeRef = ({ ref }) => {\r\n    return (ref != null\r\n        ? isString(ref) || isRef(ref) || isFunction(ref)\r\n            ? { i: currentRenderingInstance, r: ref }\r\n            : ref\r\n        : null);\r\n};\r\nconst createVNode = ((process.env.NODE_ENV !== 'production')\r\n    ? createVNodeWithArgsTransform\r\n    : _createVNode);\r\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\r\n    if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n        if ((process.env.NODE_ENV !== 'production') && !type) {\r\n            warn(`Invalid vnode type when creating vnode: ${type}.`);\r\n        }\r\n        type = Comment;\r\n    }\r\n    if (isVNode(type)) {\r\n        // createVNode receiving an existing vnode. This happens in cases like\r\n        // <component :is=\"vnode\"/>\r\n        // #2078 make sure to merge refs during the clone instead of overwriting it\r\n        const cloned = cloneVNode(type, props, true /* mergeRef: true */);\r\n        if (children) {\r\n            normalizeChildren(cloned, children);\r\n        }\r\n        return cloned;\r\n    }\r\n    // class component normalization.\r\n    if (isClassComponent(type)) {\r\n        type = type.__vccOpts;\r\n    }\r\n    // class & style normalization.\r\n    if (props) {\r\n        // for reactive or proxy objects, we need to clone it to enable mutation.\r\n        if (isProxy(props) || InternalObjectKey in props) {\r\n            props = extend({}, props);\r\n        }\r\n        let { class: klass, style } = props;\r\n        if (klass && !isString(klass)) {\r\n            props.class = normalizeClass(klass);\r\n        }\r\n        if (isObject(style)) {\r\n            // reactive state objects need to be cloned since they are likely to be\r\n            // mutated\r\n            if (isProxy(style) && !isArray(style)) {\r\n                style = extend({}, style);\r\n            }\r\n            props.style = normalizeStyle(style);\r\n        }\r\n    }\r\n    // encode the vnode type information into a bitmap\r\n    const shapeFlag = isString(type)\r\n        ? 1 /* ELEMENT */\r\n        :  isSuspense(type)\r\n            ? 128 /* SUSPENSE */\r\n            : isTeleport(type)\r\n                ? 64 /* TELEPORT */\r\n                : isObject(type)\r\n                    ? 4 /* STATEFUL_COMPONENT */\r\n                    : isFunction(type)\r\n                        ? 2 /* FUNCTIONAL_COMPONENT */\r\n                        : 0;\r\n    if ((process.env.NODE_ENV !== 'production') && shapeFlag & 4 /* STATEFUL_COMPONENT */ && isProxy(type)) {\r\n        type = toRaw(type);\r\n        warn(`Vue received a Component which was made a reactive object. This can ` +\r\n            `lead to unnecessary performance overhead, and should be avoided by ` +\r\n            `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n            `instead of \\`ref\\`.`, `\\nComponent that was made reactive: `, type);\r\n    }\r\n    const vnode = {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type,\r\n        props,\r\n        key: props && normalizeKey(props),\r\n        ref: props && normalizeRef(props),\r\n        scopeId: currentScopeId,\r\n        children: null,\r\n        component: null,\r\n        suspense: null,\r\n        ssContent: null,\r\n        ssFallback: null,\r\n        dirs: null,\r\n        transition: null,\r\n        el: null,\r\n        anchor: null,\r\n        target: null,\r\n        targetAnchor: null,\r\n        staticCount: 0,\r\n        shapeFlag,\r\n        patchFlag,\r\n        dynamicProps,\r\n        dynamicChildren: null,\r\n        appContext: null\r\n    };\r\n    // validate key\r\n    if ((process.env.NODE_ENV !== 'production') && vnode.key !== vnode.key) {\r\n        warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\r\n    }\r\n    normalizeChildren(vnode, children);\r\n    // normalize suspense children\r\n    if ( shapeFlag & 128 /* SUSPENSE */) {\r\n        const { content, fallback } = normalizeSuspenseChildren(vnode);\r\n        vnode.ssContent = content;\r\n        vnode.ssFallback = fallback;\r\n    }\r\n    if (shouldTrack > 0 &&\r\n        // avoid a block node from tracking itself\r\n        !isBlockNode &&\r\n        // has current parent block\r\n        currentBlock &&\r\n        // presence of a patch flag indicates this node needs patching on updates.\r\n        // component nodes also should always be patched, because even if the\r\n        // component doesn't need to update, it needs to persist the instance on to\r\n        // the next vnode so that it can be properly unmounted later.\r\n        (patchFlag > 0 || shapeFlag & 6 /* COMPONENT */) &&\r\n        // the EVENTS flag is only for hydration and if it is the only flag, the\r\n        // vnode should not be considered dynamic due to handler caching.\r\n        patchFlag !== 32 /* HYDRATE_EVENTS */) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\r\n    // This is intentionally NOT using spread or extend to avoid the runtime\r\n    // key enumeration cost.\r\n    const { props, ref, patchFlag } = vnode;\r\n    const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\r\n    return {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type: vnode.type,\r\n        props: mergedProps,\r\n        key: mergedProps && normalizeKey(mergedProps),\r\n        ref: extraProps && extraProps.ref\r\n            ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\r\n                // if the vnode itself already has a ref, cloneVNode will need to merge\r\n                // the refs so the single vnode can be set on multiple refs\r\n                mergeRef && ref\r\n                    ? isArray(ref)\r\n                        ? ref.concat(normalizeRef(extraProps))\r\n                        : [ref, normalizeRef(extraProps)]\r\n                    : normalizeRef(extraProps)\r\n            : ref,\r\n        scopeId: vnode.scopeId,\r\n        children: vnode.children,\r\n        target: vnode.target,\r\n        targetAnchor: vnode.targetAnchor,\r\n        staticCount: vnode.staticCount,\r\n        shapeFlag: vnode.shapeFlag,\r\n        // if the vnode is cloned with extra props, we can no longer assume its\r\n        // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n        // note: perserve flag for fragments since they use the flag for children\r\n        // fast paths only.\r\n        patchFlag: extraProps && vnode.type !== Fragment\r\n            ? patchFlag === -1 // hoisted node\r\n                ? 16 /* FULL_PROPS */\r\n                : patchFlag | 16 /* FULL_PROPS */\r\n            : patchFlag,\r\n        dynamicProps: vnode.dynamicProps,\r\n        dynamicChildren: vnode.dynamicChildren,\r\n        appContext: vnode.appContext,\r\n        dirs: vnode.dirs,\r\n        transition: vnode.transition,\r\n        // These should technically only be non-null on mounted VNodes. However,\r\n        // they *should* be copied for kept-alive vnodes. So we just always copy\r\n        // them since them being non-null during a mount doesn't affect the logic as\r\n        // they will simply be overwritten.\r\n        component: vnode.component,\r\n        suspense: vnode.suspense,\r\n        ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\r\n        ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\r\n        el: vnode.el,\r\n        anchor: vnode.anchor\r\n    };\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createTextVNode(text = ' ', flag = 0) {\r\n    return createVNode(Text, null, text, flag);\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createStaticVNode(content, numberOfNodes) {\r\n    // A static vnode can contain multiple stringified elements, and the number\r\n    // of elements is necessary for hydration.\r\n    const vnode = createVNode(Static, null, content);\r\n    vnode.staticCount = numberOfNodes;\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createCommentVNode(text = '', \r\n// when used as the v-else branch, the comment node must be created as a\r\n// block to ensure correct updates.\r\nasBlock = false) {\r\n    return asBlock\r\n        ? (openBlock(), createBlock(Comment, null, text))\r\n        : createVNode(Comment, null, text);\r\n}\r\nfunction normalizeVNode(child) {\r\n    if (child == null || typeof child === 'boolean') {\r\n        // empty placeholder\r\n        return createVNode(Comment);\r\n    }\r\n    else if (isArray(child)) {\r\n        // fragment\r\n        return createVNode(Fragment, null, child);\r\n    }\r\n    else if (typeof child === 'object') {\r\n        // already vnode, this should be the most common since compiled templates\r\n        // always produce all-vnode children arrays\r\n        return child.el === null ? child : cloneVNode(child);\r\n    }\r\n    else {\r\n        // strings and numbers\r\n        return createVNode(Text, null, String(child));\r\n    }\r\n}\r\n// optimized normalization for template-compiled render fns\r\nfunction cloneIfMounted(child) {\r\n    return child.el === null ? child : cloneVNode(child);\r\n}\r\nfunction normalizeChildren(vnode, children) {\r\n    let type = 0;\r\n    const { shapeFlag } = vnode;\r\n    if (children == null) {\r\n        children = null;\r\n    }\r\n    else if (isArray(children)) {\r\n        type = 16 /* ARRAY_CHILDREN */;\r\n    }\r\n    else if (typeof children === 'object') {\r\n        if (shapeFlag & 1 /* ELEMENT */ || shapeFlag & 64 /* TELEPORT */) {\r\n            // Normalize slot to plain children for plain element and Teleport\r\n            const slot = children.default;\r\n            if (slot) {\r\n                // _c marker is added by withCtx() indicating this is a compiled slot\r\n                slot._c && setCompiledSlotRendering(1);\r\n                normalizeChildren(vnode, slot());\r\n                slot._c && setCompiledSlotRendering(-1);\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            type = 32 /* SLOTS_CHILDREN */;\r\n            const slotFlag = children._;\r\n            if (!slotFlag && !(InternalObjectKey in children)) {\r\n                children._ctx = currentRenderingInstance;\r\n            }\r\n            else if (slotFlag === 3 /* FORWARDED */ && currentRenderingInstance) {\r\n                // a child component receives forwarded slots from the parent.\r\n                // its slot type is determined by its parent's slot type.\r\n                if (currentRenderingInstance.vnode.patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n                    children._ = 2 /* DYNAMIC */;\r\n                    vnode.patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n                else {\r\n                    children._ = 1 /* STABLE */;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(children)) {\r\n        children = { default: children, _ctx: currentRenderingInstance };\r\n        type = 32 /* SLOTS_CHILDREN */;\r\n    }\r\n    else {\r\n        children = String(children);\r\n        // force teleport children to array so it can be moved around\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type = 16 /* ARRAY_CHILDREN */;\r\n            children = [createTextVNode(children)];\r\n        }\r\n        else {\r\n            type = 8 /* TEXT_CHILDREN */;\r\n        }\r\n    }\r\n    vnode.children = children;\r\n    vnode.shapeFlag |= type;\r\n}\r\nfunction mergeProps(...args) {\r\n    const ret = extend({}, args[0]);\r\n    for (let i = 1; i < args.length; i++) {\r\n        const toMerge = args[i];\r\n        for (const key in toMerge) {\r\n            if (key === 'class') {\r\n                if (ret.class !== toMerge.class) {\r\n                    ret.class = normalizeClass([ret.class, toMerge.class]);\r\n                }\r\n            }\r\n            else if (key === 'style') {\r\n                ret.style = normalizeStyle([ret.style, toMerge.style]);\r\n            }\r\n            else if (isOn(key)) {\r\n                const existing = ret[key];\r\n                const incoming = toMerge[key];\r\n                if (existing !== incoming) {\r\n                    ret[key] = existing\r\n                        ? [].concat(existing, toMerge[key])\r\n                        : incoming;\r\n                }\r\n            }\r\n            else if (key !== '') {\r\n                ret[key] = toMerge[key];\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nfunction provide(key, value) {\r\n    if (!currentInstance) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`provide() can only be used inside setup().`);\r\n        }\r\n    }\r\n    else {\r\n        let provides = currentInstance.provides;\r\n        // by default an instance inherits its parent's provides object\r\n        // but when it needs to provide values of its own, it creates its\r\n        // own provides object using parent provides object as prototype.\r\n        // this way in `inject` we can simply look up injections from direct\r\n        // parent and let the prototype chain do the work.\r\n        const parentProvides = currentInstance.parent && currentInstance.parent.provides;\r\n        if (parentProvides === provides) {\r\n            provides = currentInstance.provides = Object.create(parentProvides);\r\n        }\r\n        // TS doesn't allow symbol as index type\r\n        provides[key] = value;\r\n    }\r\n}\r\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\r\n    // fallback to `currentRenderingInstance` so that this can be called in\r\n    // a functional component\r\n    const instance = currentInstance || currentRenderingInstance;\r\n    if (instance) {\r\n        // #2400\r\n        // to support `app.use` plugins,\r\n        // fallback to appContext's `provides` if the intance is at root\r\n        const provides = instance.parent == null\r\n            ? instance.vnode.appContext && instance.vnode.appContext.provides\r\n            : instance.parent.provides;\r\n        if (provides && key in provides) {\r\n            // TS doesn't allow symbol as index type\r\n            return provides[key];\r\n        }\r\n        else if (arguments.length > 1) {\r\n            return treatDefaultAsFactory && isFunction(defaultValue)\r\n                ? defaultValue()\r\n                : defaultValue;\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`injection \"${String(key)}\" not found.`);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`inject() can only be used inside setup() or functional components.`);\r\n    }\r\n}\n\nfunction createDuplicateChecker() {\r\n    const cache = Object.create(null);\r\n    return (type, key) => {\r\n        if (cache[key]) {\r\n            warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\r\n        }\r\n        else {\r\n            cache[key] = type;\r\n        }\r\n    };\r\n}\r\nlet isInBeforeCreate = false;\r\nfunction applyOptions(instance, options, deferredData = [], deferredWatch = [], deferredProvide = [], asMixin = false) {\r\n    const { \r\n    // composition\r\n    mixins, extends: extendsOptions, \r\n    // state\r\n    data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, \r\n    // assets\r\n    components, directives, \r\n    // lifecycle\r\n    beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeDestroy, beforeUnmount, destroyed, unmounted, render, renderTracked, renderTriggered, errorCaptured, \r\n    // public API\r\n    expose } = options;\r\n    const publicThis = instance.proxy;\r\n    const ctx = instance.ctx;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (asMixin && render && instance.render === NOOP) {\r\n        instance.render = render;\r\n    }\r\n    // applyOptions is called non-as-mixin once per instance\r\n    if (!asMixin) {\r\n        isInBeforeCreate = true;\r\n        callSyncHook('beforeCreate', \"bc\" /* BEFORE_CREATE */, options, instance, globalMixins);\r\n        isInBeforeCreate = false;\r\n        // global mixins are applied first\r\n        applyMixins(instance, globalMixins, deferredData, deferredWatch, deferredProvide);\r\n    }\r\n    // extending a base component...\r\n    if (extendsOptions) {\r\n        applyOptions(instance, extendsOptions, deferredData, deferredWatch, deferredProvide, true);\r\n    }\r\n    // local mixins\r\n    if (mixins) {\r\n        applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide);\r\n    }\r\n    const checkDuplicateProperties = (process.env.NODE_ENV !== 'production') ? createDuplicateChecker() : null;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const [propsOptions] = instance.propsOptions;\r\n        if (propsOptions) {\r\n            for (const key in propsOptions) {\r\n                checkDuplicateProperties(\"Props\" /* PROPS */, key);\r\n            }\r\n        }\r\n    }\r\n    // options initialization order (to be consistent with Vue 2):\r\n    // - props (already done outside of this function)\r\n    // - inject\r\n    // - methods\r\n    // - data (deferred since it relies on `this` access)\r\n    // - computed\r\n    // - watch (deferred since it relies on `this` access)\r\n    if (injectOptions) {\r\n        if (isArray(injectOptions)) {\r\n            for (let i = 0; i < injectOptions.length; i++) {\r\n                const key = injectOptions[i];\r\n                ctx[key] = inject(key);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (const key in injectOptions) {\r\n                const opt = injectOptions[key];\r\n                if (isObject(opt)) {\r\n                    ctx[key] = inject(opt.from || key, opt.default, true /* treat default function as factory */);\r\n                }\r\n                else {\r\n                    ctx[key] = inject(opt);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (methods) {\r\n        for (const key in methods) {\r\n            const methodHandler = methods[key];\r\n            if (isFunction(methodHandler)) {\r\n                ctx[key] = methodHandler.bind(publicThis);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Methods\" /* METHODS */, key);\r\n                }\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n                    `Did you reference the function correctly?`);\r\n            }\r\n        }\r\n    }\r\n    if (!asMixin) {\r\n        if (deferredData.length) {\r\n            deferredData.forEach(dataFn => resolveData(instance, dataFn, publicThis));\r\n        }\r\n        if (dataOptions) {\r\n            // @ts-ignore dataOptions is not fully type safe\r\n            resolveData(instance, dataOptions, publicThis);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const rawData = toRaw(instance.data);\r\n            for (const key in rawData) {\r\n                checkDuplicateProperties(\"Data\" /* DATA */, key);\r\n                // expose data on ctx during dev\r\n                if (key[0] !== '$' && key[0] !== '_') {\r\n                    Object.defineProperty(ctx, key, {\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        get: () => rawData[key],\r\n                        set: NOOP\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (dataOptions) {\r\n        deferredData.push(dataOptions);\r\n    }\r\n    if (computedOptions) {\r\n        for (const key in computedOptions) {\r\n            const opt = computedOptions[key];\r\n            const get = isFunction(opt)\r\n                ? opt.bind(publicThis, publicThis)\r\n                : isFunction(opt.get)\r\n                    ? opt.get.bind(publicThis, publicThis)\r\n                    : NOOP;\r\n            if ((process.env.NODE_ENV !== 'production') && get === NOOP) {\r\n                warn(`Computed property \"${key}\" has no getter.`);\r\n            }\r\n            const set = !isFunction(opt) && isFunction(opt.set)\r\n                ? opt.set.bind(publicThis)\r\n                : (process.env.NODE_ENV !== 'production')\r\n                    ? () => {\r\n                        warn(`Write operation failed: computed property \"${key}\" is readonly.`);\r\n                    }\r\n                    : NOOP;\r\n            const c = computed({\r\n                get,\r\n                set\r\n            });\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => c.value,\r\n                set: v => (c.value = v)\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\r\n            }\r\n        }\r\n    }\r\n    if (watchOptions) {\r\n        deferredWatch.push(watchOptions);\r\n    }\r\n    if (!asMixin && deferredWatch.length) {\r\n        deferredWatch.forEach(watchOptions => {\r\n            for (const key in watchOptions) {\r\n                createWatcher(watchOptions[key], ctx, publicThis, key);\r\n            }\r\n        });\r\n    }\r\n    if (provideOptions) {\r\n        deferredProvide.push(provideOptions);\r\n    }\r\n    if (!asMixin && deferredProvide.length) {\r\n        deferredProvide.forEach(provideOptions => {\r\n            const provides = isFunction(provideOptions)\r\n                ? provideOptions.call(publicThis)\r\n                : provideOptions;\r\n            Reflect.ownKeys(provides).forEach(key => {\r\n                provide(key, provides[key]);\r\n            });\r\n        });\r\n    }\r\n    // asset options.\r\n    // To reduce memory usage, only components with mixins or extends will have\r\n    // resolved asset registry attached to instance.\r\n    if (asMixin) {\r\n        if (components) {\r\n            extend(instance.components ||\r\n                (instance.components = extend({}, instance.type.components)), components);\r\n        }\r\n        if (directives) {\r\n            extend(instance.directives ||\r\n                (instance.directives = extend({}, instance.type.directives)), directives);\r\n        }\r\n    }\r\n    // lifecycle options\r\n    if (!asMixin) {\r\n        callSyncHook('created', \"c\" /* CREATED */, options, instance, globalMixins);\r\n    }\r\n    if (beforeMount) {\r\n        onBeforeMount(beforeMount.bind(publicThis));\r\n    }\r\n    if (mounted) {\r\n        onMounted(mounted.bind(publicThis));\r\n    }\r\n    if (beforeUpdate) {\r\n        onBeforeUpdate(beforeUpdate.bind(publicThis));\r\n    }\r\n    if (updated) {\r\n        onUpdated(updated.bind(publicThis));\r\n    }\r\n    if (activated) {\r\n        onActivated(activated.bind(publicThis));\r\n    }\r\n    if (deactivated) {\r\n        onDeactivated(deactivated.bind(publicThis));\r\n    }\r\n    if (errorCaptured) {\r\n        onErrorCaptured(errorCaptured.bind(publicThis));\r\n    }\r\n    if (renderTracked) {\r\n        onRenderTracked(renderTracked.bind(publicThis));\r\n    }\r\n    if (renderTriggered) {\r\n        onRenderTriggered(renderTriggered.bind(publicThis));\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && beforeDestroy) {\r\n        warn(`\\`beforeDestroy\\` has been renamed to \\`beforeUnmount\\`.`);\r\n    }\r\n    if (beforeUnmount) {\r\n        onBeforeUnmount(beforeUnmount.bind(publicThis));\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && destroyed) {\r\n        warn(`\\`destroyed\\` has been renamed to \\`unmounted\\`.`);\r\n    }\r\n    if (unmounted) {\r\n        onUnmounted(unmounted.bind(publicThis));\r\n    }\r\n    if (isArray(expose)) {\r\n        if (!asMixin) {\r\n            if (expose.length) {\r\n                const exposed = instance.exposed || (instance.exposed = proxyRefs({}));\r\n                expose.forEach(key => {\r\n                    exposed[key] = toRef(publicThis, key);\r\n                });\r\n            }\r\n            else if (!instance.exposed) {\r\n                instance.exposed = EMPTY_OBJ;\r\n            }\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`The \\`expose\\` option is ignored when used in mixins.`);\r\n        }\r\n    }\r\n}\r\nfunction callSyncHook(name, type, options, instance, globalMixins) {\r\n    callHookFromMixins(name, type, globalMixins, instance);\r\n    const { extends: base, mixins } = options;\r\n    if (base) {\r\n        callHookFromExtends(name, type, base, instance);\r\n    }\r\n    if (mixins) {\r\n        callHookFromMixins(name, type, mixins, instance);\r\n    }\r\n    const selfHook = options[name];\r\n    if (selfHook) {\r\n        callWithAsyncErrorHandling(selfHook.bind(instance.proxy), instance, type);\r\n    }\r\n}\r\nfunction callHookFromExtends(name, type, base, instance) {\r\n    if (base.extends) {\r\n        callHookFromExtends(name, type, base.extends, instance);\r\n    }\r\n    const baseHook = base[name];\r\n    if (baseHook) {\r\n        callWithAsyncErrorHandling(baseHook.bind(instance.proxy), instance, type);\r\n    }\r\n}\r\nfunction callHookFromMixins(name, type, mixins, instance) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        const chainedMixins = mixins[i].mixins;\r\n        if (chainedMixins) {\r\n            callHookFromMixins(name, type, chainedMixins, instance);\r\n        }\r\n        const fn = mixins[i][name];\r\n        if (fn) {\r\n            callWithAsyncErrorHandling(fn.bind(instance.proxy), instance, type);\r\n        }\r\n    }\r\n}\r\nfunction applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        applyOptions(instance, mixins[i], deferredData, deferredWatch, deferredProvide, true);\r\n    }\r\n}\r\nfunction resolveData(instance, dataFn, publicThis) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(dataFn)) {\r\n        warn(`The data option must be a function. ` +\r\n            `Plain object usage is no longer supported.`);\r\n    }\r\n    const data = dataFn.call(publicThis, publicThis);\r\n    if ((process.env.NODE_ENV !== 'production') && isPromise(data)) {\r\n        warn(`data() returned a Promise - note data() cannot be async; If you ` +\r\n            `intend to perform data fetching before component renders, use ` +\r\n            `async setup() + <Suspense>.`);\r\n    }\r\n    if (!isObject(data)) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`data() should return an object.`);\r\n    }\r\n    else if (instance.data === EMPTY_OBJ) {\r\n        instance.data = reactive(data);\r\n    }\r\n    else {\r\n        // existing data: this is a mixin or extends.\r\n        extend(instance.data, data);\r\n    }\r\n}\r\nfunction createWatcher(raw, ctx, publicThis, key) {\r\n    const getter = key.includes('.')\r\n        ? createPathGetter(publicThis, key)\r\n        : () => publicThis[key];\r\n    if (isString(raw)) {\r\n        const handler = ctx[raw];\r\n        if (isFunction(handler)) {\r\n            watch(getter, handler);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\r\n        }\r\n    }\r\n    else if (isFunction(raw)) {\r\n        watch(getter, raw.bind(publicThis));\r\n    }\r\n    else if (isObject(raw)) {\r\n        if (isArray(raw)) {\r\n            raw.forEach(r => createWatcher(r, ctx, publicThis, key));\r\n        }\r\n        else {\r\n            const handler = isFunction(raw.handler)\r\n                ? raw.handler.bind(publicThis)\r\n                : ctx[raw.handler];\r\n            if (isFunction(handler)) {\r\n                watch(getter, handler, raw);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\r\n            }\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid watch option: \"${key}\"`, raw);\r\n    }\r\n}\r\nfunction createPathGetter(ctx, path) {\r\n    const segments = path.split('.');\r\n    return () => {\r\n        let cur = ctx;\r\n        for (let i = 0; i < segments.length && cur; i++) {\r\n            cur = cur[segments[i]];\r\n        }\r\n        return cur;\r\n    };\r\n}\r\nfunction resolveMergedOptions(instance) {\r\n    const raw = instance.type;\r\n    const { __merged, mixins, extends: extendsOptions } = raw;\r\n    if (__merged)\r\n        return __merged;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (!globalMixins.length && !mixins && !extendsOptions)\r\n        return raw;\r\n    const options = {};\r\n    globalMixins.forEach(m => mergeOptions(options, m, instance));\r\n    mergeOptions(options, raw, instance);\r\n    return (raw.__merged = options);\r\n}\r\nfunction mergeOptions(to, from, instance) {\r\n    const strats = instance.appContext.config.optionMergeStrategies;\r\n    const { mixins, extends: extendsOptions } = from;\r\n    extendsOptions && mergeOptions(to, extendsOptions, instance);\r\n    mixins &&\r\n        mixins.forEach((m) => mergeOptions(to, m, instance));\r\n    for (const key in from) {\r\n        if (strats && hasOwn(strats, key)) {\r\n            to[key] = strats[key](to[key], from[key], instance.proxy, key);\r\n        }\r\n        else {\r\n            to[key] = from[key];\r\n        }\r\n    }\r\n}\n\n/**\r\n * #2437 In Vue 3, functional components do not have a public instance proxy but\r\n * they exist in the internal parent chain. For code that relies on traversing\r\n * public $parent chains, skip functional ones and go to the parent instead.\r\n */\r\nconst getPublicInstance = (i) => i && (i.proxy ? i.proxy : getPublicInstance(i.parent));\r\nconst publicPropertiesMap = extend(Object.create(null), {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.props) : i.props),\r\n    $attrs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.attrs) : i.attrs),\r\n    $slots: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.slots) : i.slots),\r\n    $refs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.refs) : i.refs),\r\n    $parent: i => getPublicInstance(i.parent),\r\n    $root: i => i.root && i.root.proxy,\r\n    $emit: i => i.emit,\r\n    $options: i => (__VUE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\r\n    $forceUpdate: i => () => queueJob(i.update),\r\n    $nextTick: i => nextTick.bind(i.proxy),\r\n    $watch: i => (__VUE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP)\r\n});\r\nconst PublicInstanceProxyHandlers = {\r\n    get({ _: instance }, key) {\r\n        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\r\n        // let @vue/reactivity know it should never observe Vue public instances.\r\n        if (key === \"__v_skip\" /* SKIP */) {\r\n            return true;\r\n        }\r\n        // for internal formatters to know that this is a Vue instance\r\n        if ((process.env.NODE_ENV !== 'production') && key === '__isVue') {\r\n            return true;\r\n        }\r\n        // data / props / ctx\r\n        // This getter gets called for every property access on the render context\r\n        // during render and is a major hotspot. The most expensive part of this\r\n        // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n        // access on a plain object, so we use an accessCache object (with null\r\n        // prototype) to memoize what access type a key corresponds to.\r\n        let normalizedProps;\r\n        if (key[0] !== '$') {\r\n            const n = accessCache[key];\r\n            if (n !== undefined) {\r\n                switch (n) {\r\n                    case 0 /* SETUP */:\r\n                        return setupState[key];\r\n                    case 1 /* DATA */:\r\n                        return data[key];\r\n                    case 3 /* CONTEXT */:\r\n                        return ctx[key];\r\n                    case 2 /* PROPS */:\r\n                        return props[key];\r\n                    // default: just fallthrough\r\n                }\r\n            }\r\n            else if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n                accessCache[key] = 0 /* SETUP */;\r\n                return setupState[key];\r\n            }\r\n            else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n                accessCache[key] = 1 /* DATA */;\r\n                return data[key];\r\n            }\r\n            else if (\r\n            // only cache other properties when instance has declared (thus stable)\r\n            // props\r\n            (normalizedProps = instance.propsOptions[0]) &&\r\n                hasOwn(normalizedProps, key)) {\r\n                accessCache[key] = 2 /* PROPS */;\r\n                return props[key];\r\n            }\r\n            else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n                accessCache[key] = 3 /* CONTEXT */;\r\n                return ctx[key];\r\n            }\r\n            else if (!__VUE_OPTIONS_API__ || !isInBeforeCreate) {\r\n                accessCache[key] = 4 /* OTHER */;\r\n            }\r\n        }\r\n        const publicGetter = publicPropertiesMap[key];\r\n        let cssModule, globalProperties;\r\n        // public $xxx properties\r\n        if (publicGetter) {\r\n            if (key === '$attrs') {\r\n                track(instance, \"get\" /* GET */, key);\r\n                (process.env.NODE_ENV !== 'production') && markAttrsAccessed();\r\n            }\r\n            return publicGetter(instance);\r\n        }\r\n        else if (\r\n        // css module (injected by vue-loader)\r\n        (cssModule = type.__cssModules) &&\r\n            (cssModule = cssModule[key])) {\r\n            return cssModule;\r\n        }\r\n        else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n            // user may set custom properties to `this` that start with `$`\r\n            accessCache[key] = 3 /* CONTEXT */;\r\n            return ctx[key];\r\n        }\r\n        else if (\r\n        // global properties\r\n        ((globalProperties = appContext.config.globalProperties),\r\n            hasOwn(globalProperties, key))) {\r\n            return globalProperties[key];\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production') &&\r\n            currentRenderingInstance &&\r\n            (!isString(key) ||\r\n                // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n                // to infinite warning loop\r\n                key.indexOf('__v') !== 0)) {\r\n            if (data !== EMPTY_OBJ &&\r\n                (key[0] === '$' || key[0] === '_') &&\r\n                hasOwn(data, key)) {\r\n                warn(`Property ${JSON.stringify(key)} must be accessed via $data because it starts with a reserved ` +\r\n                    `character (\"$\" or \"_\") and is not proxied on the render context.`);\r\n            }\r\n            else {\r\n                warn(`Property ${JSON.stringify(key)} was accessed during render ` +\r\n                    `but is not defined on instance.`);\r\n            }\r\n        }\r\n    },\r\n    set({ _: instance }, key, value) {\r\n        const { data, setupState, ctx } = instance;\r\n        if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n            setupState[key] = value;\r\n        }\r\n        else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n            data[key] = value;\r\n        }\r\n        else if (key in instance.props) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate prop \"${key}\". Props are readonly.`, instance);\r\n            return false;\r\n        }\r\n        if (key[0] === '$' && key.slice(1) in instance) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate public property \"${key}\". ` +\r\n                    `Properties starting with $ are reserved and readonly.`, instance);\r\n            return false;\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production') && key in instance.appContext.config.globalProperties) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    value\r\n                });\r\n            }\r\n            else {\r\n                ctx[key] = value;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n    has({ _: { data, setupState, accessCache, ctx, appContext, propsOptions } }, key) {\r\n        let normalizedProps;\r\n        return (accessCache[key] !== undefined ||\r\n            (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n            (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) ||\r\n            ((normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key)) ||\r\n            hasOwn(ctx, key) ||\r\n            hasOwn(publicPropertiesMap, key) ||\r\n            hasOwn(appContext.config.globalProperties, key));\r\n    }\r\n};\r\nif ((process.env.NODE_ENV !== 'production') && !false) {\r\n    PublicInstanceProxyHandlers.ownKeys = (target) => {\r\n        warn(`Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n            `The keys will be empty in production mode to avoid performance overhead.`);\r\n        return Reflect.ownKeys(target);\r\n    };\r\n}\r\nconst RuntimeCompiledPublicInstanceProxyHandlers = extend({}, PublicInstanceProxyHandlers, {\r\n    get(target, key) {\r\n        // fast path for unscopables when using `with` block\r\n        if (key === Symbol.unscopables) {\r\n            return;\r\n        }\r\n        return PublicInstanceProxyHandlers.get(target, key, target);\r\n    },\r\n    has(_, key) {\r\n        const has = key[0] !== '_' && !isGloballyWhitelisted(key);\r\n        if ((process.env.NODE_ENV !== 'production') && !has && PublicInstanceProxyHandlers.has(_, key)) {\r\n            warn(`Property ${JSON.stringify(key)} should not start with _ which is a reserved prefix for Vue internals.`);\r\n        }\r\n        return has;\r\n    }\r\n});\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nfunction createRenderContext(instance) {\r\n    const target = {};\r\n    // expose internal instance for proxy handlers\r\n    Object.defineProperty(target, `_`, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        get: () => instance\r\n    });\r\n    // expose public properties\r\n    Object.keys(publicPropertiesMap).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => publicPropertiesMap[key](instance),\r\n            // intercepted by the proxy so no need for implementation,\r\n            // but needed to prevent set errors\r\n            set: NOOP\r\n        });\r\n    });\r\n    // expose global properties\r\n    const { globalProperties } = instance.appContext.config;\r\n    Object.keys(globalProperties).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => globalProperties[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n    return target;\r\n}\r\n// dev only\r\nfunction exposePropsOnRenderContext(instance) {\r\n    const { ctx, propsOptions: [propsOptions] } = instance;\r\n    if (propsOptions) {\r\n        Object.keys(propsOptions).forEach(key => {\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => instance.props[key],\r\n                set: NOOP\r\n            });\r\n        });\r\n    }\r\n}\r\n// dev only\r\nfunction exposeSetupStateOnRenderContext(instance) {\r\n    const { ctx, setupState } = instance;\r\n    Object.keys(toRaw(setupState)).forEach(key => {\r\n        if (key[0] === '$' || key[0] === '_') {\r\n            warn(`setup() return property ${JSON.stringify(key)} should not start with \"$\" or \"_\" ` +\r\n                `which are reserved prefixes for Vue internals.`);\r\n            return;\r\n        }\r\n        Object.defineProperty(ctx, key, {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: () => setupState[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n}\n\nconst emptyAppContext = createAppContext();\r\nlet uid$1 = 0;\r\nfunction createComponentInstance(vnode, parent, suspense) {\r\n    const type = vnode.type;\r\n    // inherit parent app context - or - if root, adopt from root vnode\r\n    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\r\n    const instance = {\r\n        uid: uid$1++,\r\n        vnode,\r\n        type,\r\n        parent,\r\n        appContext,\r\n        root: null,\r\n        next: null,\r\n        subTree: null,\r\n        update: null,\r\n        render: null,\r\n        proxy: null,\r\n        exposed: null,\r\n        withProxy: null,\r\n        effects: null,\r\n        provides: parent ? parent.provides : Object.create(appContext.provides),\r\n        accessCache: null,\r\n        renderCache: [],\r\n        // local resovled assets\r\n        components: null,\r\n        directives: null,\r\n        // resolved props and emits options\r\n        propsOptions: normalizePropsOptions(type, appContext),\r\n        emitsOptions: normalizeEmitsOptions(type, appContext),\r\n        // emit\r\n        emit: null,\r\n        emitted: null,\r\n        // state\r\n        ctx: EMPTY_OBJ,\r\n        data: EMPTY_OBJ,\r\n        props: EMPTY_OBJ,\r\n        attrs: EMPTY_OBJ,\r\n        slots: EMPTY_OBJ,\r\n        refs: EMPTY_OBJ,\r\n        setupState: EMPTY_OBJ,\r\n        setupContext: null,\r\n        // suspense related\r\n        suspense,\r\n        suspenseId: suspense ? suspense.pendingId : 0,\r\n        asyncDep: null,\r\n        asyncResolved: false,\r\n        // lifecycle hooks\r\n        // not using enums here because it results in computed properties\r\n        isMounted: false,\r\n        isUnmounted: false,\r\n        isDeactivated: false,\r\n        bc: null,\r\n        c: null,\r\n        bm: null,\r\n        m: null,\r\n        bu: null,\r\n        u: null,\r\n        um: null,\r\n        bum: null,\r\n        da: null,\r\n        a: null,\r\n        rtg: null,\r\n        rtc: null,\r\n        ec: null\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        instance.ctx = createRenderContext(instance);\r\n    }\r\n    else {\r\n        instance.ctx = { _: instance };\r\n    }\r\n    instance.root = parent ? parent.root : instance;\r\n    instance.emit = emit.bind(null, instance);\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsComponentAdded(instance);\r\n    }\r\n    return instance;\r\n}\r\nlet currentInstance = null;\r\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\r\nconst setCurrentInstance = (instance) => {\r\n    currentInstance = instance;\r\n};\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component');\r\nfunction validateComponentName(name, config) {\r\n    const appIsNativeTag = config.isNativeTag || NO;\r\n    if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n        warn('Do not use built-in or reserved HTML elements as component id: ' + name);\r\n    }\r\n}\r\nlet isInSSRComponentSetup = false;\r\nfunction setupComponent(instance, isSSR = false) {\r\n    isInSSRComponentSetup = isSSR;\r\n    const { props, children, shapeFlag } = instance.vnode;\r\n    const isStateful = shapeFlag & 4 /* STATEFUL_COMPONENT */;\r\n    initProps(instance, props, isStateful, isSSR);\r\n    initSlots(instance, children);\r\n    const setupResult = isStateful\r\n        ? setupStatefulComponent(instance, isSSR)\r\n        : undefined;\r\n    isInSSRComponentSetup = false;\r\n    return setupResult;\r\n}\r\nfunction setupStatefulComponent(instance, isSSR) {\r\n    const Component = instance.type;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        if (Component.name) {\r\n            validateComponentName(Component.name, instance.appContext.config);\r\n        }\r\n        if (Component.components) {\r\n            const names = Object.keys(Component.components);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateComponentName(names[i], instance.appContext.config);\r\n            }\r\n        }\r\n        if (Component.directives) {\r\n            const names = Object.keys(Component.directives);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateDirectiveName(names[i]);\r\n            }\r\n        }\r\n    }\r\n    // 0. create render proxy property access cache\r\n    instance.accessCache = Object.create(null);\r\n    // 1. create public instance / render proxy\r\n    // also mark it raw so it's never observed\r\n    instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        exposePropsOnRenderContext(instance);\r\n    }\r\n    // 2. call setup()\r\n    const { setup } = Component;\r\n    if (setup) {\r\n        const setupContext = (instance.setupContext =\r\n            setup.length > 1 ? createSetupContext(instance) : null);\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        const setupResult = callWithErrorHandling(setup, instance, 0 /* SETUP_FUNCTION */, [(process.env.NODE_ENV !== 'production') ? shallowReadonly(instance.props) : instance.props, setupContext]);\r\n        resetTracking();\r\n        currentInstance = null;\r\n        if (isPromise(setupResult)) {\r\n            if (isSSR) {\r\n                // return the promise so server-renderer can wait on it\r\n                return setupResult.then((resolvedResult) => {\r\n                    handleSetupResult(instance, resolvedResult);\r\n                });\r\n            }\r\n            else {\r\n                // async setup returned Promise.\r\n                // bail here and wait for re-entry.\r\n                instance.asyncDep = setupResult;\r\n            }\r\n        }\r\n        else {\r\n            handleSetupResult(instance, setupResult);\r\n        }\r\n    }\r\n    else {\r\n        finishComponentSetup(instance);\r\n    }\r\n}\r\nfunction handleSetupResult(instance, setupResult, isSSR) {\r\n    if (isFunction(setupResult)) {\r\n        // setup returned an inline render function\r\n        {\r\n            instance.render = setupResult;\r\n        }\r\n    }\r\n    else if (isObject(setupResult)) {\r\n        if ((process.env.NODE_ENV !== 'production') && isVNode(setupResult)) {\r\n            warn(`setup() should not return VNodes directly - ` +\r\n                `return a render function instead.`);\r\n        }\r\n        // setup returned bindings.\r\n        // assuming a render function compiled from template is present.\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            instance.devtoolsRawSetupState = setupResult;\r\n        }\r\n        instance.setupState = proxyRefs(setupResult);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            exposeSetupStateOnRenderContext(instance);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production') && setupResult !== undefined) {\r\n        warn(`setup() should return an object. Received: ${setupResult === null ? 'null' : typeof setupResult}`);\r\n    }\r\n    finishComponentSetup(instance);\r\n}\r\nlet compile;\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nfunction registerRuntimeCompiler(_compile) {\r\n    compile = _compile;\r\n}\r\nfunction finishComponentSetup(instance, isSSR) {\r\n    const Component = instance.type;\r\n    // template / render function normalization\r\n    if (!instance.render) {\r\n        // could be set from setup()\r\n        if (compile && Component.template && !Component.render) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                startMeasure(instance, `compile`);\r\n            }\r\n            Component.render = compile(Component.template, {\r\n                isCustomElement: instance.appContext.config.isCustomElement,\r\n                delimiters: Component.delimiters\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                endMeasure(instance, `compile`);\r\n            }\r\n        }\r\n        instance.render = (Component.render || NOOP);\r\n        // for runtime-compiled render functions using `with` blocks, the render\r\n        // proxy used needs a different `has` handler which is more performant and\r\n        // also only allows a whitelist of globals to fallthrough.\r\n        if (instance.render._rc) {\r\n            instance.withProxy = new Proxy(instance.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\r\n        }\r\n    }\r\n    // support for 2.x options\r\n    if (__VUE_OPTIONS_API__) {\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        applyOptions(instance, Component);\r\n        resetTracking();\r\n        currentInstance = null;\r\n    }\r\n    // warn missing template/render\r\n    if ((process.env.NODE_ENV !== 'production') && !Component.render && instance.render === NOOP) {\r\n        /* istanbul ignore if */\r\n        if (!compile && Component.template) {\r\n            warn(`Component provided template option but ` +\r\n                `runtime compilation is not supported in this build of Vue.` +\r\n                ( ` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n                    ) /* should not happen */);\r\n        }\r\n        else {\r\n            warn(`Component is missing template or render function.`);\r\n        }\r\n    }\r\n}\r\nconst attrHandlers = {\r\n    get: (target, key) => {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            markAttrsAccessed();\r\n        }\r\n        return target[key];\r\n    },\r\n    set: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    },\r\n    deleteProperty: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    }\r\n};\r\nfunction createSetupContext(instance) {\r\n    const expose = exposed => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.exposed) {\r\n            warn(`expose() should be called only once per setup().`);\r\n        }\r\n        instance.exposed = proxyRefs(exposed);\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        // We use getters in dev in case libs like test-utils overwrite instance\r\n        // properties (overwrites should not be done in prod)\r\n        return Object.freeze({\r\n            get props() {\r\n                return instance.props;\r\n            },\r\n            get attrs() {\r\n                return new Proxy(instance.attrs, attrHandlers);\r\n            },\r\n            get slots() {\r\n                return shallowReadonly(instance.slots);\r\n            },\r\n            get emit() {\r\n                return (event, ...args) => instance.emit(event, ...args);\r\n            },\r\n            expose\r\n        });\r\n    }\r\n    else {\r\n        return {\r\n            attrs: instance.attrs,\r\n            slots: instance.slots,\r\n            emit: instance.emit,\r\n            expose\r\n        };\r\n    }\r\n}\r\n// record effects created during a component's setup() so that they can be\r\n// stopped when the component unmounts\r\nfunction recordInstanceBoundEffect(effect, instance = currentInstance) {\r\n    if (instance) {\r\n        (instance.effects || (instance.effects = [])).push(effect);\r\n    }\r\n}\r\nconst classifyRE = /(?:^|[-_])(\\w)/g;\r\nconst classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\r\nfunction getComponentName(Component) {\r\n    return isFunction(Component)\r\n        ? Component.displayName || Component.name\r\n        : Component.name;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatComponentName(instance, Component, isRoot = false) {\r\n    let name = getComponentName(Component);\r\n    if (!name && Component.__file) {\r\n        const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/);\r\n        if (match) {\r\n            name = match[1];\r\n        }\r\n    }\r\n    if (!name && instance && instance.parent) {\r\n        // try to infer the name based on reverse resolution\r\n        const inferFromRegistry = (registry) => {\r\n            for (const key in registry) {\r\n                if (registry[key] === Component) {\r\n                    return key;\r\n                }\r\n            }\r\n        };\r\n        name =\r\n            inferFromRegistry(instance.components ||\r\n                instance.parent.type.components) || inferFromRegistry(instance.appContext.components);\r\n    }\r\n    return name ? classify(name) : isRoot ? `App` : `Anonymous`;\r\n}\r\nfunction isClassComponent(value) {\r\n    return isFunction(value) && '__vccOpts' in value;\r\n}\n\nfunction computed(getterOrOptions) {\r\n    const c = computed$1(getterOrOptions);\r\n    recordInstanceBoundEffect(c.effect);\r\n    return c;\r\n}\n\n// implementation\r\nfunction defineProps() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`defineProps() is a compiler-hint helper that is only usable inside ` +\r\n            `<script setup> of a single file component. Its arguments should be ` +\r\n            `compiled away and passing it at runtime has no effect.`);\r\n    }\r\n    return null;\r\n}\r\n// implementation\r\nfunction defineEmit() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`defineEmit() is a compiler-hint helper that is only usable inside ` +\r\n            `<script setup> of a single file component. Its arguments should be ` +\r\n            `compiled away and passing it at runtime has no effect.`);\r\n    }\r\n    return null;\r\n}\r\nfunction useContext() {\r\n    const i = getCurrentInstance();\r\n    if ((process.env.NODE_ENV !== 'production') && !i) {\r\n        warn(`useContext() called without active instance.`);\r\n    }\r\n    return i.setupContext || (i.setupContext = createSetupContext(i));\r\n}\n\n// Actual implementation\r\nfunction h(type, propsOrChildren, children) {\r\n    const l = arguments.length;\r\n    if (l === 2) {\r\n        if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\r\n            // single vnode without props\r\n            if (isVNode(propsOrChildren)) {\r\n                return createVNode(type, null, [propsOrChildren]);\r\n            }\r\n            // props without children\r\n            return createVNode(type, propsOrChildren);\r\n        }\r\n        else {\r\n            // omit props\r\n            return createVNode(type, null, propsOrChildren);\r\n        }\r\n    }\r\n    else {\r\n        if (l > 3) {\r\n            children = Array.prototype.slice.call(arguments, 2);\r\n        }\r\n        else if (l === 3 && isVNode(children)) {\r\n            children = [children];\r\n        }\r\n        return createVNode(type, propsOrChildren, children);\r\n    }\r\n}\n\nconst ssrContextKey = Symbol((process.env.NODE_ENV !== 'production') ? `ssrContext` : ``);\r\nconst useSSRContext = () => {\r\n    {\r\n        const ctx = inject(ssrContextKey);\r\n        if (!ctx) {\r\n            warn(`Server rendering context not provided. Make sure to only call ` +\r\n                `useSsrContext() conditionally in the server build.`);\r\n        }\r\n        return ctx;\r\n    }\r\n};\n\nfunction initCustomFormatter() {\r\n    /* eslint-disable no-restricted-globals */\r\n    if (!(process.env.NODE_ENV !== 'production') || typeof window === 'undefined') {\r\n        return;\r\n    }\r\n    const vueStyle = { style: 'color:#3ba776' };\r\n    const numberStyle = { style: 'color:#0b1bc9' };\r\n    const stringStyle = { style: 'color:#b62e24' };\r\n    const keywordStyle = { style: 'color:#9d288c' };\r\n    // custom formatter for Chrome\r\n    // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\r\n    const formatter = {\r\n        header(obj) {\r\n            // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\r\n            if (!isObject(obj)) {\r\n                return null;\r\n            }\r\n            if (obj.__isVue) {\r\n                return ['div', vueStyle, `VueInstance`];\r\n            }\r\n            else if (isRef(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, genRefFlag(obj)],\r\n                    '<',\r\n                    formatValue(obj.value),\r\n                    `>`\r\n                ];\r\n            }\r\n            else if (isReactive(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Reactive'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    `>${isReadonly(obj) ? ` (readonly)` : ``}`\r\n                ];\r\n            }\r\n            else if (isReadonly(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Readonly'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    '>'\r\n                ];\r\n            }\r\n            return null;\r\n        },\r\n        hasBody(obj) {\r\n            return obj && obj.__isVue;\r\n        },\r\n        body(obj) {\r\n            if (obj && obj.__isVue) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ...formatInstance(obj.$)\r\n                ];\r\n            }\r\n        }\r\n    };\r\n    function formatInstance(instance) {\r\n        const blocks = [];\r\n        if (instance.type.props && instance.props) {\r\n            blocks.push(createInstanceBlock('props', toRaw(instance.props)));\r\n        }\r\n        if (instance.setupState !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('setup', instance.setupState));\r\n        }\r\n        if (instance.data !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('data', toRaw(instance.data)));\r\n        }\r\n        const computed = extractKeys(instance, 'computed');\r\n        if (computed) {\r\n            blocks.push(createInstanceBlock('computed', computed));\r\n        }\r\n        const injected = extractKeys(instance, 'inject');\r\n        if (injected) {\r\n            blocks.push(createInstanceBlock('injected', injected));\r\n        }\r\n        blocks.push([\r\n            'div',\r\n            {},\r\n            [\r\n                'span',\r\n                {\r\n                    style: keywordStyle.style + ';opacity:0.66'\r\n                },\r\n                '$ (internal): '\r\n            ],\r\n            ['object', { object: instance }]\r\n        ]);\r\n        return blocks;\r\n    }\r\n    function createInstanceBlock(type, target) {\r\n        target = extend({}, target);\r\n        if (!Object.keys(target).length) {\r\n            return ['span', {}];\r\n        }\r\n        return [\r\n            'div',\r\n            { style: 'line-height:1.25em;margin-bottom:0.6em' },\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'color:#476582'\r\n                },\r\n                type\r\n            ],\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'padding-left:1.25em'\r\n                },\r\n                ...Object.keys(target).map(key => {\r\n                    return [\r\n                        'div',\r\n                        {},\r\n                        ['span', keywordStyle, key + ': '],\r\n                        formatValue(target[key], false)\r\n                    ];\r\n                })\r\n            ]\r\n        ];\r\n    }\r\n    function formatValue(v, asRaw = true) {\r\n        if (typeof v === 'number') {\r\n            return ['span', numberStyle, v];\r\n        }\r\n        else if (typeof v === 'string') {\r\n            return ['span', stringStyle, JSON.stringify(v)];\r\n        }\r\n        else if (typeof v === 'boolean') {\r\n            return ['span', keywordStyle, v];\r\n        }\r\n        else if (isObject(v)) {\r\n            return ['object', { object: asRaw ? toRaw(v) : v }];\r\n        }\r\n        else {\r\n            return ['span', stringStyle, String(v)];\r\n        }\r\n    }\r\n    function extractKeys(instance, type) {\r\n        const Comp = instance.type;\r\n        if (isFunction(Comp)) {\r\n            return;\r\n        }\r\n        const extracted = {};\r\n        for (const key in instance.ctx) {\r\n            if (isKeyOfType(Comp, key, type)) {\r\n                extracted[key] = instance.ctx[key];\r\n            }\r\n        }\r\n        return extracted;\r\n    }\r\n    function isKeyOfType(Comp, key, type) {\r\n        const opts = Comp[type];\r\n        if ((isArray(opts) && opts.includes(key)) ||\r\n            (isObject(opts) && key in opts)) {\r\n            return true;\r\n        }\r\n        if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\r\n            return true;\r\n        }\r\n        if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\r\n            return true;\r\n        }\r\n    }\r\n    function genRefFlag(v) {\r\n        if (v._shallow) {\r\n            return `ShallowRef`;\r\n        }\r\n        if (v.effect) {\r\n            return `ComputedRef`;\r\n        }\r\n        return `Ref`;\r\n    }\r\n    if (window.devtoolsFormatters) {\r\n        window.devtoolsFormatters.push(formatter);\r\n    }\r\n    else {\r\n        window.devtoolsFormatters = [formatter];\r\n    }\r\n}\n\n/**\r\n * Actual implementation\r\n */\r\nfunction renderList(source, renderItem) {\r\n    let ret;\r\n    if (isArray(source) || isString(source)) {\r\n        ret = new Array(source.length);\r\n        for (let i = 0, l = source.length; i < l; i++) {\r\n            ret[i] = renderItem(source[i], i);\r\n        }\r\n    }\r\n    else if (typeof source === 'number') {\r\n        if ((process.env.NODE_ENV !== 'production') && !Number.isInteger(source)) {\r\n            warn(`The v-for range expect an integer value but got ${source}.`);\r\n            return [];\r\n        }\r\n        ret = new Array(source);\r\n        for (let i = 0; i < source; i++) {\r\n            ret[i] = renderItem(i + 1, i);\r\n        }\r\n    }\r\n    else if (isObject(source)) {\r\n        if (source[Symbol.iterator]) {\r\n            ret = Array.from(source, renderItem);\r\n        }\r\n        else {\r\n            const keys = Object.keys(source);\r\n            ret = new Array(keys.length);\r\n            for (let i = 0, l = keys.length; i < l; i++) {\r\n                const key = keys[i];\r\n                ret[i] = renderItem(source[key], key, i);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        ret = [];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nfunction toHandlers(obj) {\r\n    const ret = {};\r\n    if ((process.env.NODE_ENV !== 'production') && !isObject(obj)) {\r\n        warn(`v-on with no argument expects an object value.`);\r\n        return ret;\r\n    }\r\n    for (const key in obj) {\r\n        ret[toHandlerKey(key)] = obj[key];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nfunction createSlots(slots, dynamicSlots) {\r\n    for (let i = 0; i < dynamicSlots.length; i++) {\r\n        const slot = dynamicSlots[i];\r\n        // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n        if (isArray(slot)) {\r\n            for (let j = 0; j < slot.length; j++) {\r\n                slots[slot[j].name] = slot[j].fn;\r\n            }\r\n        }\r\n        else if (slot) {\r\n            // conditional single slot generated by <template v-if=\"...\" #foo>\r\n            slots[slot.name] = slot.fn;\r\n        }\r\n    }\r\n    return slots;\r\n}\n\n// Core API ------------------------------------------------------------------\r\nconst version = \"3.0.5\";\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in cjs builds.\r\n * @internal\r\n */\r\nconst ssrUtils = ( null);\n\nexport { BaseTransition, Comment, Fragment, KeepAlive, Static, Suspense, Teleport, Text, callWithAsyncErrorHandling, callWithErrorHandling, cloneVNode, computed, createBlock, createCommentVNode, createHydrationRenderer, createRenderer, createSlots, createStaticVNode, createTextVNode, createVNode, defineAsyncComponent, defineComponent, defineEmit, defineProps, devtools, getCurrentInstance, getTransitionRawChildren, h, handleError, initCustomFormatter, inject, isVNode, mergeProps, nextTick, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onUnmounted, onUpdated, openBlock, popScopeId, provide, pushScopeId, queuePostFlushCb, registerRuntimeCompiler, renderList, renderSlot, resolveComponent, resolveDirective, resolveDynamicComponent, resolveTransitionHooks, setBlockTracking, setDevtoolsHook, setTransitionHooks, ssrContextKey, ssrUtils, toHandlers, transformVNodeArgs, useContext, useSSRContext, useTransitionState, version, warn, watch, watchEffect, withCtx, withDirectives, withScopeId };\n","import { camelize, warn, callWithAsyncErrorHandling, getCurrentInstance, onMounted, watchEffect, onUpdated, Fragment, h, BaseTransition, useTransitionState, toRaw, getTransitionRawChildren, setTransitionHooks, resolveTransitionHooks, createVNode, createRenderer, createHydrationRenderer } from '@vue/runtime-core';\nexport * from '@vue/runtime-core';\nimport { isString, isArray, hyphenate, capitalize, isSpecialBooleanAttr, isOn, isModelListener, isFunction, EMPTY_OBJ, extend, isObject, toNumber, invokeArrayFns, looseIndexOf, isSet, looseEqual, isHTMLTag, isSVGTag } from '@vue/shared';\n\nconst svgNS = 'http://www.w3.org/2000/svg';\r\nconst doc = (typeof document !== 'undefined' ? document : null);\r\nlet tempContainer;\r\nlet tempSVGContainer;\r\nconst nodeOps = {\r\n    insert: (child, parent, anchor) => {\r\n        parent.insertBefore(child, anchor || null);\r\n    },\r\n    remove: child => {\r\n        const parent = child.parentNode;\r\n        if (parent) {\r\n            parent.removeChild(child);\r\n        }\r\n    },\r\n    createElement: (tag, isSVG, is) => isSVG\r\n        ? doc.createElementNS(svgNS, tag)\r\n        : doc.createElement(tag, is ? { is } : undefined),\r\n    createText: text => doc.createTextNode(text),\r\n    createComment: text => doc.createComment(text),\r\n    setText: (node, text) => {\r\n        node.nodeValue = text;\r\n    },\r\n    setElementText: (el, text) => {\r\n        el.textContent = text;\r\n    },\r\n    parentNode: node => node.parentNode,\r\n    nextSibling: node => node.nextSibling,\r\n    querySelector: selector => doc.querySelector(selector),\r\n    setScopeId(el, id) {\r\n        el.setAttribute(id, '');\r\n    },\r\n    cloneNode(el) {\r\n        return el.cloneNode(true);\r\n    },\r\n    // __UNSAFE__\r\n    // Reason: innerHTML.\r\n    // Static content here can only come from compiled templates.\r\n    // As long as the user only uses trusted templates, this is safe.\r\n    insertStaticContent(content, parent, anchor, isSVG) {\r\n        const temp = isSVG\r\n            ? tempSVGContainer ||\r\n                (tempSVGContainer = doc.createElementNS(svgNS, 'svg'))\r\n            : tempContainer || (tempContainer = doc.createElement('div'));\r\n        temp.innerHTML = content;\r\n        const first = temp.firstChild;\r\n        let node = first;\r\n        let last = node;\r\n        while (node) {\r\n            last = node;\r\n            nodeOps.insert(node, parent, anchor);\r\n            node = temp.firstChild;\r\n        }\r\n        return [first, last];\r\n    }\r\n};\n\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nfunction patchClass(el, value, isSVG) {\r\n    if (value == null) {\r\n        value = '';\r\n    }\r\n    if (isSVG) {\r\n        el.setAttribute('class', value);\r\n    }\r\n    else {\r\n        // directly setting className should be faster than setAttribute in theory\r\n        // if this is an element during a transition, take the temporary transition\r\n        // classes into account.\r\n        const transitionClasses = el._vtc;\r\n        if (transitionClasses) {\r\n            value = (value\r\n                ? [value, ...transitionClasses]\r\n                : [...transitionClasses]).join(' ');\r\n        }\r\n        el.className = value;\r\n    }\r\n}\n\nfunction patchStyle(el, prev, next) {\r\n    const style = el.style;\r\n    if (!next) {\r\n        el.removeAttribute('style');\r\n    }\r\n    else if (isString(next)) {\r\n        if (prev !== next) {\r\n            style.cssText = next;\r\n        }\r\n    }\r\n    else {\r\n        for (const key in next) {\r\n            setStyle(style, key, next[key]);\r\n        }\r\n        if (prev && !isString(prev)) {\r\n            for (const key in prev) {\r\n                if (next[key] == null) {\r\n                    setStyle(style, key, '');\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nconst importantRE = /\\s*!important$/;\r\nfunction setStyle(style, name, val) {\r\n    if (isArray(val)) {\r\n        val.forEach(v => setStyle(style, name, v));\r\n    }\r\n    else {\r\n        if (name.startsWith('--')) {\r\n            // custom property definition\r\n            style.setProperty(name, val);\r\n        }\r\n        else {\r\n            const prefixed = autoPrefix(style, name);\r\n            if (importantRE.test(val)) {\r\n                // !important\r\n                style.setProperty(hyphenate(prefixed), val.replace(importantRE, ''), 'important');\r\n            }\r\n            else {\r\n                style[prefixed] = val;\r\n            }\r\n        }\r\n    }\r\n}\r\nconst prefixes = ['Webkit', 'Moz', 'ms'];\r\nconst prefixCache = {};\r\nfunction autoPrefix(style, rawName) {\r\n    const cached = prefixCache[rawName];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    let name = camelize(rawName);\r\n    if (name !== 'filter' && name in style) {\r\n        return (prefixCache[rawName] = name);\r\n    }\r\n    name = capitalize(name);\r\n    for (let i = 0; i < prefixes.length; i++) {\r\n        const prefixed = prefixes[i] + name;\r\n        if (prefixed in style) {\r\n            return (prefixCache[rawName] = prefixed);\r\n        }\r\n    }\r\n    return rawName;\r\n}\n\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\r\nfunction patchAttr(el, key, value, isSVG) {\r\n    if (isSVG && key.startsWith('xlink:')) {\r\n        if (value == null) {\r\n            el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\r\n        }\r\n        else {\r\n            el.setAttributeNS(xlinkNS, key, value);\r\n        }\r\n    }\r\n    else {\r\n        // note we are only checking boolean attributes that don't have a\r\n        // corresponding dom prop of the same name here.\r\n        const isBoolean = isSpecialBooleanAttr(key);\r\n        if (value == null || (isBoolean && value === false)) {\r\n            el.removeAttribute(key);\r\n        }\r\n        else {\r\n            el.setAttribute(key, isBoolean ? '' : value);\r\n        }\r\n    }\r\n}\n\n// __UNSAFE__\r\n// functions. The user is responsible for using them with only trusted content.\r\nfunction patchDOMProp(el, key, value, \r\n// the following args are passed only due to potential innerHTML/textContent\r\n// overriding existing VNodes, in which case the old tree must be properly\r\n// unmounted.\r\nprevChildren, parentComponent, parentSuspense, unmountChildren) {\r\n    if (key === 'innerHTML' || key === 'textContent') {\r\n        if (prevChildren) {\r\n            unmountChildren(prevChildren, parentComponent, parentSuspense);\r\n        }\r\n        el[key] = value == null ? '' : value;\r\n        return;\r\n    }\r\n    if (key === 'value' && el.tagName !== 'PROGRESS') {\r\n        // store value as _value as well since\r\n        // non-string values will be stringified.\r\n        el._value = value;\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n        return;\r\n    }\r\n    if (value === '' || value == null) {\r\n        const type = typeof el[key];\r\n        if (value === '' && type === 'boolean') {\r\n            // e.g. <select multiple> compiles to { multiple: '' }\r\n            el[key] = true;\r\n            return;\r\n        }\r\n        else if (value == null && type === 'string') {\r\n            // e.g. <div :id=\"null\">\r\n            el[key] = '';\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n        else if (type === 'number') {\r\n            // e.g. <img :width=\"null\">\r\n            el[key] = 0;\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n    }\r\n    // some properties perform value validation and throw\r\n    try {\r\n        el[key] = value;\r\n    }\r\n    catch (e) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: ` +\r\n                `value ${value} is invalid.`, e);\r\n        }\r\n    }\r\n}\n\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nlet _getNow = Date.now;\r\n// Determine what event timestamp the browser is using. Annoyingly, the\r\n// timestamp can either be hi-res (relative to page load) or low-res\r\n// (relative to UNIX epoch), so in order to compare time we have to use the\r\n// same timestamp type when saving the flush timestamp.\r\nif (typeof document !== 'undefined' &&\r\n    _getNow() > document.createEvent('Event').timeStamp) {\r\n    // if the low-res timestamp which is bigger than the event timestamp\r\n    // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n    // and we need to use the hi-res version for event listeners as well.\r\n    _getNow = () => performance.now();\r\n}\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow = 0;\r\nconst p = Promise.resolve();\r\nconst reset = () => {\r\n    cachedNow = 0;\r\n};\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()));\r\nfunction addEventListener(el, event, handler, options) {\r\n    el.addEventListener(event, handler, options);\r\n}\r\nfunction removeEventListener(el, event, handler, options) {\r\n    el.removeEventListener(event, handler, options);\r\n}\r\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\r\n    // vei = vue event invokers\r\n    const invokers = el._vei || (el._vei = {});\r\n    const existingInvoker = invokers[rawName];\r\n    if (nextValue && existingInvoker) {\r\n        // patch\r\n        existingInvoker.value = nextValue;\r\n    }\r\n    else {\r\n        const [name, options] = parseName(rawName);\r\n        if (nextValue) {\r\n            // add\r\n            const invoker = (invokers[rawName] = createInvoker(nextValue, instance));\r\n            addEventListener(el, name, invoker, options);\r\n        }\r\n        else if (existingInvoker) {\r\n            // remove\r\n            removeEventListener(el, name, existingInvoker, options);\r\n            invokers[rawName] = undefined;\r\n        }\r\n    }\r\n}\r\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\r\nfunction parseName(name) {\r\n    let options;\r\n    if (optionsModifierRE.test(name)) {\r\n        options = {};\r\n        let m;\r\n        while ((m = name.match(optionsModifierRE))) {\r\n            name = name.slice(0, name.length - m[0].length);\r\n            options[m[0].toLowerCase()] = true;\r\n        }\r\n    }\r\n    return [name.slice(2).toLowerCase(), options];\r\n}\r\nfunction createInvoker(initialValue, instance) {\r\n    const invoker = (e) => {\r\n        // async edge case #6566: inner click event triggers patch, event handler\r\n        // attached to outer element during patch, and triggered again. This\r\n        // happens because browsers fire microtask ticks between event propagation.\r\n        // the solution is simple: we save the timestamp when a handler is attached,\r\n        // and the handler would only fire if the event passed to it was fired\r\n        // AFTER it was attached.\r\n        const timeStamp = e.timeStamp || _getNow();\r\n        if (timeStamp >= invoker.attached - 1) {\r\n            callWithAsyncErrorHandling(patchStopImmediatePropagation(e, invoker.value), instance, 5 /* NATIVE_EVENT_HANDLER */, [e]);\r\n        }\r\n    };\r\n    invoker.value = initialValue;\r\n    invoker.attached = getNow();\r\n    return invoker;\r\n}\r\nfunction patchStopImmediatePropagation(e, value) {\r\n    if (isArray(value)) {\r\n        const originalStop = e.stopImmediatePropagation;\r\n        e.stopImmediatePropagation = () => {\r\n            originalStop.call(e);\r\n            e._stopped = true;\r\n        };\r\n        return value.map(fn => (e) => !e._stopped && fn(e));\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\n\nconst nativeOnRE = /^on[a-z]/;\r\nconst forcePatchProp = (_, key) => key === 'value';\r\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\r\n    switch (key) {\r\n        // special\r\n        case 'class':\r\n            patchClass(el, nextValue, isSVG);\r\n            break;\r\n        case 'style':\r\n            patchStyle(el, prevValue, nextValue);\r\n            break;\r\n        default:\r\n            if (isOn(key)) {\r\n                // ignore v-model listeners\r\n                if (!isModelListener(key)) {\r\n                    patchEvent(el, key, prevValue, nextValue, parentComponent);\r\n                }\r\n            }\r\n            else if (shouldSetAsProp(el, key, nextValue, isSVG)) {\r\n                patchDOMProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);\r\n            }\r\n            else {\r\n                // special case for <input v-model type=\"checkbox\"> with\r\n                // :true-value & :false-value\r\n                // store value as dom properties since non-string values will be\r\n                // stringified.\r\n                if (key === 'true-value') {\r\n                    el._trueValue = nextValue;\r\n                }\r\n                else if (key === 'false-value') {\r\n                    el._falseValue = nextValue;\r\n                }\r\n                patchAttr(el, key, nextValue, isSVG);\r\n            }\r\n            break;\r\n    }\r\n};\r\nfunction shouldSetAsProp(el, key, value, isSVG) {\r\n    if (isSVG) {\r\n        // most keys must be set as attribute on svg elements to work\r\n        // ...except innerHTML\r\n        if (key === 'innerHTML') {\r\n            return true;\r\n        }\r\n        // or native onclick with function values\r\n        if (key in el && nativeOnRE.test(key) && isFunction(value)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // spellcheck and draggable are numerated attrs, however their\r\n    // corresponding DOM properties are actually booleans - this leads to\r\n    // setting it with a string \"false\" value leading it to be coerced to\r\n    // `true`, so we need to always treat them as attributes.\r\n    // Note that `contentEditable` doesn't have this problem: its DOM\r\n    // property is also enumerated string values.\r\n    if (key === 'spellcheck' || key === 'draggable') {\r\n        return false;\r\n    }\r\n    // #1787 form as an attribute must be a string, while it accepts an Element as\r\n    // a prop\r\n    if (key === 'form' && typeof value === 'string') {\r\n        return false;\r\n    }\r\n    // #1526 <input list> must be set as attribute\r\n    if (key === 'list' && el.tagName === 'INPUT') {\r\n        return false;\r\n    }\r\n    // native onclick with string value, must be set as attribute\r\n    if (nativeOnRE.test(key) && isString(value)) {\r\n        return false;\r\n    }\r\n    return key in el;\r\n}\n\nfunction useCssModule(name = '$style') {\r\n    /* istanbul ignore else */\r\n    {\r\n        const instance = getCurrentInstance();\r\n        if (!instance) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`useCssModule must be called inside setup()`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const modules = instance.type.__cssModules;\r\n        if (!modules) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`Current instance does not have CSS modules injected.`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const mod = modules[name];\r\n        if (!mod) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current instance does not have CSS module named \"${name}\".`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        return mod;\r\n    }\r\n}\n\n/**\r\n * Runtime helper for SFC's CSS variable injection feature.\r\n * @private\r\n */\r\nfunction useCssVars(getter) {\r\n    const instance = getCurrentInstance();\r\n    /* istanbul ignore next */\r\n    if (!instance) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`useCssVars is called without current active component instance.`);\r\n        return;\r\n    }\r\n    const setVars = () => setVarsOnVNode(instance.subTree, getter(instance.proxy));\r\n    onMounted(() => watchEffect(setVars, { flush: 'post' }));\r\n    onUpdated(setVars);\r\n}\r\nfunction setVarsOnVNode(vnode, vars) {\r\n    if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        const suspense = vnode.suspense;\r\n        vnode = suspense.activeBranch;\r\n        if (suspense.pendingBranch && !suspense.isHydrating) {\r\n            suspense.effects.push(() => {\r\n                setVarsOnVNode(suspense.activeBranch, vars);\r\n            });\r\n        }\r\n    }\r\n    // drill down HOCs until it's a non-component vnode\r\n    while (vnode.component) {\r\n        vnode = vnode.component.subTree;\r\n    }\r\n    if (vnode.shapeFlag & 1 /* ELEMENT */ && vnode.el) {\r\n        const style = vnode.el.style;\r\n        for (const key in vars) {\r\n            style.setProperty(`--${key}`, vars[key]);\r\n        }\r\n    }\r\n    else if (vnode.type === Fragment) {\r\n        vnode.children.forEach(c => setVarsOnVNode(c, vars));\r\n    }\r\n}\n\nconst TRANSITION = 'transition';\r\nconst ANIMATION = 'animation';\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nconst Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);\r\nTransition.displayName = 'Transition';\r\nconst DOMTransitionPropsValidators = {\r\n    name: String,\r\n    type: String,\r\n    css: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    duration: [String, Number, Object],\r\n    enterFromClass: String,\r\n    enterActiveClass: String,\r\n    enterToClass: String,\r\n    appearFromClass: String,\r\n    appearActiveClass: String,\r\n    appearToClass: String,\r\n    leaveFromClass: String,\r\n    leaveActiveClass: String,\r\n    leaveToClass: String\r\n};\r\nconst TransitionPropsValidators = (Transition.props = /*#__PURE__*/ extend({}, BaseTransition.props, DOMTransitionPropsValidators));\r\nfunction resolveTransitionProps(rawProps) {\r\n    let { name = 'v', type, css = true, duration, enterFromClass = `${name}-enter-from`, enterActiveClass = `${name}-enter-active`, enterToClass = `${name}-enter-to`, appearFromClass = enterFromClass, appearActiveClass = enterActiveClass, appearToClass = enterToClass, leaveFromClass = `${name}-leave-from`, leaveActiveClass = `${name}-leave-active`, leaveToClass = `${name}-leave-to` } = rawProps;\r\n    const baseProps = {};\r\n    for (const key in rawProps) {\r\n        if (!(key in DOMTransitionPropsValidators)) {\r\n            baseProps[key] = rawProps[key];\r\n        }\r\n    }\r\n    if (!css) {\r\n        return baseProps;\r\n    }\r\n    const durations = normalizeDuration(duration);\r\n    const enterDuration = durations && durations[0];\r\n    const leaveDuration = durations && durations[1];\r\n    const { onBeforeEnter, onEnter, onEnterCancelled, onLeave, onLeaveCancelled, onBeforeAppear = onBeforeEnter, onAppear = onEnter, onAppearCancelled = onEnterCancelled } = baseProps;\r\n    const finishEnter = (el, isAppear, done) => {\r\n        removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n        removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\r\n        done && done();\r\n    };\r\n    const finishLeave = (el, done) => {\r\n        removeTransitionClass(el, leaveToClass);\r\n        removeTransitionClass(el, leaveActiveClass);\r\n        done && done();\r\n    };\r\n    const makeEnterHook = (isAppear) => {\r\n        return (el, done) => {\r\n            const hook = isAppear ? onAppear : onEnter;\r\n            const resolve = () => finishEnter(el, isAppear, done);\r\n            hook && hook(el, resolve);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\r\n                addTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n                if (!(hook && hook.length > 1)) {\r\n                    whenTransitionEnds(el, type, enterDuration, resolve);\r\n                }\r\n            });\r\n        };\r\n    };\r\n    return extend(baseProps, {\r\n        onBeforeEnter(el) {\r\n            onBeforeEnter && onBeforeEnter(el);\r\n            addTransitionClass(el, enterFromClass);\r\n            addTransitionClass(el, enterActiveClass);\r\n        },\r\n        onBeforeAppear(el) {\r\n            onBeforeAppear && onBeforeAppear(el);\r\n            addTransitionClass(el, appearFromClass);\r\n            addTransitionClass(el, appearActiveClass);\r\n        },\r\n        onEnter: makeEnterHook(false),\r\n        onAppear: makeEnterHook(true),\r\n        onLeave(el, done) {\r\n            const resolve = () => finishLeave(el, done);\r\n            addTransitionClass(el, leaveFromClass);\r\n            // force reflow so *-leave-from classes immediately take effect (#2593)\r\n            forceReflow();\r\n            addTransitionClass(el, leaveActiveClass);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, leaveFromClass);\r\n                addTransitionClass(el, leaveToClass);\r\n                if (!(onLeave && onLeave.length > 1)) {\r\n                    whenTransitionEnds(el, type, leaveDuration, resolve);\r\n                }\r\n            });\r\n            onLeave && onLeave(el, resolve);\r\n        },\r\n        onEnterCancelled(el) {\r\n            finishEnter(el, false);\r\n            onEnterCancelled && onEnterCancelled(el);\r\n        },\r\n        onAppearCancelled(el) {\r\n            finishEnter(el, true);\r\n            onAppearCancelled && onAppearCancelled(el);\r\n        },\r\n        onLeaveCancelled(el) {\r\n            finishLeave(el);\r\n            onLeaveCancelled && onLeaveCancelled(el);\r\n        }\r\n    });\r\n}\r\nfunction normalizeDuration(duration) {\r\n    if (duration == null) {\r\n        return null;\r\n    }\r\n    else if (isObject(duration)) {\r\n        return [NumberOf(duration.enter), NumberOf(duration.leave)];\r\n    }\r\n    else {\r\n        const n = NumberOf(duration);\r\n        return [n, n];\r\n    }\r\n}\r\nfunction NumberOf(val) {\r\n    const res = toNumber(val);\r\n    if ((process.env.NODE_ENV !== 'production'))\r\n        validateDuration(res);\r\n    return res;\r\n}\r\nfunction validateDuration(val) {\r\n    if (typeof val !== 'number') {\r\n        warn(`<transition> explicit duration is not a valid number - ` +\r\n            `got ${JSON.stringify(val)}.`);\r\n    }\r\n    else if (isNaN(val)) {\r\n        warn(`<transition> explicit duration is NaN - ` +\r\n            'the duration expression might be incorrect.');\r\n    }\r\n}\r\nfunction addTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.add(c));\r\n    (el._vtc ||\r\n        (el._vtc = new Set())).add(cls);\r\n}\r\nfunction removeTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.remove(c));\r\n    const { _vtc } = el;\r\n    if (_vtc) {\r\n        _vtc.delete(cls);\r\n        if (!_vtc.size) {\r\n            el._vtc = undefined;\r\n        }\r\n    }\r\n}\r\nfunction nextFrame(cb) {\r\n    requestAnimationFrame(() => {\r\n        requestAnimationFrame(cb);\r\n    });\r\n}\r\nlet endId = 0;\r\nfunction whenTransitionEnds(el, expectedType, explicitTimeout, resolve) {\r\n    const id = (el._endId = ++endId);\r\n    const resolveIfNotStale = () => {\r\n        if (id === el._endId) {\r\n            resolve();\r\n        }\r\n    };\r\n    if (explicitTimeout) {\r\n        return setTimeout(resolveIfNotStale, explicitTimeout);\r\n    }\r\n    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\r\n    if (!type) {\r\n        return resolve();\r\n    }\r\n    const endEvent = type + 'end';\r\n    let ended = 0;\r\n    const end = () => {\r\n        el.removeEventListener(endEvent, onEnd);\r\n        resolveIfNotStale();\r\n    };\r\n    const onEnd = (e) => {\r\n        if (e.target === el && ++ended >= propCount) {\r\n            end();\r\n        }\r\n    };\r\n    setTimeout(() => {\r\n        if (ended < propCount) {\r\n            end();\r\n        }\r\n    }, timeout + 1);\r\n    el.addEventListener(endEvent, onEnd);\r\n}\r\nfunction getTransitionInfo(el, expectedType) {\r\n    const styles = window.getComputedStyle(el);\r\n    // JSDOM may return undefined for transition properties\r\n    const getStyleProperties = (key) => (styles[key] || '').split(', ');\r\n    const transitionDelays = getStyleProperties(TRANSITION + 'Delay');\r\n    const transitionDurations = getStyleProperties(TRANSITION + 'Duration');\r\n    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\r\n    const animationDelays = getStyleProperties(ANIMATION + 'Delay');\r\n    const animationDurations = getStyleProperties(ANIMATION + 'Duration');\r\n    const animationTimeout = getTimeout(animationDelays, animationDurations);\r\n    let type = null;\r\n    let timeout = 0;\r\n    let propCount = 0;\r\n    /* istanbul ignore if */\r\n    if (expectedType === TRANSITION) {\r\n        if (transitionTimeout > 0) {\r\n            type = TRANSITION;\r\n            timeout = transitionTimeout;\r\n            propCount = transitionDurations.length;\r\n        }\r\n    }\r\n    else if (expectedType === ANIMATION) {\r\n        if (animationTimeout > 0) {\r\n            type = ANIMATION;\r\n            timeout = animationTimeout;\r\n            propCount = animationDurations.length;\r\n        }\r\n    }\r\n    else {\r\n        timeout = Math.max(transitionTimeout, animationTimeout);\r\n        type =\r\n            timeout > 0\r\n                ? transitionTimeout > animationTimeout\r\n                    ? TRANSITION\r\n                    : ANIMATION\r\n                : null;\r\n        propCount = type\r\n            ? type === TRANSITION\r\n                ? transitionDurations.length\r\n                : animationDurations.length\r\n            : 0;\r\n    }\r\n    const hasTransform = type === TRANSITION &&\r\n        /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property']);\r\n    return {\r\n        type,\r\n        timeout,\r\n        propCount,\r\n        hasTransform\r\n    };\r\n}\r\nfunction getTimeout(delays, durations) {\r\n    while (delays.length < durations.length) {\r\n        delays = delays.concat(delays);\r\n    }\r\n    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\r\n}\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s) {\r\n    return Number(s.slice(0, -1).replace(',', '.')) * 1000;\r\n}\r\n// synchronously force layout to put elements into a certain state\r\nfunction forceReflow() {\r\n    return document.body.offsetHeight;\r\n}\n\nconst positionMap = new WeakMap();\r\nconst newPositionMap = new WeakMap();\r\nconst TransitionGroupImpl = {\r\n    name: 'TransitionGroup',\r\n    props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\r\n        tag: String,\r\n        moveClass: String\r\n    }),\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevChildren;\r\n        let children;\r\n        onUpdated(() => {\r\n            // children is guaranteed to exist after initial render\r\n            if (!prevChildren.length) {\r\n                return;\r\n            }\r\n            const moveClass = props.moveClass || `${props.name || 'v'}-move`;\r\n            if (!hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass)) {\r\n                return;\r\n            }\r\n            // we divide the work into three loops to avoid mixing DOM reads and writes\r\n            // in each iteration - which helps prevent layout thrashing.\r\n            prevChildren.forEach(callPendingCbs);\r\n            prevChildren.forEach(recordPosition);\r\n            const movedChildren = prevChildren.filter(applyTranslation);\r\n            // force reflow to put everything in position\r\n            forceReflow();\r\n            movedChildren.forEach(c => {\r\n                const el = c.el;\r\n                const style = el.style;\r\n                addTransitionClass(el, moveClass);\r\n                style.transform = style.webkitTransform = style.transitionDuration = '';\r\n                const cb = (el._moveCb = (e) => {\r\n                    if (e && e.target !== el) {\r\n                        return;\r\n                    }\r\n                    if (!e || /transform$/.test(e.propertyName)) {\r\n                        el.removeEventListener('transitionend', cb);\r\n                        el._moveCb = null;\r\n                        removeTransitionClass(el, moveClass);\r\n                    }\r\n                });\r\n                el.addEventListener('transitionend', cb);\r\n            });\r\n        });\r\n        return () => {\r\n            const rawProps = toRaw(props);\r\n            const cssTransitionProps = resolveTransitionProps(rawProps);\r\n            const tag = rawProps.tag || Fragment;\r\n            prevChildren = children;\r\n            children = slots.default ? getTransitionRawChildren(slots.default()) : [];\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (child.key != null) {\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`<TransitionGroup> children must be keyed.`);\r\n                }\r\n            }\r\n            if (prevChildren) {\r\n                for (let i = 0; i < prevChildren.length; i++) {\r\n                    const child = prevChildren[i];\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                    positionMap.set(child, child.el.getBoundingClientRect());\r\n                }\r\n            }\r\n            return createVNode(tag, null, children);\r\n        };\r\n    }\r\n};\r\nconst TransitionGroup = TransitionGroupImpl;\r\nfunction callPendingCbs(c) {\r\n    const el = c.el;\r\n    if (el._moveCb) {\r\n        el._moveCb();\r\n    }\r\n    if (el._enterCb) {\r\n        el._enterCb();\r\n    }\r\n}\r\nfunction recordPosition(c) {\r\n    newPositionMap.set(c, c.el.getBoundingClientRect());\r\n}\r\nfunction applyTranslation(c) {\r\n    const oldPos = positionMap.get(c);\r\n    const newPos = newPositionMap.get(c);\r\n    const dx = oldPos.left - newPos.left;\r\n    const dy = oldPos.top - newPos.top;\r\n    if (dx || dy) {\r\n        const s = c.el.style;\r\n        s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\r\n        s.transitionDuration = '0s';\r\n        return c;\r\n    }\r\n}\r\nfunction hasCSSTransform(el, root, moveClass) {\r\n    // Detect whether an element with the move class applied has\r\n    // CSS transitions. Since the element may be inside an entering\r\n    // transition at this very moment, we make a clone of it and remove\r\n    // all other transition classes applied to ensure only the move class\r\n    // is applied.\r\n    const clone = el.cloneNode();\r\n    if (el._vtc) {\r\n        el._vtc.forEach(cls => {\r\n            cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c));\r\n        });\r\n    }\r\n    moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c));\r\n    clone.style.display = 'none';\r\n    const container = (root.nodeType === 1\r\n        ? root\r\n        : root.parentNode);\r\n    container.appendChild(clone);\r\n    const { hasTransform } = getTransitionInfo(clone);\r\n    container.removeChild(clone);\r\n    return hasTransform;\r\n}\n\nconst getModelAssigner = (vnode) => {\r\n    const fn = vnode.props['onUpdate:modelValue'];\r\n    return isArray(fn) ? value => invokeArrayFns(fn, value) : fn;\r\n};\r\nfunction onCompositionStart(e) {\r\n    e.target.composing = true;\r\n}\r\nfunction onCompositionEnd(e) {\r\n    const target = e.target;\r\n    if (target.composing) {\r\n        target.composing = false;\r\n        trigger(target, 'input');\r\n    }\r\n}\r\nfunction trigger(el, type) {\r\n    const e = document.createEvent('HTMLEvents');\r\n    e.initEvent(type, true, true);\r\n    el.dispatchEvent(e);\r\n}\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nconst vModelText = {\r\n    created(el, { modifiers: { lazy, trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        const castToNumber = number || el.type === 'number';\r\n        addEventListener(el, lazy ? 'change' : 'input', e => {\r\n            if (e.target.composing)\r\n                return;\r\n            let domValue = el.value;\r\n            if (trim) {\r\n                domValue = domValue.trim();\r\n            }\r\n            else if (castToNumber) {\r\n                domValue = toNumber(domValue);\r\n            }\r\n            el._assign(domValue);\r\n        });\r\n        if (trim) {\r\n            addEventListener(el, 'change', () => {\r\n                el.value = el.value.trim();\r\n            });\r\n        }\r\n        if (!lazy) {\r\n            addEventListener(el, 'compositionstart', onCompositionStart);\r\n            addEventListener(el, 'compositionend', onCompositionEnd);\r\n            // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n            // switching focus before confirming composition choice\r\n            // this also fixes the issue where some browsers e.g. iOS Chrome\r\n            // fires \"change\" instead of \"input\" on autocomplete.\r\n            addEventListener(el, 'change', onCompositionEnd);\r\n        }\r\n    },\r\n    // set value on mounted so it's after min/max for type=\"range\"\r\n    mounted(el, { value }) {\r\n        el.value = value == null ? '' : value;\r\n    },\r\n    beforeUpdate(el, { value, modifiers: { trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        // avoid clearing unresolved text. #2302\r\n        if (el.composing)\r\n            return;\r\n        if (document.activeElement === el) {\r\n            if (trim && el.value.trim() === value) {\r\n                return;\r\n            }\r\n            if ((number || el.type === 'number') && toNumber(el.value) === value) {\r\n                return;\r\n            }\r\n        }\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n    }\r\n};\r\nconst vModelCheckbox = {\r\n    created(el, _, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            const modelValue = el._modelValue;\r\n            const elementValue = getValue(el);\r\n            const checked = el.checked;\r\n            const assign = el._assign;\r\n            if (isArray(modelValue)) {\r\n                const index = looseIndexOf(modelValue, elementValue);\r\n                const found = index !== -1;\r\n                if (checked && !found) {\r\n                    assign(modelValue.concat(elementValue));\r\n                }\r\n                else if (!checked && found) {\r\n                    const filtered = [...modelValue];\r\n                    filtered.splice(index, 1);\r\n                    assign(filtered);\r\n                }\r\n            }\r\n            else if (isSet(modelValue)) {\r\n                const cloned = new Set(modelValue);\r\n                if (checked) {\r\n                    cloned.add(elementValue);\r\n                }\r\n                else {\r\n                    cloned.delete(elementValue);\r\n                }\r\n                assign(cloned);\r\n            }\r\n            else {\r\n                assign(getCheckboxValue(el, checked));\r\n            }\r\n        });\r\n    },\r\n    // set initial checked on mount to wait for true-value/false-value\r\n    mounted: setChecked,\r\n    beforeUpdate(el, binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        setChecked(el, binding, vnode);\r\n    }\r\n};\r\nfunction setChecked(el, { value, oldValue }, vnode) {\r\n    el._modelValue = value;\r\n    if (isArray(value)) {\r\n        el.checked = looseIndexOf(value, vnode.props.value) > -1;\r\n    }\r\n    else if (isSet(value)) {\r\n        el.checked = value.has(vnode.props.value);\r\n    }\r\n    else if (value !== oldValue) {\r\n        el.checked = looseEqual(value, getCheckboxValue(el, true));\r\n    }\r\n}\r\nconst vModelRadio = {\r\n    created(el, { value }, vnode) {\r\n        el.checked = looseEqual(value, vnode.props.value);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            el._assign(getValue(el));\r\n        });\r\n    },\r\n    beforeUpdate(el, { value, oldValue }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        if (value !== oldValue) {\r\n            el.checked = looseEqual(value, vnode.props.value);\r\n        }\r\n    }\r\n};\r\nconst vModelSelect = {\r\n    created(el, { value, modifiers: { number } }, vnode) {\r\n        const isSetModel = isSet(value);\r\n        addEventListener(el, 'change', () => {\r\n            const selectedVal = Array.prototype.filter\r\n                .call(el.options, (o) => o.selected)\r\n                .map((o) => number ? toNumber(getValue(o)) : getValue(o));\r\n            el._assign(el.multiple\r\n                ? isSetModel\r\n                    ? new Set(selectedVal)\r\n                    : selectedVal\r\n                : selectedVal[0]);\r\n        });\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    // set value in mounted & updated because <select> relies on its children\r\n    // <option>s.\r\n    mounted(el, { value }) {\r\n        setSelected(el, value);\r\n    },\r\n    beforeUpdate(el, _binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    updated(el, { value }) {\r\n        setSelected(el, value);\r\n    }\r\n};\r\nfunction setSelected(el, value) {\r\n    const isMultiple = el.multiple;\r\n    if (isMultiple && !isArray(value) && !isSet(value)) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`<select multiple v-model> expects an Array or Set value for its binding, ` +\r\n                `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`);\r\n        return;\r\n    }\r\n    for (let i = 0, l = el.options.length; i < l; i++) {\r\n        const option = el.options[i];\r\n        const optionValue = getValue(option);\r\n        if (isMultiple) {\r\n            if (isArray(value)) {\r\n                option.selected = looseIndexOf(value, optionValue) > -1;\r\n            }\r\n            else {\r\n                option.selected = value.has(optionValue);\r\n            }\r\n        }\r\n        else {\r\n            if (looseEqual(getValue(option), value)) {\r\n                el.selectedIndex = i;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    if (!isMultiple) {\r\n        el.selectedIndex = -1;\r\n    }\r\n}\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el) {\r\n    return '_value' in el ? el._value : el.value;\r\n}\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(el, checked) {\r\n    const key = checked ? '_trueValue' : '_falseValue';\r\n    return key in el ? el[key] : checked;\r\n}\r\nconst vModelDynamic = {\r\n    created(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'created');\r\n    },\r\n    mounted(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'mounted');\r\n    },\r\n    beforeUpdate(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate');\r\n    },\r\n    updated(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'updated');\r\n    }\r\n};\r\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\r\n    let modelToUse;\r\n    switch (el.tagName) {\r\n        case 'SELECT':\r\n            modelToUse = vModelSelect;\r\n            break;\r\n        case 'TEXTAREA':\r\n            modelToUse = vModelText;\r\n            break;\r\n        default:\r\n            switch (vnode.props && vnode.props.type) {\r\n                case 'checkbox':\r\n                    modelToUse = vModelCheckbox;\r\n                    break;\r\n                case 'radio':\r\n                    modelToUse = vModelRadio;\r\n                    break;\r\n                default:\r\n                    modelToUse = vModelText;\r\n            }\r\n    }\r\n    const fn = modelToUse[hook];\r\n    fn && fn(el, binding, vnode, prevVNode);\r\n}\n\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta'];\r\nconst modifierGuards = {\r\n    stop: e => e.stopPropagation(),\r\n    prevent: e => e.preventDefault(),\r\n    self: e => e.target !== e.currentTarget,\r\n    ctrl: e => !e.ctrlKey,\r\n    shift: e => !e.shiftKey,\r\n    alt: e => !e.altKey,\r\n    meta: e => !e.metaKey,\r\n    left: e => 'button' in e && e.button !== 0,\r\n    middle: e => 'button' in e && e.button !== 1,\r\n    right: e => 'button' in e && e.button !== 2,\r\n    exact: (e, modifiers) => systemModifiers.some(m => e[`${m}Key`] && !modifiers.includes(m))\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withModifiers = (fn, modifiers) => {\r\n    return (event, ...args) => {\r\n        for (let i = 0; i < modifiers.length; i++) {\r\n            const guard = modifierGuards[modifiers[i]];\r\n            if (guard && guard(event, modifiers))\r\n                return;\r\n        }\r\n        return fn(event, ...args);\r\n    };\r\n};\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames = {\r\n    esc: 'escape',\r\n    space: ' ',\r\n    up: 'arrow-up',\r\n    left: 'arrow-left',\r\n    right: 'arrow-right',\r\n    down: 'arrow-down',\r\n    delete: 'backspace'\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withKeys = (fn, modifiers) => {\r\n    return (event) => {\r\n        if (!('key' in event))\r\n            return;\r\n        const eventKey = hyphenate(event.key);\r\n        if (\r\n        // None of the provided key modifiers match the current event key\r\n        !modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n            return;\r\n        }\r\n        return fn(event);\r\n    };\r\n};\n\nconst vShow = {\r\n    beforeMount(el, { value }, { transition }) {\r\n        el._vod = el.style.display === 'none' ? '' : el.style.display;\r\n        if (transition && value) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    mounted(el, { value }, { transition }) {\r\n        if (transition && value) {\r\n            transition.enter(el);\r\n        }\r\n    },\r\n    updated(el, { value, oldValue }, { transition }) {\r\n        if (transition && value !== oldValue) {\r\n            if (value) {\r\n                transition.beforeEnter(el);\r\n                setDisplay(el, true);\r\n                transition.enter(el);\r\n            }\r\n            else {\r\n                transition.leave(el, () => {\r\n                    setDisplay(el, false);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    beforeUnmount(el, { value }) {\r\n        setDisplay(el, value);\r\n    }\r\n};\r\nfunction setDisplay(el, value) {\r\n    el.style.display = value ? el._vod : 'none';\r\n}\n\nconst rendererOptions = extend({ patchProp, forcePatchProp }, nodeOps);\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer;\r\nlet enabledHydration = false;\r\nfunction ensureRenderer() {\r\n    return renderer || (renderer = createRenderer(rendererOptions));\r\n}\r\nfunction ensureHydrationRenderer() {\r\n    renderer = enabledHydration\r\n        ? renderer\r\n        : createHydrationRenderer(rendererOptions);\r\n    enabledHydration = true;\r\n    return renderer;\r\n}\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nconst render = ((...args) => {\r\n    ensureRenderer().render(...args);\r\n});\r\nconst hydrate = ((...args) => {\r\n    ensureHydrationRenderer().hydrate(...args);\r\n});\r\nconst createApp = ((...args) => {\r\n    const app = ensureRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (!container)\r\n            return;\r\n        const component = app._component;\r\n        if (!isFunction(component) && !component.render && !component.template) {\r\n            component.template = container.innerHTML;\r\n        }\r\n        // clear content before mounting\r\n        container.innerHTML = '';\r\n        const proxy = mount(container);\r\n        if (container instanceof Element) {\r\n            container.removeAttribute('v-cloak');\r\n            container.setAttribute('data-v-app', '');\r\n        }\r\n        return proxy;\r\n    };\r\n    return app;\r\n});\r\nconst createSSRApp = ((...args) => {\r\n    const app = ensureHydrationRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (container) {\r\n            return mount(container, true);\r\n        }\r\n    };\r\n    return app;\r\n});\r\nfunction injectNativeTagCheck(app) {\r\n    // Inject `isNativeTag`\r\n    // this is used for component name validation (dev only)\r\n    Object.defineProperty(app.config, 'isNativeTag', {\r\n        value: (tag) => isHTMLTag(tag) || isSVGTag(tag),\r\n        writable: false\r\n    });\r\n}\r\nfunction normalizeContainer(container) {\r\n    if (isString(container)) {\r\n        const res = document.querySelector(container);\r\n        if ((process.env.NODE_ENV !== 'production') && !res) {\r\n            warn(`Failed to mount app: mount target selector \"${container}\" returned null.`);\r\n        }\r\n        return res;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        container instanceof ShadowRoot &&\r\n        container.mode === 'closed') {\r\n        warn(`mounting on a ShadowRoot with \\`{mode: \"closed\"}\\` may lead to unpredictable bugs`);\r\n    }\r\n    return container;\r\n}\n\nexport { Transition, TransitionGroup, createApp, createSSRApp, hydrate, render, useCssModule, useCssVars, vModelCheckbox, vModelDynamic, vModelRadio, vModelSelect, vModelText, vShow, withKeys, withModifiers };\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","// Register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\nvar isLocalhost = function () { return Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n); }\n\nvar waitWindowLoad\n// https://github.com/yyx990803/register-service-worker/pull/33#discussion_r394181861\nif (typeof window !== 'undefined') {\n  // Typically, a browser that supports `serviceWorker` should also have supported\n  // `Promise`. But as this package can be used in environments without service\n  // worker support (in that case it would do nothing), there's a chance that\n  // `Promise` does not exist. So we must check for its existence first.\n  if (typeof Promise !== 'undefined') {\n    waitWindowLoad = new Promise(function (resolve) { return window.addEventListener('load', resolve); })\n  } else {\n    waitWindowLoad = { then: function (cb) { return window.addEventListener('load', cb); } }\n  }\n}\n\nexport function register (swUrl, hooks) {\n  if ( hooks === void 0 ) hooks = {};\n\n  var registrationOptions = hooks.registrationOptions; if ( registrationOptions === void 0 ) registrationOptions = {};\n  delete hooks.registrationOptions\n\n  var emit = function (hook) {\n    var args = [], len = arguments.length - 1;\n    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n    if (hooks && hooks[hook]) {\n      hooks[hook].apply(hooks, args)\n    }\n  }\n\n  if ('serviceWorker' in navigator) {\n    waitWindowLoad.then(function () {\n      if (isLocalhost()) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, emit, registrationOptions)\n        navigator.serviceWorker.ready.then(function (registration) {\n          emit('ready', registration)\n        }).catch(function (error) { return handleError(emit, error); })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, emit, registrationOptions)\n        navigator.serviceWorker.ready.then(function (registration) {\n          emit('ready', registration)\n        }).catch(function (error) { return handleError(emit, error); })\n      }\n    })\n  }\n}\n\nfunction handleError (emit, error) {\n  if (!navigator.onLine) {\n    emit('offline')\n  }\n  emit('error', error)\n}\n\nfunction registerValidSW (swUrl, emit, registrationOptions) {\n  navigator.serviceWorker\n    .register(swUrl, registrationOptions)\n    .then(function (registration) {\n      emit('registered', registration)\n      if (registration.waiting) {\n        emit('updated', registration)\n        return\n      }\n      registration.onupdatefound = function () {\n        emit('updatefound', registration)\n        var installingWorker = registration.installing\n        installingWorker.onstatechange = function () {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              emit('updated', registration)\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              emit('cached', registration)\n            }\n          }\n        }\n      }\n    })\n    .catch(function (error) { return handleError(emit, error); })\n}\n\nfunction checkValidServiceWorker (swUrl, emit, registrationOptions) {\n  // Check if the service worker can be found.\n  fetch(swUrl)\n    .then(function (response) {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (response.status === 404) {\n        // No service worker found.\n        emit('error', new Error((\"Service worker not found at \" + swUrl)))\n        unregister()\n      } else if (response.headers.get('content-type').indexOf('javascript') === -1) {\n        emit('error', new Error(\n          \"Expected \" + swUrl + \" to have javascript content-type, \" +\n          \"but received \" + (response.headers.get('content-type'))))\n        unregister()\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, emit, registrationOptions)\n      }\n    })\n    .catch(function (error) { return handleError(emit, error); })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(function (registration) {\n      registration.unregister()\n    }).catch(function (error) { return handleError(emit, error); })\n  }\n}\n","/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n/**\r\n * dev only flag -> name mapping\r\n */\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [2048 /* DEV_ROOT_FRAGMENT */]: `DEV_ROOT_FRAGMENT`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\n/**\r\n * Dev only\r\n */\r\nconst slotFlagsText = {\r\n    [1 /* STABLE */]: 'STABLE',\r\n    [2 /* DYNAMIC */]: 'DYNAMIC',\r\n    [3 /* FORWARDED */]: 'FORWARDED'\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    const lines = source.split(/\\r?\\n/);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count += lines[i].length + 1;\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - lineLength) + 1;\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + 1;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = normalizeStyle(isString(item) ? parseStringStyle(item) : item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            res += normalizeClass(value[i]) + ' ';\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.substring(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isObject(val)\r\n            ? JSON.stringify(val, replacer, 2)\r\n            : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\n/**\r\n * List of @babel/parser plugins that are used for template expression\r\n * transforms and SFC script transforms. By default we enable proposals slated\r\n * for ES2020. This will need to be updated as the spec moves forward.\r\n * Full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n */\r\nconst babelParserDefaultPlugins = [\r\n    'bigInt',\r\n    'optionalChaining',\r\n    'nullishCoalescingOperator'\r\n];\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = (process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    // extract \"RawType\" from strings like \"[object RawType]\"\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap(\r\n// the leading comma is intentional so empty string \"\" is also included\r\n',key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\r\n/**\r\n * @private\r\n */\r\nconst toHandlerKey = cacheStringFunction((str) => (str ? `on${capitalize(str)}` : ``));\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, babelParserDefaultPlugins, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, invokeArrayFns, isArray, isBooleanAttr, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownAttr, isMap, isModelListener, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, makeMap, normalizeClass, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, slotFlagsText, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n"],"sourceRoot":""}